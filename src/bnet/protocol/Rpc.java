// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lib/rpc/rpc.proto

package bnet.protocol;

public final class Rpc {
  private Rpc() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class NO_RESPONSE extends
      com.google.protobuf.GeneratedMessage {
    // Use NO_RESPONSE.newBuilder() to construct.
    private NO_RESPONSE() {
      initFields();
    }
    private NO_RESPONSE(boolean noInit) {}
    
    private static final NO_RESPONSE defaultInstance;
    public static NO_RESPONSE getDefaultInstance() {
      return defaultInstance;
    }
    
    public NO_RESPONSE getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.Rpc.internal_static_bnet_protocol_NO_RESPONSE_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.Rpc.internal_static_bnet_protocol_NO_RESPONSE_fieldAccessorTable;
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.Rpc.NO_RESPONSE parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.Rpc.NO_RESPONSE parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.Rpc.NO_RESPONSE parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.Rpc.NO_RESPONSE parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.Rpc.NO_RESPONSE parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.Rpc.NO_RESPONSE parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.Rpc.NO_RESPONSE parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.Rpc.NO_RESPONSE parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.Rpc.NO_RESPONSE parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.Rpc.NO_RESPONSE parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.Rpc.NO_RESPONSE prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.Rpc.NO_RESPONSE result;
      
      // Construct using bnet.protocol.Rpc.NO_RESPONSE.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.Rpc.NO_RESPONSE();
        return builder;
      }
      
      protected bnet.protocol.Rpc.NO_RESPONSE internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.Rpc.NO_RESPONSE();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.Rpc.NO_RESPONSE.getDescriptor();
      }
      
      public bnet.protocol.Rpc.NO_RESPONSE getDefaultInstanceForType() {
        return bnet.protocol.Rpc.NO_RESPONSE.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.Rpc.NO_RESPONSE build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.Rpc.NO_RESPONSE buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.Rpc.NO_RESPONSE buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.Rpc.NO_RESPONSE returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.Rpc.NO_RESPONSE) {
          return mergeFrom((bnet.protocol.Rpc.NO_RESPONSE)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.Rpc.NO_RESPONSE other) {
        if (other == bnet.protocol.Rpc.NO_RESPONSE.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
          }
        }
      }
      
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.NO_RESPONSE)
    }
    
    static {
      defaultInstance = new NO_RESPONSE(true);
      bnet.protocol.Rpc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.NO_RESPONSE)
  }
  
  public static final class Address extends
      com.google.protobuf.GeneratedMessage {
    // Use Address.newBuilder() to construct.
    private Address() {
      initFields();
    }
    private Address(boolean noInit) {}
    
    private static final Address defaultInstance;
    public static Address getDefaultInstance() {
      return defaultInstance;
    }
    
    public Address getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.Rpc.internal_static_bnet_protocol_Address_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.Rpc.internal_static_bnet_protocol_Address_fieldAccessorTable;
    }
    
    // required string address = 1;
    public static final int ADDRESS_FIELD_NUMBER = 1;
    private boolean hasAddress;
    private java.lang.String address_ = "";
    public boolean hasAddress() { return hasAddress; }
    public java.lang.String getAddress() { return address_; }
    
    // optional uint32 port = 2;
    public static final int PORT_FIELD_NUMBER = 2;
    private boolean hasPort;
    private int port_ = 0;
    public boolean hasPort() { return hasPort; }
    public int getPort() { return port_; }
    
    // optional .bnet.protocol.Address next = 3;
    public static final int NEXT_FIELD_NUMBER = 3;
    private boolean hasNext;
    private bnet.protocol.Rpc.Address next_;
    public boolean hasNext() { return hasNext; }
    public bnet.protocol.Rpc.Address getNext() { return next_; }
    
    private void initFields() {
      next_ = bnet.protocol.Rpc.Address.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasAddress) return false;
      if (hasNext()) {
        if (!getNext().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAddress()) {
        output.writeString(1, getAddress());
      }
      if (hasPort()) {
        output.writeUInt32(2, getPort());
      }
      if (hasNext()) {
        output.writeMessage(3, getNext());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAddress()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getAddress());
      }
      if (hasPort()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getPort());
      }
      if (hasNext()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getNext());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.Rpc.Address parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.Rpc.Address parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.Rpc.Address parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.Rpc.Address parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.Rpc.Address parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.Rpc.Address parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.Rpc.Address parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.Rpc.Address parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.Rpc.Address parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.Rpc.Address parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.Rpc.Address prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.Rpc.Address result;
      
      // Construct using bnet.protocol.Rpc.Address.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.Rpc.Address();
        return builder;
      }
      
      protected bnet.protocol.Rpc.Address internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.Rpc.Address();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.Rpc.Address.getDescriptor();
      }
      
      public bnet.protocol.Rpc.Address getDefaultInstanceForType() {
        return bnet.protocol.Rpc.Address.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.Rpc.Address build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.Rpc.Address buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.Rpc.Address buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.Rpc.Address returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.Rpc.Address) {
          return mergeFrom((bnet.protocol.Rpc.Address)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.Rpc.Address other) {
        if (other == bnet.protocol.Rpc.Address.getDefaultInstance()) return this;
        if (other.hasAddress()) {
          setAddress(other.getAddress());
        }
        if (other.hasPort()) {
          setPort(other.getPort());
        }
        if (other.hasNext()) {
          mergeNext(other.getNext());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setAddress(input.readString());
              break;
            }
            case 16: {
              setPort(input.readUInt32());
              break;
            }
            case 26: {
              bnet.protocol.Rpc.Address.Builder subBuilder = bnet.protocol.Rpc.Address.newBuilder();
              if (hasNext()) {
                subBuilder.mergeFrom(getNext());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setNext(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string address = 1;
      public boolean hasAddress() {
        return result.hasAddress();
      }
      public java.lang.String getAddress() {
        return result.getAddress();
      }
      public Builder setAddress(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasAddress = true;
        result.address_ = value;
        return this;
      }
      public Builder clearAddress() {
        result.hasAddress = false;
        result.address_ = getDefaultInstance().getAddress();
        return this;
      }
      
      // optional uint32 port = 2;
      public boolean hasPort() {
        return result.hasPort();
      }
      public int getPort() {
        return result.getPort();
      }
      public Builder setPort(int value) {
        result.hasPort = true;
        result.port_ = value;
        return this;
      }
      public Builder clearPort() {
        result.hasPort = false;
        result.port_ = 0;
        return this;
      }
      
      // optional .bnet.protocol.Address next = 3;
      public boolean hasNext() {
        return result.hasNext();
      }
      public bnet.protocol.Rpc.Address getNext() {
        return result.getNext();
      }
      public Builder setNext(bnet.protocol.Rpc.Address value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasNext = true;
        result.next_ = value;
        return this;
      }
      public Builder setNext(bnet.protocol.Rpc.Address.Builder builderForValue) {
        result.hasNext = true;
        result.next_ = builderForValue.build();
        return this;
      }
      public Builder mergeNext(bnet.protocol.Rpc.Address value) {
        if (result.hasNext() &&
            result.next_ != bnet.protocol.Rpc.Address.getDefaultInstance()) {
          result.next_ =
            bnet.protocol.Rpc.Address.newBuilder(result.next_).mergeFrom(value).buildPartial();
        } else {
          result.next_ = value;
        }
        result.hasNext = true;
        return this;
      }
      public Builder clearNext() {
        result.hasNext = false;
        result.next_ = bnet.protocol.Rpc.Address.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.Address)
    }
    
    static {
      defaultInstance = new Address(true);
      bnet.protocol.Rpc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.Address)
  }
  
  public static final class ProcessId extends
      com.google.protobuf.GeneratedMessage {
    // Use ProcessId.newBuilder() to construct.
    private ProcessId() {
      initFields();
    }
    private ProcessId(boolean noInit) {}
    
    private static final ProcessId defaultInstance;
    public static ProcessId getDefaultInstance() {
      return defaultInstance;
    }
    
    public ProcessId getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.Rpc.internal_static_bnet_protocol_ProcessId_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.Rpc.internal_static_bnet_protocol_ProcessId_fieldAccessorTable;
    }
    
    // required uint32 label = 1;
    public static final int LABEL_FIELD_NUMBER = 1;
    private boolean hasLabel;
    private int label_ = 0;
    public boolean hasLabel() { return hasLabel; }
    public int getLabel() { return label_; }
    
    // required uint32 epoch = 2;
    public static final int EPOCH_FIELD_NUMBER = 2;
    private boolean hasEpoch;
    private int epoch_ = 0;
    public boolean hasEpoch() { return hasEpoch; }
    public int getEpoch() { return epoch_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasLabel) return false;
      if (!hasEpoch) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasLabel()) {
        output.writeUInt32(1, getLabel());
      }
      if (hasEpoch()) {
        output.writeUInt32(2, getEpoch());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasLabel()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getLabel());
      }
      if (hasEpoch()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getEpoch());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.Rpc.ProcessId parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.Rpc.ProcessId parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.Rpc.ProcessId parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.Rpc.ProcessId parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.Rpc.ProcessId parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.Rpc.ProcessId parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.Rpc.ProcessId parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.Rpc.ProcessId parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.Rpc.ProcessId parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.Rpc.ProcessId parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.Rpc.ProcessId prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.Rpc.ProcessId result;
      
      // Construct using bnet.protocol.Rpc.ProcessId.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.Rpc.ProcessId();
        return builder;
      }
      
      protected bnet.protocol.Rpc.ProcessId internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.Rpc.ProcessId();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.Rpc.ProcessId.getDescriptor();
      }
      
      public bnet.protocol.Rpc.ProcessId getDefaultInstanceForType() {
        return bnet.protocol.Rpc.ProcessId.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.Rpc.ProcessId build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.Rpc.ProcessId buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.Rpc.ProcessId buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.Rpc.ProcessId returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.Rpc.ProcessId) {
          return mergeFrom((bnet.protocol.Rpc.ProcessId)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.Rpc.ProcessId other) {
        if (other == bnet.protocol.Rpc.ProcessId.getDefaultInstance()) return this;
        if (other.hasLabel()) {
          setLabel(other.getLabel());
        }
        if (other.hasEpoch()) {
          setEpoch(other.getEpoch());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setLabel(input.readUInt32());
              break;
            }
            case 16: {
              setEpoch(input.readUInt32());
              break;
            }
          }
        }
      }
      
      
      // required uint32 label = 1;
      public boolean hasLabel() {
        return result.hasLabel();
      }
      public int getLabel() {
        return result.getLabel();
      }
      public Builder setLabel(int value) {
        result.hasLabel = true;
        result.label_ = value;
        return this;
      }
      public Builder clearLabel() {
        result.hasLabel = false;
        result.label_ = 0;
        return this;
      }
      
      // required uint32 epoch = 2;
      public boolean hasEpoch() {
        return result.hasEpoch();
      }
      public int getEpoch() {
        return result.getEpoch();
      }
      public Builder setEpoch(int value) {
        result.hasEpoch = true;
        result.epoch_ = value;
        return this;
      }
      public Builder clearEpoch() {
        result.hasEpoch = false;
        result.epoch_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.ProcessId)
    }
    
    static {
      defaultInstance = new ProcessId(true);
      bnet.protocol.Rpc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.ProcessId)
  }
  
  public static final class ObjectAddress extends
      com.google.protobuf.GeneratedMessage {
    // Use ObjectAddress.newBuilder() to construct.
    private ObjectAddress() {
      initFields();
    }
    private ObjectAddress(boolean noInit) {}
    
    private static final ObjectAddress defaultInstance;
    public static ObjectAddress getDefaultInstance() {
      return defaultInstance;
    }
    
    public ObjectAddress getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.Rpc.internal_static_bnet_protocol_ObjectAddress_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.Rpc.internal_static_bnet_protocol_ObjectAddress_fieldAccessorTable;
    }
    
    // required .bnet.protocol.ProcessId host = 1;
    public static final int HOST_FIELD_NUMBER = 1;
    private boolean hasHost;
    private bnet.protocol.Rpc.ProcessId host_;
    public boolean hasHost() { return hasHost; }
    public bnet.protocol.Rpc.ProcessId getHost() { return host_; }
    
    // required uint64 object_id = 2;
    public static final int OBJECT_ID_FIELD_NUMBER = 2;
    private boolean hasObjectId;
    private long objectId_ = 0L;
    public boolean hasObjectId() { return hasObjectId; }
    public long getObjectId() { return objectId_; }
    
    private void initFields() {
      host_ = bnet.protocol.Rpc.ProcessId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasHost) return false;
      if (!hasObjectId) return false;
      if (!getHost().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasHost()) {
        output.writeMessage(1, getHost());
      }
      if (hasObjectId()) {
        output.writeUInt64(2, getObjectId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasHost()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHost());
      }
      if (hasObjectId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, getObjectId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.Rpc.ObjectAddress parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.Rpc.ObjectAddress parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.Rpc.ObjectAddress parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.Rpc.ObjectAddress parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.Rpc.ObjectAddress parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.Rpc.ObjectAddress parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.Rpc.ObjectAddress parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.Rpc.ObjectAddress parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.Rpc.ObjectAddress parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.Rpc.ObjectAddress parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.Rpc.ObjectAddress prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.Rpc.ObjectAddress result;
      
      // Construct using bnet.protocol.Rpc.ObjectAddress.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.Rpc.ObjectAddress();
        return builder;
      }
      
      protected bnet.protocol.Rpc.ObjectAddress internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.Rpc.ObjectAddress();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.Rpc.ObjectAddress.getDescriptor();
      }
      
      public bnet.protocol.Rpc.ObjectAddress getDefaultInstanceForType() {
        return bnet.protocol.Rpc.ObjectAddress.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.Rpc.ObjectAddress build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.Rpc.ObjectAddress buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.Rpc.ObjectAddress buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.Rpc.ObjectAddress returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.Rpc.ObjectAddress) {
          return mergeFrom((bnet.protocol.Rpc.ObjectAddress)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.Rpc.ObjectAddress other) {
        if (other == bnet.protocol.Rpc.ObjectAddress.getDefaultInstance()) return this;
        if (other.hasHost()) {
          mergeHost(other.getHost());
        }
        if (other.hasObjectId()) {
          setObjectId(other.getObjectId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Rpc.ProcessId.Builder subBuilder = bnet.protocol.Rpc.ProcessId.newBuilder();
              if (hasHost()) {
                subBuilder.mergeFrom(getHost());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setHost(subBuilder.buildPartial());
              break;
            }
            case 16: {
              setObjectId(input.readUInt64());
              break;
            }
          }
        }
      }
      
      
      // required .bnet.protocol.ProcessId host = 1;
      public boolean hasHost() {
        return result.hasHost();
      }
      public bnet.protocol.Rpc.ProcessId getHost() {
        return result.getHost();
      }
      public Builder setHost(bnet.protocol.Rpc.ProcessId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasHost = true;
        result.host_ = value;
        return this;
      }
      public Builder setHost(bnet.protocol.Rpc.ProcessId.Builder builderForValue) {
        result.hasHost = true;
        result.host_ = builderForValue.build();
        return this;
      }
      public Builder mergeHost(bnet.protocol.Rpc.ProcessId value) {
        if (result.hasHost() &&
            result.host_ != bnet.protocol.Rpc.ProcessId.getDefaultInstance()) {
          result.host_ =
            bnet.protocol.Rpc.ProcessId.newBuilder(result.host_).mergeFrom(value).buildPartial();
        } else {
          result.host_ = value;
        }
        result.hasHost = true;
        return this;
      }
      public Builder clearHost() {
        result.hasHost = false;
        result.host_ = bnet.protocol.Rpc.ProcessId.getDefaultInstance();
        return this;
      }
      
      // required uint64 object_id = 2;
      public boolean hasObjectId() {
        return result.hasObjectId();
      }
      public long getObjectId() {
        return result.getObjectId();
      }
      public Builder setObjectId(long value) {
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder clearObjectId() {
        result.hasObjectId = false;
        result.objectId_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.ObjectAddress)
    }
    
    static {
      defaultInstance = new ObjectAddress(true);
      bnet.protocol.Rpc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.ObjectAddress)
  }
  
  public static final class NoData extends
      com.google.protobuf.GeneratedMessage {
    // Use NoData.newBuilder() to construct.
    private NoData() {
      initFields();
    }
    private NoData(boolean noInit) {}
    
    private static final NoData defaultInstance;
    public static NoData getDefaultInstance() {
      return defaultInstance;
    }
    
    public NoData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.Rpc.internal_static_bnet_protocol_NoData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.Rpc.internal_static_bnet_protocol_NoData_fieldAccessorTable;
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.Rpc.NoData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.Rpc.NoData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.Rpc.NoData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.Rpc.NoData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.Rpc.NoData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.Rpc.NoData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.Rpc.NoData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.Rpc.NoData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.Rpc.NoData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.Rpc.NoData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.Rpc.NoData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.Rpc.NoData result;
      
      // Construct using bnet.protocol.Rpc.NoData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.Rpc.NoData();
        return builder;
      }
      
      protected bnet.protocol.Rpc.NoData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.Rpc.NoData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.Rpc.NoData.getDescriptor();
      }
      
      public bnet.protocol.Rpc.NoData getDefaultInstanceForType() {
        return bnet.protocol.Rpc.NoData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.Rpc.NoData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.Rpc.NoData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.Rpc.NoData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.Rpc.NoData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.Rpc.NoData) {
          return mergeFrom((bnet.protocol.Rpc.NoData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.Rpc.NoData other) {
        if (other == bnet.protocol.Rpc.NoData.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
          }
        }
      }
      
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.NoData)
    }
    
    static {
      defaultInstance = new NoData(true);
      bnet.protocol.Rpc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.NoData)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_NO_RESPONSE_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_NO_RESPONSE_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_Address_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_Address_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_ProcessId_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_ProcessId_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_ObjectAddress_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_ObjectAddress_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_NoData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_NoData_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021lib/rpc/rpc.proto\022\rbnet.protocol\032 goog" +
      "le/protobuf/descriptor.proto\"\r\n\013NO_RESPO" +
      "NSE\"N\n\007Address\022\017\n\007address\030\001 \002(\t\022\014\n\004port\030" +
      "\002 \001(\r\022$\n\004next\030\003 \001(\0132\026.bnet.protocol.Addr" +
      "ess\")\n\tProcessId\022\r\n\005label\030\001 \002(\r\022\r\n\005epoch" +
      "\030\002 \002(\r\"J\n\rObjectAddress\022&\n\004host\030\001 \002(\0132\030." +
      "bnet.protocol.ProcessId\022\021\n\tobject_id\030\002 \002" +
      "(\004\"\010\n\006NoData"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_bnet_protocol_NO_RESPONSE_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_bnet_protocol_NO_RESPONSE_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_NO_RESPONSE_descriptor,
              new java.lang.String[] { },
              bnet.protocol.Rpc.NO_RESPONSE.class,
              bnet.protocol.Rpc.NO_RESPONSE.Builder.class);
          internal_static_bnet_protocol_Address_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_bnet_protocol_Address_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_Address_descriptor,
              new java.lang.String[] { "Address", "Port", "Next", },
              bnet.protocol.Rpc.Address.class,
              bnet.protocol.Rpc.Address.Builder.class);
          internal_static_bnet_protocol_ProcessId_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_bnet_protocol_ProcessId_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_ProcessId_descriptor,
              new java.lang.String[] { "Label", "Epoch", },
              bnet.protocol.Rpc.ProcessId.class,
              bnet.protocol.Rpc.ProcessId.Builder.class);
          internal_static_bnet_protocol_ObjectAddress_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_bnet_protocol_ObjectAddress_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_ObjectAddress_descriptor,
              new java.lang.String[] { "Host", "ObjectId", },
              bnet.protocol.Rpc.ObjectAddress.class,
              bnet.protocol.Rpc.ObjectAddress.Builder.class);
          internal_static_bnet_protocol_NoData_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_bnet_protocol_NoData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_NoData_descriptor,
              new java.lang.String[] { },
              bnet.protocol.Rpc.NoData.class,
              bnet.protocol.Rpc.NoData.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          google.protobuf.Descriptor.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
