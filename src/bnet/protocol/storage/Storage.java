// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service/storage/storage.proto

package bnet.protocol.storage;

public final class Storage {
  private Storage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class TableId extends
      com.google.protobuf.GeneratedMessage {
    // Use TableId.newBuilder() to construct.
    private TableId() {
      initFields();
    }
    private TableId(boolean noInit) {}
    
    private static final TableId defaultInstance;
    public static TableId getDefaultInstance() {
      return defaultInstance;
    }
    
    public TableId getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.storage.Storage.internal_static_bnet_protocol_storage_TableId_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.storage.Storage.internal_static_bnet_protocol_storage_TableId_fieldAccessorTable;
    }
    
    // required bytes hash = 1;
    public static final int HASH_FIELD_NUMBER = 1;
    private boolean hasHash;
    private com.google.protobuf.ByteString hash_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasHash() { return hasHash; }
    public com.google.protobuf.ByteString getHash() { return hash_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasHash) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasHash()) {
        output.writeBytes(1, getHash());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasHash()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getHash());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.storage.Storage.TableId parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.storage.Storage.TableId parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.TableId parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.storage.Storage.TableId parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.TableId parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.storage.Storage.TableId parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.TableId parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.storage.Storage.TableId parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.storage.Storage.TableId parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.storage.Storage.TableId parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.storage.Storage.TableId prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.storage.Storage.TableId result;
      
      // Construct using bnet.protocol.storage.Storage.TableId.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.storage.Storage.TableId();
        return builder;
      }
      
      protected bnet.protocol.storage.Storage.TableId internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.storage.Storage.TableId();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.storage.Storage.TableId.getDescriptor();
      }
      
      public bnet.protocol.storage.Storage.TableId getDefaultInstanceForType() {
        return bnet.protocol.storage.Storage.TableId.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.storage.Storage.TableId build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.storage.Storage.TableId buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.storage.Storage.TableId buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.storage.Storage.TableId returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.storage.Storage.TableId) {
          return mergeFrom((bnet.protocol.storage.Storage.TableId)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.storage.Storage.TableId other) {
        if (other == bnet.protocol.storage.Storage.TableId.getDefaultInstance()) return this;
        if (other.hasHash()) {
          setHash(other.getHash());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setHash(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // required bytes hash = 1;
      public boolean hasHash() {
        return result.hasHash();
      }
      public com.google.protobuf.ByteString getHash() {
        return result.getHash();
      }
      public Builder setHash(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasHash = true;
        result.hash_ = value;
        return this;
      }
      public Builder clearHash() {
        result.hasHash = false;
        result.hash_ = getDefaultInstance().getHash();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.storage.TableId)
    }
    
    static {
      defaultInstance = new TableId(true);
      bnet.protocol.storage.Storage.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.storage.TableId)
  }
  
  public static final class ColumnId extends
      com.google.protobuf.GeneratedMessage {
    // Use ColumnId.newBuilder() to construct.
    private ColumnId() {
      initFields();
    }
    private ColumnId(boolean noInit) {}
    
    private static final ColumnId defaultInstance;
    public static ColumnId getDefaultInstance() {
      return defaultInstance;
    }
    
    public ColumnId getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.storage.Storage.internal_static_bnet_protocol_storage_ColumnId_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.storage.Storage.internal_static_bnet_protocol_storage_ColumnId_fieldAccessorTable;
    }
    
    // required bytes hash = 1;
    public static final int HASH_FIELD_NUMBER = 1;
    private boolean hasHash;
    private com.google.protobuf.ByteString hash_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasHash() { return hasHash; }
    public com.google.protobuf.ByteString getHash() { return hash_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasHash) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasHash()) {
        output.writeBytes(1, getHash());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasHash()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getHash());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.storage.Storage.ColumnId parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.storage.Storage.ColumnId parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.ColumnId parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.storage.Storage.ColumnId parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.ColumnId parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.storage.Storage.ColumnId parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.ColumnId parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.storage.Storage.ColumnId parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.storage.Storage.ColumnId parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.storage.Storage.ColumnId parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.storage.Storage.ColumnId prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.storage.Storage.ColumnId result;
      
      // Construct using bnet.protocol.storage.Storage.ColumnId.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.storage.Storage.ColumnId();
        return builder;
      }
      
      protected bnet.protocol.storage.Storage.ColumnId internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.storage.Storage.ColumnId();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.storage.Storage.ColumnId.getDescriptor();
      }
      
      public bnet.protocol.storage.Storage.ColumnId getDefaultInstanceForType() {
        return bnet.protocol.storage.Storage.ColumnId.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.storage.Storage.ColumnId build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.storage.Storage.ColumnId buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.storage.Storage.ColumnId buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.storage.Storage.ColumnId returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.storage.Storage.ColumnId) {
          return mergeFrom((bnet.protocol.storage.Storage.ColumnId)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.storage.Storage.ColumnId other) {
        if (other == bnet.protocol.storage.Storage.ColumnId.getDefaultInstance()) return this;
        if (other.hasHash()) {
          setHash(other.getHash());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setHash(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // required bytes hash = 1;
      public boolean hasHash() {
        return result.hasHash();
      }
      public com.google.protobuf.ByteString getHash() {
        return result.getHash();
      }
      public Builder setHash(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasHash = true;
        result.hash_ = value;
        return this;
      }
      public Builder clearHash() {
        result.hasHash = false;
        result.hash_ = getDefaultInstance().getHash();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.storage.ColumnId)
    }
    
    static {
      defaultInstance = new ColumnId(true);
      bnet.protocol.storage.Storage.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.storage.ColumnId)
  }
  
  public static final class RowId extends
      com.google.protobuf.GeneratedMessage {
    // Use RowId.newBuilder() to construct.
    private RowId() {
      initFields();
    }
    private RowId(boolean noInit) {}
    
    private static final RowId defaultInstance;
    public static RowId getDefaultInstance() {
      return defaultInstance;
    }
    
    public RowId getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.storage.Storage.internal_static_bnet_protocol_storage_RowId_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.storage.Storage.internal_static_bnet_protocol_storage_RowId_fieldAccessorTable;
    }
    
    // required bytes hash = 1;
    public static final int HASH_FIELD_NUMBER = 1;
    private boolean hasHash;
    private com.google.protobuf.ByteString hash_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasHash() { return hasHash; }
    public com.google.protobuf.ByteString getHash() { return hash_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasHash) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasHash()) {
        output.writeBytes(1, getHash());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasHash()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getHash());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.storage.Storage.RowId parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.storage.Storage.RowId parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.RowId parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.storage.Storage.RowId parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.RowId parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.storage.Storage.RowId parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.RowId parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.storage.Storage.RowId parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.storage.Storage.RowId parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.storage.Storage.RowId parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.storage.Storage.RowId prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.storage.Storage.RowId result;
      
      // Construct using bnet.protocol.storage.Storage.RowId.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.storage.Storage.RowId();
        return builder;
      }
      
      protected bnet.protocol.storage.Storage.RowId internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.storage.Storage.RowId();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.storage.Storage.RowId.getDescriptor();
      }
      
      public bnet.protocol.storage.Storage.RowId getDefaultInstanceForType() {
        return bnet.protocol.storage.Storage.RowId.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.storage.Storage.RowId build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.storage.Storage.RowId buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.storage.Storage.RowId buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.storage.Storage.RowId returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.storage.Storage.RowId) {
          return mergeFrom((bnet.protocol.storage.Storage.RowId)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.storage.Storage.RowId other) {
        if (other == bnet.protocol.storage.Storage.RowId.getDefaultInstance()) return this;
        if (other.hasHash()) {
          setHash(other.getHash());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setHash(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // required bytes hash = 1;
      public boolean hasHash() {
        return result.hasHash();
      }
      public com.google.protobuf.ByteString getHash() {
        return result.getHash();
      }
      public Builder setHash(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasHash = true;
        result.hash_ = value;
        return this;
      }
      public Builder clearHash() {
        result.hasHash = false;
        result.hash_ = getDefaultInstance().getHash();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.storage.RowId)
    }
    
    static {
      defaultInstance = new RowId(true);
      bnet.protocol.storage.Storage.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.storage.RowId)
  }
  
  public static final class Privilege extends
      com.google.protobuf.GeneratedMessage {
    // Use Privilege.newBuilder() to construct.
    private Privilege() {
      initFields();
    }
    private Privilege(boolean noInit) {}
    
    private static final Privilege defaultInstance;
    public static Privilege getDefaultInstance() {
      return defaultInstance;
    }
    
    public Privilege getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.storage.Storage.internal_static_bnet_protocol_storage_Privilege_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.storage.Storage.internal_static_bnet_protocol_storage_Privilege_fieldAccessorTable;
    }
    
    public enum Permission
        implements com.google.protobuf.ProtocolMessageEnum {
      OWNER(0, 1),
      FRIEND(1, 2),
      OTHER(2, 4),
      GAME(3, 8),
      ALL(4, 15),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static Permission valueOf(int value) {
        switch (value) {
          case 1: return OWNER;
          case 2: return FRIEND;
          case 4: return OTHER;
          case 8: return GAME;
          case 15: return ALL;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<Permission>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Permission>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Permission>() {
              public Permission findValueByNumber(int number) {
                return Permission.valueOf(number)
      ;        }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return bnet.protocol.storage.Storage.Privilege.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final Permission[] VALUES = {
        OWNER, FRIEND, OTHER, GAME, ALL, 
      };
      public static Permission valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      private final int index;
      private final int value;
      private Permission(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      static {
        bnet.protocol.storage.Storage.getDescriptor();
      }
      
      // @@protoc_insertion_point(enum_scope:bnet.protocol.storage.Privilege.Permission)
    }
    
    // optional fixed64 bits = 1;
    public static final int BITS_FIELD_NUMBER = 1;
    private boolean hasBits;
    private long bits_ = 0L;
    public boolean hasBits() { return hasBits; }
    public long getBits() { return bits_; }
    
    // optional fixed32 program = 2;
    public static final int PROGRAM_FIELD_NUMBER = 2;
    private boolean hasProgram;
    private int program_ = 0;
    public boolean hasProgram() { return hasProgram; }
    public int getProgram() { return program_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasBits()) {
        output.writeFixed64(1, getBits());
      }
      if (hasProgram()) {
        output.writeFixed32(2, getProgram());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasBits()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, getBits());
      }
      if (hasProgram()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(2, getProgram());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.storage.Storage.Privilege parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.storage.Storage.Privilege parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.Privilege parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.storage.Storage.Privilege parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.Privilege parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.storage.Storage.Privilege parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.Privilege parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.storage.Storage.Privilege parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.storage.Storage.Privilege parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.storage.Storage.Privilege parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.storage.Storage.Privilege prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.storage.Storage.Privilege result;
      
      // Construct using bnet.protocol.storage.Storage.Privilege.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.storage.Storage.Privilege();
        return builder;
      }
      
      protected bnet.protocol.storage.Storage.Privilege internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.storage.Storage.Privilege();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.storage.Storage.Privilege.getDescriptor();
      }
      
      public bnet.protocol.storage.Storage.Privilege getDefaultInstanceForType() {
        return bnet.protocol.storage.Storage.Privilege.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.storage.Storage.Privilege build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.storage.Storage.Privilege buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.storage.Storage.Privilege buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.storage.Storage.Privilege returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.storage.Storage.Privilege) {
          return mergeFrom((bnet.protocol.storage.Storage.Privilege)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.storage.Storage.Privilege other) {
        if (other == bnet.protocol.storage.Storage.Privilege.getDefaultInstance()) return this;
        if (other.hasBits()) {
          setBits(other.getBits());
        }
        if (other.hasProgram()) {
          setProgram(other.getProgram());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              setBits(input.readFixed64());
              break;
            }
            case 21: {
              setProgram(input.readFixed32());
              break;
            }
          }
        }
      }
      
      
      // optional fixed64 bits = 1;
      public boolean hasBits() {
        return result.hasBits();
      }
      public long getBits() {
        return result.getBits();
      }
      public Builder setBits(long value) {
        result.hasBits = true;
        result.bits_ = value;
        return this;
      }
      public Builder clearBits() {
        result.hasBits = false;
        result.bits_ = 0L;
        return this;
      }
      
      // optional fixed32 program = 2;
      public boolean hasProgram() {
        return result.hasProgram();
      }
      public int getProgram() {
        return result.getProgram();
      }
      public Builder setProgram(int value) {
        result.hasProgram = true;
        result.program_ = value;
        return this;
      }
      public Builder clearProgram() {
        result.hasProgram = false;
        result.program_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.storage.Privilege)
    }
    
    static {
      defaultInstance = new Privilege(true);
      bnet.protocol.storage.Storage.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.storage.Privilege)
  }
  
  public static final class ScanOperation extends
      com.google.protobuf.GeneratedMessage {
    // Use ScanOperation.newBuilder() to construct.
    private ScanOperation() {
      initFields();
    }
    private ScanOperation(boolean noInit) {}
    
    private static final ScanOperation defaultInstance;
    public static ScanOperation getDefaultInstance() {
      return defaultInstance;
    }
    
    public ScanOperation getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.storage.Storage.internal_static_bnet_protocol_storage_ScanOperation_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.storage.Storage.internal_static_bnet_protocol_storage_ScanOperation_fieldAccessorTable;
    }
    
    public enum Op
        implements com.google.protobuf.ProtocolMessageEnum {
      IS_CLEAR(0, 1),
      NOT_CLEAR(1, 2),
      IS_EQUALS(2, 3),
      NOT_EQUALS(3, 4),
      IS_GREATER_THAN(4, 5),
      NOT_GREATER_THAN(5, 6),
      IS_LESS_THAN(6, 7),
      NOT_LESS_THAN(7, 8),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static Op valueOf(int value) {
        switch (value) {
          case 1: return IS_CLEAR;
          case 2: return NOT_CLEAR;
          case 3: return IS_EQUALS;
          case 4: return NOT_EQUALS;
          case 5: return IS_GREATER_THAN;
          case 6: return NOT_GREATER_THAN;
          case 7: return IS_LESS_THAN;
          case 8: return NOT_LESS_THAN;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<Op>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Op>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Op>() {
              public Op findValueByNumber(int number) {
                return Op.valueOf(number)
      ;        }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return bnet.protocol.storage.Storage.ScanOperation.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final Op[] VALUES = {
        IS_CLEAR, NOT_CLEAR, IS_EQUALS, NOT_EQUALS, IS_GREATER_THAN, NOT_GREATER_THAN, IS_LESS_THAN, NOT_LESS_THAN, 
      };
      public static Op valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      private final int index;
      private final int value;
      private Op(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      static {
        bnet.protocol.storage.Storage.getDescriptor();
      }
      
      // @@protoc_insertion_point(enum_scope:bnet.protocol.storage.ScanOperation.Op)
    }
    
    // required .bnet.protocol.storage.ScanOperation.Op op = 1;
    public static final int OP_FIELD_NUMBER = 1;
    private boolean hasOp;
    private bnet.protocol.storage.Storage.ScanOperation.Op op_;
    public boolean hasOp() { return hasOp; }
    public bnet.protocol.storage.Storage.ScanOperation.Op getOp() { return op_; }
    
    // required .bnet.protocol.Path field = 2;
    public static final int FIELD_FIELD_NUMBER = 2;
    private boolean hasField;
    private bnet.protocol.Descriptor.Path field_;
    public boolean hasField() { return hasField; }
    public bnet.protocol.Descriptor.Path getField() { return field_; }
    
    private void initFields() {
      op_ = bnet.protocol.storage.Storage.ScanOperation.Op.IS_CLEAR;
      field_ = bnet.protocol.Descriptor.Path.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasOp) return false;
      if (!hasField) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasOp()) {
        output.writeEnum(1, getOp().getNumber());
      }
      if (hasField()) {
        output.writeMessage(2, getField());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasOp()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, getOp().getNumber());
      }
      if (hasField()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getField());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.storage.Storage.ScanOperation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.storage.Storage.ScanOperation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.ScanOperation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.storage.Storage.ScanOperation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.ScanOperation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.storage.Storage.ScanOperation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.ScanOperation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.storage.Storage.ScanOperation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.storage.Storage.ScanOperation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.storage.Storage.ScanOperation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.storage.Storage.ScanOperation prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.storage.Storage.ScanOperation result;
      
      // Construct using bnet.protocol.storage.Storage.ScanOperation.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.storage.Storage.ScanOperation();
        return builder;
      }
      
      protected bnet.protocol.storage.Storage.ScanOperation internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.storage.Storage.ScanOperation();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.storage.Storage.ScanOperation.getDescriptor();
      }
      
      public bnet.protocol.storage.Storage.ScanOperation getDefaultInstanceForType() {
        return bnet.protocol.storage.Storage.ScanOperation.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.storage.Storage.ScanOperation build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.storage.Storage.ScanOperation buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.storage.Storage.ScanOperation buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.storage.Storage.ScanOperation returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.storage.Storage.ScanOperation) {
          return mergeFrom((bnet.protocol.storage.Storage.ScanOperation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.storage.Storage.ScanOperation other) {
        if (other == bnet.protocol.storage.Storage.ScanOperation.getDefaultInstance()) return this;
        if (other.hasOp()) {
          setOp(other.getOp());
        }
        if (other.hasField()) {
          mergeField(other.getField());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              bnet.protocol.storage.Storage.ScanOperation.Op value = bnet.protocol.storage.Storage.ScanOperation.Op.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                setOp(value);
              }
              break;
            }
            case 18: {
              bnet.protocol.Descriptor.Path.Builder subBuilder = bnet.protocol.Descriptor.Path.newBuilder();
              if (hasField()) {
                subBuilder.mergeFrom(getField());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setField(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .bnet.protocol.storage.ScanOperation.Op op = 1;
      public boolean hasOp() {
        return result.hasOp();
      }
      public bnet.protocol.storage.Storage.ScanOperation.Op getOp() {
        return result.getOp();
      }
      public Builder setOp(bnet.protocol.storage.Storage.ScanOperation.Op value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasOp = true;
        result.op_ = value;
        return this;
      }
      public Builder clearOp() {
        result.hasOp = false;
        result.op_ = bnet.protocol.storage.Storage.ScanOperation.Op.IS_CLEAR;
        return this;
      }
      
      // required .bnet.protocol.Path field = 2;
      public boolean hasField() {
        return result.hasField();
      }
      public bnet.protocol.Descriptor.Path getField() {
        return result.getField();
      }
      public Builder setField(bnet.protocol.Descriptor.Path value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasField = true;
        result.field_ = value;
        return this;
      }
      public Builder setField(bnet.protocol.Descriptor.Path.Builder builderForValue) {
        result.hasField = true;
        result.field_ = builderForValue.build();
        return this;
      }
      public Builder mergeField(bnet.protocol.Descriptor.Path value) {
        if (result.hasField() &&
            result.field_ != bnet.protocol.Descriptor.Path.getDefaultInstance()) {
          result.field_ =
            bnet.protocol.Descriptor.Path.newBuilder(result.field_).mergeFrom(value).buildPartial();
        } else {
          result.field_ = value;
        }
        result.hasField = true;
        return this;
      }
      public Builder clearField() {
        result.hasField = false;
        result.field_ = bnet.protocol.Descriptor.Path.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.storage.ScanOperation)
    }
    
    static {
      defaultInstance = new ScanOperation(true);
      bnet.protocol.storage.Storage.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.storage.ScanOperation)
  }
  
  public static final class Command extends
      com.google.protobuf.GeneratedMessage {
    // Use Command.newBuilder() to construct.
    private Command() {
      initFields();
    }
    private Command(boolean noInit) {}
    
    private static final Command defaultInstance;
    public static Command getDefaultInstance() {
      return defaultInstance;
    }
    
    public Command getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.storage.Storage.internal_static_bnet_protocol_storage_Command_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.storage.Storage.internal_static_bnet_protocol_storage_Command_fieldAccessorTable;
    }
    
    public enum Op
        implements com.google.protobuf.ProtocolMessageEnum {
      ROW_DELETE(0, 1),
      ROW_FETCH(1, 2),
      COL_DELETE(2, 3),
      COL_FETCH(3, 4),
      COL_WRITE(4, 5),
      COL_MERGE(5, 6),
      FLD_CLEAR(6, 7),
      FLD_FETCH(7, 8),
      FLD_WRITE(8, 9),
      FLD_MERGE(9, 10),
      FLD_INCR(10, 11),
      FLD_TEST(11, 12),
      FLD_SCAN(12, 13),
      ROW_TEST(13, 14),
      COL_TEST(14, 15),
      FLD_SMAX(15, 16),
      COL_COND(16, 17),
      FLD_COND(17, 18),
      COND_POP(18, 19),
      LOG_DEBUG(19, 20),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static Op valueOf(int value) {
        switch (value) {
          case 1: return ROW_DELETE;
          case 2: return ROW_FETCH;
          case 3: return COL_DELETE;
          case 4: return COL_FETCH;
          case 5: return COL_WRITE;
          case 6: return COL_MERGE;
          case 7: return FLD_CLEAR;
          case 8: return FLD_FETCH;
          case 9: return FLD_WRITE;
          case 10: return FLD_MERGE;
          case 11: return FLD_INCR;
          case 12: return FLD_TEST;
          case 13: return FLD_SCAN;
          case 14: return ROW_TEST;
          case 15: return COL_TEST;
          case 16: return FLD_SMAX;
          case 17: return COL_COND;
          case 18: return FLD_COND;
          case 19: return COND_POP;
          case 20: return LOG_DEBUG;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<Op>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Op>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Op>() {
              public Op findValueByNumber(int number) {
                return Op.valueOf(number)
      ;        }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return bnet.protocol.storage.Storage.Command.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final Op[] VALUES = {
        ROW_DELETE, ROW_FETCH, COL_DELETE, COL_FETCH, COL_WRITE, COL_MERGE, FLD_CLEAR, FLD_FETCH, FLD_WRITE, FLD_MERGE, FLD_INCR, FLD_TEST, FLD_SCAN, ROW_TEST, COL_TEST, FLD_SMAX, COL_COND, FLD_COND, COND_POP, LOG_DEBUG, 
      };
      public static Op valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      private final int index;
      private final int value;
      private Op(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      static {
        bnet.protocol.storage.Storage.getDescriptor();
      }
      
      // @@protoc_insertion_point(enum_scope:bnet.protocol.storage.Command.Op)
    }
    
    public enum Cond
        implements com.google.protobuf.ProtocolMessageEnum {
      COND_ALWAYS(0, 0),
      COND_NOT_EXISTS(1, 1),
      COND_NOT_EQUAL(2, 2),
      COND_LESS_THAN(3, 3),
      COND_NOT_GREATER(4, 4),
      COND_EQUALS(5, 5),
      COND_NOT_LESS(6, 6),
      COND_GREATER_THAN(7, 7),
      COND_NEVER(8, 8),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static Cond valueOf(int value) {
        switch (value) {
          case 0: return COND_ALWAYS;
          case 1: return COND_NOT_EXISTS;
          case 2: return COND_NOT_EQUAL;
          case 3: return COND_LESS_THAN;
          case 4: return COND_NOT_GREATER;
          case 5: return COND_EQUALS;
          case 6: return COND_NOT_LESS;
          case 7: return COND_GREATER_THAN;
          case 8: return COND_NEVER;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<Cond>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Cond>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Cond>() {
              public Cond findValueByNumber(int number) {
                return Cond.valueOf(number)
      ;        }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return bnet.protocol.storage.Storage.Command.getDescriptor().getEnumTypes().get(1);
      }
      
      private static final Cond[] VALUES = {
        COND_ALWAYS, COND_NOT_EXISTS, COND_NOT_EQUAL, COND_LESS_THAN, COND_NOT_GREATER, COND_EQUALS, COND_NOT_LESS, COND_GREATER_THAN, COND_NEVER, 
      };
      public static Cond valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      private final int index;
      private final int value;
      private Cond(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      static {
        bnet.protocol.storage.Storage.getDescriptor();
      }
      
      // @@protoc_insertion_point(enum_scope:bnet.protocol.storage.Command.Cond)
    }
    
    // required .bnet.protocol.storage.Command.Op op = 1;
    public static final int OP_FIELD_NUMBER = 1;
    private boolean hasOp;
    private bnet.protocol.storage.Storage.Command.Op op_;
    public boolean hasOp() { return hasOp; }
    public bnet.protocol.storage.Storage.Command.Op getOp() { return op_; }
    
    // optional bytes data = 2;
    public static final int DATA_FIELD_NUMBER = 2;
    private boolean hasData;
    private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasData() { return hasData; }
    public com.google.protobuf.ByteString getData() { return data_; }
    
    // repeated .bnet.protocol.Path fields = 3;
    public static final int FIELDS_FIELD_NUMBER = 3;
    private java.util.List<bnet.protocol.Descriptor.Path> fields_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.Descriptor.Path> getFieldsList() {
      return fields_;
    }
    public int getFieldsCount() { return fields_.size(); }
    public bnet.protocol.Descriptor.Path getFields(int index) {
      return fields_.get(index);
    }
    
    // optional fixed64 min_version = 4;
    public static final int MIN_VERSION_FIELD_NUMBER = 4;
    private boolean hasMinVersion;
    private long minVersion_ = 0L;
    public boolean hasMinVersion() { return hasMinVersion; }
    public long getMinVersion() { return minVersion_; }
    
    // optional fixed64 max_version = 5;
    public static final int MAX_VERSION_FIELD_NUMBER = 5;
    private boolean hasMaxVersion;
    private long maxVersion_ = 0L;
    public boolean hasMaxVersion() { return hasMaxVersion; }
    public long getMaxVersion() { return maxVersion_; }
    
    // optional .bnet.protocol.storage.ScanOperation scan = 6;
    public static final int SCAN_FIELD_NUMBER = 6;
    private boolean hasScan;
    private bnet.protocol.storage.Storage.ScanOperation scan_;
    public boolean hasScan() { return hasScan; }
    public bnet.protocol.storage.Storage.ScanOperation getScan() { return scan_; }
    
    // optional uint32 limit = 7;
    public static final int LIMIT_FIELD_NUMBER = 7;
    private boolean hasLimit;
    private int limit_ = 0;
    public boolean hasLimit() { return hasLimit; }
    public int getLimit() { return limit_; }
    
    // optional .bnet.protocol.storage.Command.Cond condition = 8;
    public static final int CONDITION_FIELD_NUMBER = 8;
    private boolean hasCondition;
    private bnet.protocol.storage.Storage.Command.Cond condition_;
    public boolean hasCondition() { return hasCondition; }
    public bnet.protocol.storage.Storage.Command.Cond getCondition() { return condition_; }
    
    // optional string message = 11;
    public static final int MESSAGE_FIELD_NUMBER = 11;
    private boolean hasMessage;
    private java.lang.String message_ = "";
    public boolean hasMessage() { return hasMessage; }
    public java.lang.String getMessage() { return message_; }
    
    private void initFields() {
      op_ = bnet.protocol.storage.Storage.Command.Op.ROW_DELETE;
      scan_ = bnet.protocol.storage.Storage.ScanOperation.getDefaultInstance();
      condition_ = bnet.protocol.storage.Storage.Command.Cond.COND_ALWAYS;
    }
    public final boolean isInitialized() {
      if (!hasOp) return false;
      if (hasScan()) {
        if (!getScan().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasOp()) {
        output.writeEnum(1, getOp().getNumber());
      }
      if (hasData()) {
        output.writeBytes(2, getData());
      }
      for (bnet.protocol.Descriptor.Path element : getFieldsList()) {
        output.writeMessage(3, element);
      }
      if (hasMinVersion()) {
        output.writeFixed64(4, getMinVersion());
      }
      if (hasMaxVersion()) {
        output.writeFixed64(5, getMaxVersion());
      }
      if (hasScan()) {
        output.writeMessage(6, getScan());
      }
      if (hasLimit()) {
        output.writeUInt32(7, getLimit());
      }
      if (hasCondition()) {
        output.writeEnum(8, getCondition().getNumber());
      }
      if (hasMessage()) {
        output.writeString(11, getMessage());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasOp()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, getOp().getNumber());
      }
      if (hasData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getData());
      }
      for (bnet.protocol.Descriptor.Path element : getFieldsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, element);
      }
      if (hasMinVersion()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(4, getMinVersion());
      }
      if (hasMaxVersion()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(5, getMaxVersion());
      }
      if (hasScan()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getScan());
      }
      if (hasLimit()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, getLimit());
      }
      if (hasCondition()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(8, getCondition().getNumber());
      }
      if (hasMessage()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(11, getMessage());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.storage.Storage.Command parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.storage.Storage.Command parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.Command parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.storage.Storage.Command parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.Command parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.storage.Storage.Command parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.Command parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.storage.Storage.Command parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.storage.Storage.Command parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.storage.Storage.Command parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.storage.Storage.Command prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.storage.Storage.Command result;
      
      // Construct using bnet.protocol.storage.Storage.Command.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.storage.Storage.Command();
        return builder;
      }
      
      protected bnet.protocol.storage.Storage.Command internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.storage.Storage.Command();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.storage.Storage.Command.getDescriptor();
      }
      
      public bnet.protocol.storage.Storage.Command getDefaultInstanceForType() {
        return bnet.protocol.storage.Storage.Command.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.storage.Storage.Command build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.storage.Storage.Command buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.storage.Storage.Command buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.fields_ != java.util.Collections.EMPTY_LIST) {
          result.fields_ =
            java.util.Collections.unmodifiableList(result.fields_);
        }
        bnet.protocol.storage.Storage.Command returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.storage.Storage.Command) {
          return mergeFrom((bnet.protocol.storage.Storage.Command)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.storage.Storage.Command other) {
        if (other == bnet.protocol.storage.Storage.Command.getDefaultInstance()) return this;
        if (other.hasOp()) {
          setOp(other.getOp());
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        if (!other.fields_.isEmpty()) {
          if (result.fields_.isEmpty()) {
            result.fields_ = new java.util.ArrayList<bnet.protocol.Descriptor.Path>();
          }
          result.fields_.addAll(other.fields_);
        }
        if (other.hasMinVersion()) {
          setMinVersion(other.getMinVersion());
        }
        if (other.hasMaxVersion()) {
          setMaxVersion(other.getMaxVersion());
        }
        if (other.hasScan()) {
          mergeScan(other.getScan());
        }
        if (other.hasLimit()) {
          setLimit(other.getLimit());
        }
        if (other.hasCondition()) {
          setCondition(other.getCondition());
        }
        if (other.hasMessage()) {
          setMessage(other.getMessage());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              bnet.protocol.storage.Storage.Command.Op value = bnet.protocol.storage.Storage.Command.Op.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                setOp(value);
              }
              break;
            }
            case 18: {
              setData(input.readBytes());
              break;
            }
            case 26: {
              bnet.protocol.Descriptor.Path.Builder subBuilder = bnet.protocol.Descriptor.Path.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addFields(subBuilder.buildPartial());
              break;
            }
            case 33: {
              setMinVersion(input.readFixed64());
              break;
            }
            case 41: {
              setMaxVersion(input.readFixed64());
              break;
            }
            case 50: {
              bnet.protocol.storage.Storage.ScanOperation.Builder subBuilder = bnet.protocol.storage.Storage.ScanOperation.newBuilder();
              if (hasScan()) {
                subBuilder.mergeFrom(getScan());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setScan(subBuilder.buildPartial());
              break;
            }
            case 56: {
              setLimit(input.readUInt32());
              break;
            }
            case 64: {
              int rawValue = input.readEnum();
              bnet.protocol.storage.Storage.Command.Cond value = bnet.protocol.storage.Storage.Command.Cond.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(8, rawValue);
              } else {
                setCondition(value);
              }
              break;
            }
            case 90: {
              setMessage(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required .bnet.protocol.storage.Command.Op op = 1;
      public boolean hasOp() {
        return result.hasOp();
      }
      public bnet.protocol.storage.Storage.Command.Op getOp() {
        return result.getOp();
      }
      public Builder setOp(bnet.protocol.storage.Storage.Command.Op value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasOp = true;
        result.op_ = value;
        return this;
      }
      public Builder clearOp() {
        result.hasOp = false;
        result.op_ = bnet.protocol.storage.Storage.Command.Op.ROW_DELETE;
        return this;
      }
      
      // optional bytes data = 2;
      public boolean hasData() {
        return result.hasData();
      }
      public com.google.protobuf.ByteString getData() {
        return result.getData();
      }
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasData = true;
        result.data_ = value;
        return this;
      }
      public Builder clearData() {
        result.hasData = false;
        result.data_ = getDefaultInstance().getData();
        return this;
      }
      
      // repeated .bnet.protocol.Path fields = 3;
      public java.util.List<bnet.protocol.Descriptor.Path> getFieldsList() {
        return java.util.Collections.unmodifiableList(result.fields_);
      }
      public int getFieldsCount() {
        return result.getFieldsCount();
      }
      public bnet.protocol.Descriptor.Path getFields(int index) {
        return result.getFields(index);
      }
      public Builder setFields(int index, bnet.protocol.Descriptor.Path value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.fields_.set(index, value);
        return this;
      }
      public Builder setFields(int index, bnet.protocol.Descriptor.Path.Builder builderForValue) {
        result.fields_.set(index, builderForValue.build());
        return this;
      }
      public Builder addFields(bnet.protocol.Descriptor.Path value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.fields_.isEmpty()) {
          result.fields_ = new java.util.ArrayList<bnet.protocol.Descriptor.Path>();
        }
        result.fields_.add(value);
        return this;
      }
      public Builder addFields(bnet.protocol.Descriptor.Path.Builder builderForValue) {
        if (result.fields_.isEmpty()) {
          result.fields_ = new java.util.ArrayList<bnet.protocol.Descriptor.Path>();
        }
        result.fields_.add(builderForValue.build());
        return this;
      }
      public Builder addAllFields(
          java.lang.Iterable<? extends bnet.protocol.Descriptor.Path> values) {
        if (result.fields_.isEmpty()) {
          result.fields_ = new java.util.ArrayList<bnet.protocol.Descriptor.Path>();
        }
        super.addAll(values, result.fields_);
        return this;
      }
      public Builder clearFields() {
        result.fields_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional fixed64 min_version = 4;
      public boolean hasMinVersion() {
        return result.hasMinVersion();
      }
      public long getMinVersion() {
        return result.getMinVersion();
      }
      public Builder setMinVersion(long value) {
        result.hasMinVersion = true;
        result.minVersion_ = value;
        return this;
      }
      public Builder clearMinVersion() {
        result.hasMinVersion = false;
        result.minVersion_ = 0L;
        return this;
      }
      
      // optional fixed64 max_version = 5;
      public boolean hasMaxVersion() {
        return result.hasMaxVersion();
      }
      public long getMaxVersion() {
        return result.getMaxVersion();
      }
      public Builder setMaxVersion(long value) {
        result.hasMaxVersion = true;
        result.maxVersion_ = value;
        return this;
      }
      public Builder clearMaxVersion() {
        result.hasMaxVersion = false;
        result.maxVersion_ = 0L;
        return this;
      }
      
      // optional .bnet.protocol.storage.ScanOperation scan = 6;
      public boolean hasScan() {
        return result.hasScan();
      }
      public bnet.protocol.storage.Storage.ScanOperation getScan() {
        return result.getScan();
      }
      public Builder setScan(bnet.protocol.storage.Storage.ScanOperation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasScan = true;
        result.scan_ = value;
        return this;
      }
      public Builder setScan(bnet.protocol.storage.Storage.ScanOperation.Builder builderForValue) {
        result.hasScan = true;
        result.scan_ = builderForValue.build();
        return this;
      }
      public Builder mergeScan(bnet.protocol.storage.Storage.ScanOperation value) {
        if (result.hasScan() &&
            result.scan_ != bnet.protocol.storage.Storage.ScanOperation.getDefaultInstance()) {
          result.scan_ =
            bnet.protocol.storage.Storage.ScanOperation.newBuilder(result.scan_).mergeFrom(value).buildPartial();
        } else {
          result.scan_ = value;
        }
        result.hasScan = true;
        return this;
      }
      public Builder clearScan() {
        result.hasScan = false;
        result.scan_ = bnet.protocol.storage.Storage.ScanOperation.getDefaultInstance();
        return this;
      }
      
      // optional uint32 limit = 7;
      public boolean hasLimit() {
        return result.hasLimit();
      }
      public int getLimit() {
        return result.getLimit();
      }
      public Builder setLimit(int value) {
        result.hasLimit = true;
        result.limit_ = value;
        return this;
      }
      public Builder clearLimit() {
        result.hasLimit = false;
        result.limit_ = 0;
        return this;
      }
      
      // optional .bnet.protocol.storage.Command.Cond condition = 8;
      public boolean hasCondition() {
        return result.hasCondition();
      }
      public bnet.protocol.storage.Storage.Command.Cond getCondition() {
        return result.getCondition();
      }
      public Builder setCondition(bnet.protocol.storage.Storage.Command.Cond value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasCondition = true;
        result.condition_ = value;
        return this;
      }
      public Builder clearCondition() {
        result.hasCondition = false;
        result.condition_ = bnet.protocol.storage.Storage.Command.Cond.COND_ALWAYS;
        return this;
      }
      
      // optional string message = 11;
      public boolean hasMessage() {
        return result.hasMessage();
      }
      public java.lang.String getMessage() {
        return result.getMessage();
      }
      public Builder setMessage(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasMessage = true;
        result.message_ = value;
        return this;
      }
      public Builder clearMessage() {
        result.hasMessage = false;
        result.message_ = getDefaultInstance().getMessage();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.storage.Command)
    }
    
    static {
      defaultInstance = new Command(true);
      bnet.protocol.storage.Storage.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.storage.Command)
  }
  
  public static final class Operation extends
      com.google.protobuf.GeneratedMessage {
    // Use Operation.newBuilder() to construct.
    private Operation() {
      initFields();
    }
    private Operation(boolean noInit) {}
    
    private static final Operation defaultInstance;
    public static Operation getDefaultInstance() {
      return defaultInstance;
    }
    
    public Operation getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.storage.Storage.internal_static_bnet_protocol_storage_Operation_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.storage.Storage.internal_static_bnet_protocol_storage_Operation_fieldAccessorTable;
    }
    
    // required .bnet.protocol.storage.TableId table_id = 1;
    public static final int TABLE_ID_FIELD_NUMBER = 1;
    private boolean hasTableId;
    private bnet.protocol.storage.Storage.TableId tableId_;
    public boolean hasTableId() { return hasTableId; }
    public bnet.protocol.storage.Storage.TableId getTableId() { return tableId_; }
    
    // optional .bnet.protocol.storage.ColumnId column_id = 2;
    public static final int COLUMN_ID_FIELD_NUMBER = 2;
    private boolean hasColumnId;
    private bnet.protocol.storage.Storage.ColumnId columnId_;
    public boolean hasColumnId() { return hasColumnId; }
    public bnet.protocol.storage.Storage.ColumnId getColumnId() { return columnId_; }
    
    // optional .bnet.protocol.storage.RowId row_id = 3;
    public static final int ROW_ID_FIELD_NUMBER = 3;
    private boolean hasRowId;
    private bnet.protocol.storage.Storage.RowId rowId_;
    public boolean hasRowId() { return hasRowId; }
    public bnet.protocol.storage.Storage.RowId getRowId() { return rowId_; }
    
    // optional bytes row_key = 4;
    public static final int ROW_KEY_FIELD_NUMBER = 4;
    private boolean hasRowKey;
    private com.google.protobuf.ByteString rowKey_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasRowKey() { return hasRowKey; }
    public com.google.protobuf.ByteString getRowKey() { return rowKey_; }
    
    // optional fixed64 version = 5;
    public static final int VERSION_FIELD_NUMBER = 5;
    private boolean hasVersion;
    private long version_ = 0L;
    public boolean hasVersion() { return hasVersion; }
    public long getVersion() { return version_; }
    
    // repeated .bnet.protocol.storage.Command rops = 6;
    public static final int ROPS_FIELD_NUMBER = 6;
    private java.util.List<bnet.protocol.storage.Storage.Command> rops_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.storage.Storage.Command> getRopsList() {
      return rops_;
    }
    public int getRopsCount() { return rops_.size(); }
    public bnet.protocol.storage.Storage.Command getRops(int index) {
      return rops_.get(index);
    }
    
    // optional fixed64 mutate_version = 7;
    public static final int MUTATE_VERSION_FIELD_NUMBER = 7;
    private boolean hasMutateVersion;
    private long mutateVersion_ = 0L;
    public boolean hasMutateVersion() { return hasMutateVersion; }
    public long getMutateVersion() { return mutateVersion_; }
    
    // optional .bnet.protocol.storage.Privilege privilege = 8;
    public static final int PRIVILEGE_FIELD_NUMBER = 8;
    private boolean hasPrivilege;
    private bnet.protocol.storage.Storage.Privilege privilege_;
    public boolean hasPrivilege() { return hasPrivilege; }
    public bnet.protocol.storage.Storage.Privilege getPrivilege() { return privilege_; }
    
    private void initFields() {
      tableId_ = bnet.protocol.storage.Storage.TableId.getDefaultInstance();
      columnId_ = bnet.protocol.storage.Storage.ColumnId.getDefaultInstance();
      rowId_ = bnet.protocol.storage.Storage.RowId.getDefaultInstance();
      privilege_ = bnet.protocol.storage.Storage.Privilege.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasTableId) return false;
      if (!getTableId().isInitialized()) return false;
      if (hasColumnId()) {
        if (!getColumnId().isInitialized()) return false;
      }
      if (hasRowId()) {
        if (!getRowId().isInitialized()) return false;
      }
      for (bnet.protocol.storage.Storage.Command element : getRopsList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasTableId()) {
        output.writeMessage(1, getTableId());
      }
      if (hasColumnId()) {
        output.writeMessage(2, getColumnId());
      }
      if (hasRowId()) {
        output.writeMessage(3, getRowId());
      }
      if (hasRowKey()) {
        output.writeBytes(4, getRowKey());
      }
      if (hasVersion()) {
        output.writeFixed64(5, getVersion());
      }
      for (bnet.protocol.storage.Storage.Command element : getRopsList()) {
        output.writeMessage(6, element);
      }
      if (hasMutateVersion()) {
        output.writeFixed64(7, getMutateVersion());
      }
      if (hasPrivilege()) {
        output.writeMessage(8, getPrivilege());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasTableId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTableId());
      }
      if (hasColumnId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getColumnId());
      }
      if (hasRowId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getRowId());
      }
      if (hasRowKey()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getRowKey());
      }
      if (hasVersion()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(5, getVersion());
      }
      for (bnet.protocol.storage.Storage.Command element : getRopsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, element);
      }
      if (hasMutateVersion()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(7, getMutateVersion());
      }
      if (hasPrivilege()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getPrivilege());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.storage.Storage.Operation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.storage.Storage.Operation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.Operation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.storage.Storage.Operation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.Operation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.storage.Storage.Operation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.Operation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.storage.Storage.Operation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.storage.Storage.Operation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.storage.Storage.Operation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.storage.Storage.Operation prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.storage.Storage.Operation result;
      
      // Construct using bnet.protocol.storage.Storage.Operation.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.storage.Storage.Operation();
        return builder;
      }
      
      protected bnet.protocol.storage.Storage.Operation internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.storage.Storage.Operation();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.storage.Storage.Operation.getDescriptor();
      }
      
      public bnet.protocol.storage.Storage.Operation getDefaultInstanceForType() {
        return bnet.protocol.storage.Storage.Operation.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.storage.Storage.Operation build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.storage.Storage.Operation buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.storage.Storage.Operation buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.rops_ != java.util.Collections.EMPTY_LIST) {
          result.rops_ =
            java.util.Collections.unmodifiableList(result.rops_);
        }
        bnet.protocol.storage.Storage.Operation returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.storage.Storage.Operation) {
          return mergeFrom((bnet.protocol.storage.Storage.Operation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.storage.Storage.Operation other) {
        if (other == bnet.protocol.storage.Storage.Operation.getDefaultInstance()) return this;
        if (other.hasTableId()) {
          mergeTableId(other.getTableId());
        }
        if (other.hasColumnId()) {
          mergeColumnId(other.getColumnId());
        }
        if (other.hasRowId()) {
          mergeRowId(other.getRowId());
        }
        if (other.hasRowKey()) {
          setRowKey(other.getRowKey());
        }
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (!other.rops_.isEmpty()) {
          if (result.rops_.isEmpty()) {
            result.rops_ = new java.util.ArrayList<bnet.protocol.storage.Storage.Command>();
          }
          result.rops_.addAll(other.rops_);
        }
        if (other.hasMutateVersion()) {
          setMutateVersion(other.getMutateVersion());
        }
        if (other.hasPrivilege()) {
          mergePrivilege(other.getPrivilege());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.storage.Storage.TableId.Builder subBuilder = bnet.protocol.storage.Storage.TableId.newBuilder();
              if (hasTableId()) {
                subBuilder.mergeFrom(getTableId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setTableId(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bnet.protocol.storage.Storage.ColumnId.Builder subBuilder = bnet.protocol.storage.Storage.ColumnId.newBuilder();
              if (hasColumnId()) {
                subBuilder.mergeFrom(getColumnId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setColumnId(subBuilder.buildPartial());
              break;
            }
            case 26: {
              bnet.protocol.storage.Storage.RowId.Builder subBuilder = bnet.protocol.storage.Storage.RowId.newBuilder();
              if (hasRowId()) {
                subBuilder.mergeFrom(getRowId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setRowId(subBuilder.buildPartial());
              break;
            }
            case 34: {
              setRowKey(input.readBytes());
              break;
            }
            case 41: {
              setVersion(input.readFixed64());
              break;
            }
            case 50: {
              bnet.protocol.storage.Storage.Command.Builder subBuilder = bnet.protocol.storage.Storage.Command.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRops(subBuilder.buildPartial());
              break;
            }
            case 57: {
              setMutateVersion(input.readFixed64());
              break;
            }
            case 66: {
              bnet.protocol.storage.Storage.Privilege.Builder subBuilder = bnet.protocol.storage.Storage.Privilege.newBuilder();
              if (hasPrivilege()) {
                subBuilder.mergeFrom(getPrivilege());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setPrivilege(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .bnet.protocol.storage.TableId table_id = 1;
      public boolean hasTableId() {
        return result.hasTableId();
      }
      public bnet.protocol.storage.Storage.TableId getTableId() {
        return result.getTableId();
      }
      public Builder setTableId(bnet.protocol.storage.Storage.TableId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasTableId = true;
        result.tableId_ = value;
        return this;
      }
      public Builder setTableId(bnet.protocol.storage.Storage.TableId.Builder builderForValue) {
        result.hasTableId = true;
        result.tableId_ = builderForValue.build();
        return this;
      }
      public Builder mergeTableId(bnet.protocol.storage.Storage.TableId value) {
        if (result.hasTableId() &&
            result.tableId_ != bnet.protocol.storage.Storage.TableId.getDefaultInstance()) {
          result.tableId_ =
            bnet.protocol.storage.Storage.TableId.newBuilder(result.tableId_).mergeFrom(value).buildPartial();
        } else {
          result.tableId_ = value;
        }
        result.hasTableId = true;
        return this;
      }
      public Builder clearTableId() {
        result.hasTableId = false;
        result.tableId_ = bnet.protocol.storage.Storage.TableId.getDefaultInstance();
        return this;
      }
      
      // optional .bnet.protocol.storage.ColumnId column_id = 2;
      public boolean hasColumnId() {
        return result.hasColumnId();
      }
      public bnet.protocol.storage.Storage.ColumnId getColumnId() {
        return result.getColumnId();
      }
      public Builder setColumnId(bnet.protocol.storage.Storage.ColumnId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasColumnId = true;
        result.columnId_ = value;
        return this;
      }
      public Builder setColumnId(bnet.protocol.storage.Storage.ColumnId.Builder builderForValue) {
        result.hasColumnId = true;
        result.columnId_ = builderForValue.build();
        return this;
      }
      public Builder mergeColumnId(bnet.protocol.storage.Storage.ColumnId value) {
        if (result.hasColumnId() &&
            result.columnId_ != bnet.protocol.storage.Storage.ColumnId.getDefaultInstance()) {
          result.columnId_ =
            bnet.protocol.storage.Storage.ColumnId.newBuilder(result.columnId_).mergeFrom(value).buildPartial();
        } else {
          result.columnId_ = value;
        }
        result.hasColumnId = true;
        return this;
      }
      public Builder clearColumnId() {
        result.hasColumnId = false;
        result.columnId_ = bnet.protocol.storage.Storage.ColumnId.getDefaultInstance();
        return this;
      }
      
      // optional .bnet.protocol.storage.RowId row_id = 3;
      public boolean hasRowId() {
        return result.hasRowId();
      }
      public bnet.protocol.storage.Storage.RowId getRowId() {
        return result.getRowId();
      }
      public Builder setRowId(bnet.protocol.storage.Storage.RowId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasRowId = true;
        result.rowId_ = value;
        return this;
      }
      public Builder setRowId(bnet.protocol.storage.Storage.RowId.Builder builderForValue) {
        result.hasRowId = true;
        result.rowId_ = builderForValue.build();
        return this;
      }
      public Builder mergeRowId(bnet.protocol.storage.Storage.RowId value) {
        if (result.hasRowId() &&
            result.rowId_ != bnet.protocol.storage.Storage.RowId.getDefaultInstance()) {
          result.rowId_ =
            bnet.protocol.storage.Storage.RowId.newBuilder(result.rowId_).mergeFrom(value).buildPartial();
        } else {
          result.rowId_ = value;
        }
        result.hasRowId = true;
        return this;
      }
      public Builder clearRowId() {
        result.hasRowId = false;
        result.rowId_ = bnet.protocol.storage.Storage.RowId.getDefaultInstance();
        return this;
      }
      
      // optional bytes row_key = 4;
      public boolean hasRowKey() {
        return result.hasRowKey();
      }
      public com.google.protobuf.ByteString getRowKey() {
        return result.getRowKey();
      }
      public Builder setRowKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasRowKey = true;
        result.rowKey_ = value;
        return this;
      }
      public Builder clearRowKey() {
        result.hasRowKey = false;
        result.rowKey_ = getDefaultInstance().getRowKey();
        return this;
      }
      
      // optional fixed64 version = 5;
      public boolean hasVersion() {
        return result.hasVersion();
      }
      public long getVersion() {
        return result.getVersion();
      }
      public Builder setVersion(long value) {
        result.hasVersion = true;
        result.version_ = value;
        return this;
      }
      public Builder clearVersion() {
        result.hasVersion = false;
        result.version_ = 0L;
        return this;
      }
      
      // repeated .bnet.protocol.storage.Command rops = 6;
      public java.util.List<bnet.protocol.storage.Storage.Command> getRopsList() {
        return java.util.Collections.unmodifiableList(result.rops_);
      }
      public int getRopsCount() {
        return result.getRopsCount();
      }
      public bnet.protocol.storage.Storage.Command getRops(int index) {
        return result.getRops(index);
      }
      public Builder setRops(int index, bnet.protocol.storage.Storage.Command value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.rops_.set(index, value);
        return this;
      }
      public Builder setRops(int index, bnet.protocol.storage.Storage.Command.Builder builderForValue) {
        result.rops_.set(index, builderForValue.build());
        return this;
      }
      public Builder addRops(bnet.protocol.storage.Storage.Command value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.rops_.isEmpty()) {
          result.rops_ = new java.util.ArrayList<bnet.protocol.storage.Storage.Command>();
        }
        result.rops_.add(value);
        return this;
      }
      public Builder addRops(bnet.protocol.storage.Storage.Command.Builder builderForValue) {
        if (result.rops_.isEmpty()) {
          result.rops_ = new java.util.ArrayList<bnet.protocol.storage.Storage.Command>();
        }
        result.rops_.add(builderForValue.build());
        return this;
      }
      public Builder addAllRops(
          java.lang.Iterable<? extends bnet.protocol.storage.Storage.Command> values) {
        if (result.rops_.isEmpty()) {
          result.rops_ = new java.util.ArrayList<bnet.protocol.storage.Storage.Command>();
        }
        super.addAll(values, result.rops_);
        return this;
      }
      public Builder clearRops() {
        result.rops_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional fixed64 mutate_version = 7;
      public boolean hasMutateVersion() {
        return result.hasMutateVersion();
      }
      public long getMutateVersion() {
        return result.getMutateVersion();
      }
      public Builder setMutateVersion(long value) {
        result.hasMutateVersion = true;
        result.mutateVersion_ = value;
        return this;
      }
      public Builder clearMutateVersion() {
        result.hasMutateVersion = false;
        result.mutateVersion_ = 0L;
        return this;
      }
      
      // optional .bnet.protocol.storage.Privilege privilege = 8;
      public boolean hasPrivilege() {
        return result.hasPrivilege();
      }
      public bnet.protocol.storage.Storage.Privilege getPrivilege() {
        return result.getPrivilege();
      }
      public Builder setPrivilege(bnet.protocol.storage.Storage.Privilege value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasPrivilege = true;
        result.privilege_ = value;
        return this;
      }
      public Builder setPrivilege(bnet.protocol.storage.Storage.Privilege.Builder builderForValue) {
        result.hasPrivilege = true;
        result.privilege_ = builderForValue.build();
        return this;
      }
      public Builder mergePrivilege(bnet.protocol.storage.Storage.Privilege value) {
        if (result.hasPrivilege() &&
            result.privilege_ != bnet.protocol.storage.Storage.Privilege.getDefaultInstance()) {
          result.privilege_ =
            bnet.protocol.storage.Storage.Privilege.newBuilder(result.privilege_).mergeFrom(value).buildPartial();
        } else {
          result.privilege_ = value;
        }
        result.hasPrivilege = true;
        return this;
      }
      public Builder clearPrivilege() {
        result.hasPrivilege = false;
        result.privilege_ = bnet.protocol.storage.Storage.Privilege.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.storage.Operation)
    }
    
    static {
      defaultInstance = new Operation(true);
      bnet.protocol.storage.Storage.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.storage.Operation)
  }
  
  public static final class Cell extends
      com.google.protobuf.GeneratedMessage {
    // Use Cell.newBuilder() to construct.
    private Cell() {
      initFields();
    }
    private Cell(boolean noInit) {}
    
    private static final Cell defaultInstance;
    public static Cell getDefaultInstance() {
      return defaultInstance;
    }
    
    public Cell getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.storage.Storage.internal_static_bnet_protocol_storage_Cell_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.storage.Storage.internal_static_bnet_protocol_storage_Cell_fieldAccessorTable;
    }
    
    // required .bnet.protocol.storage.ColumnId column_id = 1;
    public static final int COLUMN_ID_FIELD_NUMBER = 1;
    private boolean hasColumnId;
    private bnet.protocol.storage.Storage.ColumnId columnId_;
    public boolean hasColumnId() { return hasColumnId; }
    public bnet.protocol.storage.Storage.ColumnId getColumnId() { return columnId_; }
    
    // required .bnet.protocol.storage.RowId row_id = 2;
    public static final int ROW_ID_FIELD_NUMBER = 2;
    private boolean hasRowId;
    private bnet.protocol.storage.Storage.RowId rowId_;
    public boolean hasRowId() { return hasRowId; }
    public bnet.protocol.storage.Storage.RowId getRowId() { return rowId_; }
    
    // optional bytes row_key = 3;
    public static final int ROW_KEY_FIELD_NUMBER = 3;
    private boolean hasRowKey;
    private com.google.protobuf.ByteString rowKey_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasRowKey() { return hasRowKey; }
    public com.google.protobuf.ByteString getRowKey() { return rowKey_; }
    
    // optional fixed64 version = 4;
    public static final int VERSION_FIELD_NUMBER = 4;
    private boolean hasVersion;
    private long version_ = 0L;
    public boolean hasVersion() { return hasVersion; }
    public long getVersion() { return version_; }
    
    // optional bytes data = 5;
    public static final int DATA_FIELD_NUMBER = 5;
    private boolean hasData;
    private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasData() { return hasData; }
    public com.google.protobuf.ByteString getData() { return data_; }
    
    private void initFields() {
      columnId_ = bnet.protocol.storage.Storage.ColumnId.getDefaultInstance();
      rowId_ = bnet.protocol.storage.Storage.RowId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasColumnId) return false;
      if (!hasRowId) return false;
      if (!getColumnId().isInitialized()) return false;
      if (!getRowId().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasColumnId()) {
        output.writeMessage(1, getColumnId());
      }
      if (hasRowId()) {
        output.writeMessage(2, getRowId());
      }
      if (hasRowKey()) {
        output.writeBytes(3, getRowKey());
      }
      if (hasVersion()) {
        output.writeFixed64(4, getVersion());
      }
      if (hasData()) {
        output.writeBytes(5, getData());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasColumnId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getColumnId());
      }
      if (hasRowId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getRowId());
      }
      if (hasRowKey()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getRowKey());
      }
      if (hasVersion()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(4, getVersion());
      }
      if (hasData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getData());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.storage.Storage.Cell parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.storage.Storage.Cell parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.Cell parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.storage.Storage.Cell parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.Cell parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.storage.Storage.Cell parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.Cell parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.storage.Storage.Cell parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.storage.Storage.Cell parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.storage.Storage.Cell parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.storage.Storage.Cell prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.storage.Storage.Cell result;
      
      // Construct using bnet.protocol.storage.Storage.Cell.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.storage.Storage.Cell();
        return builder;
      }
      
      protected bnet.protocol.storage.Storage.Cell internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.storage.Storage.Cell();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.storage.Storage.Cell.getDescriptor();
      }
      
      public bnet.protocol.storage.Storage.Cell getDefaultInstanceForType() {
        return bnet.protocol.storage.Storage.Cell.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.storage.Storage.Cell build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.storage.Storage.Cell buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.storage.Storage.Cell buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.storage.Storage.Cell returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.storage.Storage.Cell) {
          return mergeFrom((bnet.protocol.storage.Storage.Cell)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.storage.Storage.Cell other) {
        if (other == bnet.protocol.storage.Storage.Cell.getDefaultInstance()) return this;
        if (other.hasColumnId()) {
          mergeColumnId(other.getColumnId());
        }
        if (other.hasRowId()) {
          mergeRowId(other.getRowId());
        }
        if (other.hasRowKey()) {
          setRowKey(other.getRowKey());
        }
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.storage.Storage.ColumnId.Builder subBuilder = bnet.protocol.storage.Storage.ColumnId.newBuilder();
              if (hasColumnId()) {
                subBuilder.mergeFrom(getColumnId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setColumnId(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bnet.protocol.storage.Storage.RowId.Builder subBuilder = bnet.protocol.storage.Storage.RowId.newBuilder();
              if (hasRowId()) {
                subBuilder.mergeFrom(getRowId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setRowId(subBuilder.buildPartial());
              break;
            }
            case 26: {
              setRowKey(input.readBytes());
              break;
            }
            case 33: {
              setVersion(input.readFixed64());
              break;
            }
            case 42: {
              setData(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // required .bnet.protocol.storage.ColumnId column_id = 1;
      public boolean hasColumnId() {
        return result.hasColumnId();
      }
      public bnet.protocol.storage.Storage.ColumnId getColumnId() {
        return result.getColumnId();
      }
      public Builder setColumnId(bnet.protocol.storage.Storage.ColumnId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasColumnId = true;
        result.columnId_ = value;
        return this;
      }
      public Builder setColumnId(bnet.protocol.storage.Storage.ColumnId.Builder builderForValue) {
        result.hasColumnId = true;
        result.columnId_ = builderForValue.build();
        return this;
      }
      public Builder mergeColumnId(bnet.protocol.storage.Storage.ColumnId value) {
        if (result.hasColumnId() &&
            result.columnId_ != bnet.protocol.storage.Storage.ColumnId.getDefaultInstance()) {
          result.columnId_ =
            bnet.protocol.storage.Storage.ColumnId.newBuilder(result.columnId_).mergeFrom(value).buildPartial();
        } else {
          result.columnId_ = value;
        }
        result.hasColumnId = true;
        return this;
      }
      public Builder clearColumnId() {
        result.hasColumnId = false;
        result.columnId_ = bnet.protocol.storage.Storage.ColumnId.getDefaultInstance();
        return this;
      }
      
      // required .bnet.protocol.storage.RowId row_id = 2;
      public boolean hasRowId() {
        return result.hasRowId();
      }
      public bnet.protocol.storage.Storage.RowId getRowId() {
        return result.getRowId();
      }
      public Builder setRowId(bnet.protocol.storage.Storage.RowId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasRowId = true;
        result.rowId_ = value;
        return this;
      }
      public Builder setRowId(bnet.protocol.storage.Storage.RowId.Builder builderForValue) {
        result.hasRowId = true;
        result.rowId_ = builderForValue.build();
        return this;
      }
      public Builder mergeRowId(bnet.protocol.storage.Storage.RowId value) {
        if (result.hasRowId() &&
            result.rowId_ != bnet.protocol.storage.Storage.RowId.getDefaultInstance()) {
          result.rowId_ =
            bnet.protocol.storage.Storage.RowId.newBuilder(result.rowId_).mergeFrom(value).buildPartial();
        } else {
          result.rowId_ = value;
        }
        result.hasRowId = true;
        return this;
      }
      public Builder clearRowId() {
        result.hasRowId = false;
        result.rowId_ = bnet.protocol.storage.Storage.RowId.getDefaultInstance();
        return this;
      }
      
      // optional bytes row_key = 3;
      public boolean hasRowKey() {
        return result.hasRowKey();
      }
      public com.google.protobuf.ByteString getRowKey() {
        return result.getRowKey();
      }
      public Builder setRowKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasRowKey = true;
        result.rowKey_ = value;
        return this;
      }
      public Builder clearRowKey() {
        result.hasRowKey = false;
        result.rowKey_ = getDefaultInstance().getRowKey();
        return this;
      }
      
      // optional fixed64 version = 4;
      public boolean hasVersion() {
        return result.hasVersion();
      }
      public long getVersion() {
        return result.getVersion();
      }
      public Builder setVersion(long value) {
        result.hasVersion = true;
        result.version_ = value;
        return this;
      }
      public Builder clearVersion() {
        result.hasVersion = false;
        result.version_ = 0L;
        return this;
      }
      
      // optional bytes data = 5;
      public boolean hasData() {
        return result.hasData();
      }
      public com.google.protobuf.ByteString getData() {
        return result.getData();
      }
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasData = true;
        result.data_ = value;
        return this;
      }
      public Builder clearData() {
        result.hasData = false;
        result.data_ = getDefaultInstance().getData();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.storage.Cell)
    }
    
    static {
      defaultInstance = new Cell(true);
      bnet.protocol.storage.Storage.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.storage.Cell)
  }
  
  public static final class OperationResult extends
      com.google.protobuf.GeneratedMessage {
    // Use OperationResult.newBuilder() to construct.
    private OperationResult() {
      initFields();
    }
    private OperationResult(boolean noInit) {}
    
    private static final OperationResult defaultInstance;
    public static OperationResult getDefaultInstance() {
      return defaultInstance;
    }
    
    public OperationResult getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.storage.Storage.internal_static_bnet_protocol_storage_OperationResult_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.storage.Storage.internal_static_bnet_protocol_storage_OperationResult_fieldAccessorTable;
    }
    
    // optional uint32 error_code = 1;
    public static final int ERROR_CODE_FIELD_NUMBER = 1;
    private boolean hasErrorCode;
    private int errorCode_ = 0;
    public boolean hasErrorCode() { return hasErrorCode; }
    public int getErrorCode() { return errorCode_; }
    
    // required .bnet.protocol.storage.TableId table_id = 2;
    public static final int TABLE_ID_FIELD_NUMBER = 2;
    private boolean hasTableId;
    private bnet.protocol.storage.Storage.TableId tableId_;
    public boolean hasTableId() { return hasTableId; }
    public bnet.protocol.storage.Storage.TableId getTableId() { return tableId_; }
    
    // repeated .bnet.protocol.storage.Cell data = 3;
    public static final int DATA_FIELD_NUMBER = 3;
    private java.util.List<bnet.protocol.storage.Storage.Cell> data_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.storage.Storage.Cell> getDataList() {
      return data_;
    }
    public int getDataCount() { return data_.size(); }
    public bnet.protocol.storage.Storage.Cell getData(int index) {
      return data_.get(index);
    }
    
    private void initFields() {
      tableId_ = bnet.protocol.storage.Storage.TableId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasTableId) return false;
      if (!getTableId().isInitialized()) return false;
      for (bnet.protocol.storage.Storage.Cell element : getDataList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasErrorCode()) {
        output.writeUInt32(1, getErrorCode());
      }
      if (hasTableId()) {
        output.writeMessage(2, getTableId());
      }
      for (bnet.protocol.storage.Storage.Cell element : getDataList()) {
        output.writeMessage(3, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasErrorCode()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getErrorCode());
      }
      if (hasTableId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getTableId());
      }
      for (bnet.protocol.storage.Storage.Cell element : getDataList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.storage.Storage.OperationResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.storage.Storage.OperationResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.OperationResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.storage.Storage.OperationResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.OperationResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.storage.Storage.OperationResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.OperationResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.storage.Storage.OperationResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.storage.Storage.OperationResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.storage.Storage.OperationResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.storage.Storage.OperationResult prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.storage.Storage.OperationResult result;
      
      // Construct using bnet.protocol.storage.Storage.OperationResult.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.storage.Storage.OperationResult();
        return builder;
      }
      
      protected bnet.protocol.storage.Storage.OperationResult internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.storage.Storage.OperationResult();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.storage.Storage.OperationResult.getDescriptor();
      }
      
      public bnet.protocol.storage.Storage.OperationResult getDefaultInstanceForType() {
        return bnet.protocol.storage.Storage.OperationResult.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.storage.Storage.OperationResult build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.storage.Storage.OperationResult buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.storage.Storage.OperationResult buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.data_ != java.util.Collections.EMPTY_LIST) {
          result.data_ =
            java.util.Collections.unmodifiableList(result.data_);
        }
        bnet.protocol.storage.Storage.OperationResult returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.storage.Storage.OperationResult) {
          return mergeFrom((bnet.protocol.storage.Storage.OperationResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.storage.Storage.OperationResult other) {
        if (other == bnet.protocol.storage.Storage.OperationResult.getDefaultInstance()) return this;
        if (other.hasErrorCode()) {
          setErrorCode(other.getErrorCode());
        }
        if (other.hasTableId()) {
          mergeTableId(other.getTableId());
        }
        if (!other.data_.isEmpty()) {
          if (result.data_.isEmpty()) {
            result.data_ = new java.util.ArrayList<bnet.protocol.storage.Storage.Cell>();
          }
          result.data_.addAll(other.data_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setErrorCode(input.readUInt32());
              break;
            }
            case 18: {
              bnet.protocol.storage.Storage.TableId.Builder subBuilder = bnet.protocol.storage.Storage.TableId.newBuilder();
              if (hasTableId()) {
                subBuilder.mergeFrom(getTableId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setTableId(subBuilder.buildPartial());
              break;
            }
            case 26: {
              bnet.protocol.storage.Storage.Cell.Builder subBuilder = bnet.protocol.storage.Storage.Cell.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addData(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 error_code = 1;
      public boolean hasErrorCode() {
        return result.hasErrorCode();
      }
      public int getErrorCode() {
        return result.getErrorCode();
      }
      public Builder setErrorCode(int value) {
        result.hasErrorCode = true;
        result.errorCode_ = value;
        return this;
      }
      public Builder clearErrorCode() {
        result.hasErrorCode = false;
        result.errorCode_ = 0;
        return this;
      }
      
      // required .bnet.protocol.storage.TableId table_id = 2;
      public boolean hasTableId() {
        return result.hasTableId();
      }
      public bnet.protocol.storage.Storage.TableId getTableId() {
        return result.getTableId();
      }
      public Builder setTableId(bnet.protocol.storage.Storage.TableId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasTableId = true;
        result.tableId_ = value;
        return this;
      }
      public Builder setTableId(bnet.protocol.storage.Storage.TableId.Builder builderForValue) {
        result.hasTableId = true;
        result.tableId_ = builderForValue.build();
        return this;
      }
      public Builder mergeTableId(bnet.protocol.storage.Storage.TableId value) {
        if (result.hasTableId() &&
            result.tableId_ != bnet.protocol.storage.Storage.TableId.getDefaultInstance()) {
          result.tableId_ =
            bnet.protocol.storage.Storage.TableId.newBuilder(result.tableId_).mergeFrom(value).buildPartial();
        } else {
          result.tableId_ = value;
        }
        result.hasTableId = true;
        return this;
      }
      public Builder clearTableId() {
        result.hasTableId = false;
        result.tableId_ = bnet.protocol.storage.Storage.TableId.getDefaultInstance();
        return this;
      }
      
      // repeated .bnet.protocol.storage.Cell data = 3;
      public java.util.List<bnet.protocol.storage.Storage.Cell> getDataList() {
        return java.util.Collections.unmodifiableList(result.data_);
      }
      public int getDataCount() {
        return result.getDataCount();
      }
      public bnet.protocol.storage.Storage.Cell getData(int index) {
        return result.getData(index);
      }
      public Builder setData(int index, bnet.protocol.storage.Storage.Cell value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.data_.set(index, value);
        return this;
      }
      public Builder setData(int index, bnet.protocol.storage.Storage.Cell.Builder builderForValue) {
        result.data_.set(index, builderForValue.build());
        return this;
      }
      public Builder addData(bnet.protocol.storage.Storage.Cell value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.data_.isEmpty()) {
          result.data_ = new java.util.ArrayList<bnet.protocol.storage.Storage.Cell>();
        }
        result.data_.add(value);
        return this;
      }
      public Builder addData(bnet.protocol.storage.Storage.Cell.Builder builderForValue) {
        if (result.data_.isEmpty()) {
          result.data_ = new java.util.ArrayList<bnet.protocol.storage.Storage.Cell>();
        }
        result.data_.add(builderForValue.build());
        return this;
      }
      public Builder addAllData(
          java.lang.Iterable<? extends bnet.protocol.storage.Storage.Cell> values) {
        if (result.data_.isEmpty()) {
          result.data_ = new java.util.ArrayList<bnet.protocol.storage.Storage.Cell>();
        }
        super.addAll(values, result.data_);
        return this;
      }
      public Builder clearData() {
        result.data_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.storage.OperationResult)
    }
    
    static {
      defaultInstance = new OperationResult(true);
      bnet.protocol.storage.Storage.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.storage.OperationResult)
  }
  
  public static final class OpenTableRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use OpenTableRequest.newBuilder() to construct.
    private OpenTableRequest() {
      initFields();
    }
    private OpenTableRequest(boolean noInit) {}
    
    private static final OpenTableRequest defaultInstance;
    public static OpenTableRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public OpenTableRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.storage.Storage.internal_static_bnet_protocol_storage_OpenTableRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.storage.Storage.internal_static_bnet_protocol_storage_OpenTableRequest_fieldAccessorTable;
    }
    
    // optional string schema = 1;
    public static final int SCHEMA_FIELD_NUMBER = 1;
    private boolean hasSchema;
    private java.lang.String schema_ = "";
    public boolean hasSchema() { return hasSchema; }
    public java.lang.String getSchema() { return schema_; }
    
    // optional .bnet.protocol.storage.Privilege privilege = 2;
    public static final int PRIVILEGE_FIELD_NUMBER = 2;
    private boolean hasPrivilege;
    private bnet.protocol.storage.Storage.Privilege privilege_;
    public boolean hasPrivilege() { return hasPrivilege; }
    public bnet.protocol.storage.Storage.Privilege getPrivilege() { return privilege_; }
    
    // required .bnet.protocol.storage.TableId table_id = 3;
    public static final int TABLE_ID_FIELD_NUMBER = 3;
    private boolean hasTableId;
    private bnet.protocol.storage.Storage.TableId tableId_;
    public boolean hasTableId() { return hasTableId; }
    public bnet.protocol.storage.Storage.TableId getTableId() { return tableId_; }
    
    // optional .bnet.protocol.EntityId agent_id = 4;
    public static final int AGENT_ID_FIELD_NUMBER = 4;
    private boolean hasAgentId;
    private bnet.protocol.Entity.EntityId agentId_;
    public boolean hasAgentId() { return hasAgentId; }
    public bnet.protocol.Entity.EntityId getAgentId() { return agentId_; }
    
    // optional string process_name = 5;
    public static final int PROCESS_NAME_FIELD_NUMBER = 5;
    private boolean hasProcessName;
    private java.lang.String processName_ = "";
    public boolean hasProcessName() { return hasProcessName; }
    public java.lang.String getProcessName() { return processName_; }
    
    private void initFields() {
      privilege_ = bnet.protocol.storage.Storage.Privilege.getDefaultInstance();
      tableId_ = bnet.protocol.storage.Storage.TableId.getDefaultInstance();
      agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasTableId) return false;
      if (!getTableId().isInitialized()) return false;
      if (hasAgentId()) {
        if (!getAgentId().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSchema()) {
        output.writeString(1, getSchema());
      }
      if (hasPrivilege()) {
        output.writeMessage(2, getPrivilege());
      }
      if (hasTableId()) {
        output.writeMessage(3, getTableId());
      }
      if (hasAgentId()) {
        output.writeMessage(4, getAgentId());
      }
      if (hasProcessName()) {
        output.writeString(5, getProcessName());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSchema()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getSchema());
      }
      if (hasPrivilege()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPrivilege());
      }
      if (hasTableId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getTableId());
      }
      if (hasAgentId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getAgentId());
      }
      if (hasProcessName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getProcessName());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.storage.Storage.OpenTableRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.storage.Storage.OpenTableRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.OpenTableRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.storage.Storage.OpenTableRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.OpenTableRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.storage.Storage.OpenTableRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.OpenTableRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.storage.Storage.OpenTableRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.storage.Storage.OpenTableRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.storage.Storage.OpenTableRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.storage.Storage.OpenTableRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.storage.Storage.OpenTableRequest result;
      
      // Construct using bnet.protocol.storage.Storage.OpenTableRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.storage.Storage.OpenTableRequest();
        return builder;
      }
      
      protected bnet.protocol.storage.Storage.OpenTableRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.storage.Storage.OpenTableRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.storage.Storage.OpenTableRequest.getDescriptor();
      }
      
      public bnet.protocol.storage.Storage.OpenTableRequest getDefaultInstanceForType() {
        return bnet.protocol.storage.Storage.OpenTableRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.storage.Storage.OpenTableRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.storage.Storage.OpenTableRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.storage.Storage.OpenTableRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.storage.Storage.OpenTableRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.storage.Storage.OpenTableRequest) {
          return mergeFrom((bnet.protocol.storage.Storage.OpenTableRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.storage.Storage.OpenTableRequest other) {
        if (other == bnet.protocol.storage.Storage.OpenTableRequest.getDefaultInstance()) return this;
        if (other.hasSchema()) {
          setSchema(other.getSchema());
        }
        if (other.hasPrivilege()) {
          mergePrivilege(other.getPrivilege());
        }
        if (other.hasTableId()) {
          mergeTableId(other.getTableId());
        }
        if (other.hasAgentId()) {
          mergeAgentId(other.getAgentId());
        }
        if (other.hasProcessName()) {
          setProcessName(other.getProcessName());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setSchema(input.readString());
              break;
            }
            case 18: {
              bnet.protocol.storage.Storage.Privilege.Builder subBuilder = bnet.protocol.storage.Storage.Privilege.newBuilder();
              if (hasPrivilege()) {
                subBuilder.mergeFrom(getPrivilege());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setPrivilege(subBuilder.buildPartial());
              break;
            }
            case 26: {
              bnet.protocol.storage.Storage.TableId.Builder subBuilder = bnet.protocol.storage.Storage.TableId.newBuilder();
              if (hasTableId()) {
                subBuilder.mergeFrom(getTableId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setTableId(subBuilder.buildPartial());
              break;
            }
            case 34: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasAgentId()) {
                subBuilder.mergeFrom(getAgentId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAgentId(subBuilder.buildPartial());
              break;
            }
            case 42: {
              setProcessName(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional string schema = 1;
      public boolean hasSchema() {
        return result.hasSchema();
      }
      public java.lang.String getSchema() {
        return result.getSchema();
      }
      public Builder setSchema(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasSchema = true;
        result.schema_ = value;
        return this;
      }
      public Builder clearSchema() {
        result.hasSchema = false;
        result.schema_ = getDefaultInstance().getSchema();
        return this;
      }
      
      // optional .bnet.protocol.storage.Privilege privilege = 2;
      public boolean hasPrivilege() {
        return result.hasPrivilege();
      }
      public bnet.protocol.storage.Storage.Privilege getPrivilege() {
        return result.getPrivilege();
      }
      public Builder setPrivilege(bnet.protocol.storage.Storage.Privilege value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasPrivilege = true;
        result.privilege_ = value;
        return this;
      }
      public Builder setPrivilege(bnet.protocol.storage.Storage.Privilege.Builder builderForValue) {
        result.hasPrivilege = true;
        result.privilege_ = builderForValue.build();
        return this;
      }
      public Builder mergePrivilege(bnet.protocol.storage.Storage.Privilege value) {
        if (result.hasPrivilege() &&
            result.privilege_ != bnet.protocol.storage.Storage.Privilege.getDefaultInstance()) {
          result.privilege_ =
            bnet.protocol.storage.Storage.Privilege.newBuilder(result.privilege_).mergeFrom(value).buildPartial();
        } else {
          result.privilege_ = value;
        }
        result.hasPrivilege = true;
        return this;
      }
      public Builder clearPrivilege() {
        result.hasPrivilege = false;
        result.privilege_ = bnet.protocol.storage.Storage.Privilege.getDefaultInstance();
        return this;
      }
      
      // required .bnet.protocol.storage.TableId table_id = 3;
      public boolean hasTableId() {
        return result.hasTableId();
      }
      public bnet.protocol.storage.Storage.TableId getTableId() {
        return result.getTableId();
      }
      public Builder setTableId(bnet.protocol.storage.Storage.TableId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasTableId = true;
        result.tableId_ = value;
        return this;
      }
      public Builder setTableId(bnet.protocol.storage.Storage.TableId.Builder builderForValue) {
        result.hasTableId = true;
        result.tableId_ = builderForValue.build();
        return this;
      }
      public Builder mergeTableId(bnet.protocol.storage.Storage.TableId value) {
        if (result.hasTableId() &&
            result.tableId_ != bnet.protocol.storage.Storage.TableId.getDefaultInstance()) {
          result.tableId_ =
            bnet.protocol.storage.Storage.TableId.newBuilder(result.tableId_).mergeFrom(value).buildPartial();
        } else {
          result.tableId_ = value;
        }
        result.hasTableId = true;
        return this;
      }
      public Builder clearTableId() {
        result.hasTableId = false;
        result.tableId_ = bnet.protocol.storage.Storage.TableId.getDefaultInstance();
        return this;
      }
      
      // optional .bnet.protocol.EntityId agent_id = 4;
      public boolean hasAgentId() {
        return result.hasAgentId();
      }
      public bnet.protocol.Entity.EntityId getAgentId() {
        return result.getAgentId();
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasAgentId = true;
        result.agentId_ = builderForValue.build();
        return this;
      }
      public Builder mergeAgentId(bnet.protocol.Entity.EntityId value) {
        if (result.hasAgentId() &&
            result.agentId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.agentId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.agentId_).mergeFrom(value).buildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder clearAgentId() {
        result.hasAgentId = false;
        result.agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // optional string process_name = 5;
      public boolean hasProcessName() {
        return result.hasProcessName();
      }
      public java.lang.String getProcessName() {
        return result.getProcessName();
      }
      public Builder setProcessName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasProcessName = true;
        result.processName_ = value;
        return this;
      }
      public Builder clearProcessName() {
        result.hasProcessName = false;
        result.processName_ = getDefaultInstance().getProcessName();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.storage.OpenTableRequest)
    }
    
    static {
      defaultInstance = new OpenTableRequest(true);
      bnet.protocol.storage.Storage.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.storage.OpenTableRequest)
  }
  
  public static final class OpenTableResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use OpenTableResponse.newBuilder() to construct.
    private OpenTableResponse() {
      initFields();
    }
    private OpenTableResponse(boolean noInit) {}
    
    private static final OpenTableResponse defaultInstance;
    public static OpenTableResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public OpenTableResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.storage.Storage.internal_static_bnet_protocol_storage_OpenTableResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.storage.Storage.internal_static_bnet_protocol_storage_OpenTableResponse_fieldAccessorTable;
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.storage.Storage.OpenTableResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.storage.Storage.OpenTableResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.OpenTableResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.storage.Storage.OpenTableResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.OpenTableResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.storage.Storage.OpenTableResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.OpenTableResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.storage.Storage.OpenTableResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.storage.Storage.OpenTableResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.storage.Storage.OpenTableResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.storage.Storage.OpenTableResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.storage.Storage.OpenTableResponse result;
      
      // Construct using bnet.protocol.storage.Storage.OpenTableResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.storage.Storage.OpenTableResponse();
        return builder;
      }
      
      protected bnet.protocol.storage.Storage.OpenTableResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.storage.Storage.OpenTableResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.storage.Storage.OpenTableResponse.getDescriptor();
      }
      
      public bnet.protocol.storage.Storage.OpenTableResponse getDefaultInstanceForType() {
        return bnet.protocol.storage.Storage.OpenTableResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.storage.Storage.OpenTableResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.storage.Storage.OpenTableResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.storage.Storage.OpenTableResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.storage.Storage.OpenTableResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.storage.Storage.OpenTableResponse) {
          return mergeFrom((bnet.protocol.storage.Storage.OpenTableResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.storage.Storage.OpenTableResponse other) {
        if (other == bnet.protocol.storage.Storage.OpenTableResponse.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
          }
        }
      }
      
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.storage.OpenTableResponse)
    }
    
    static {
      defaultInstance = new OpenTableResponse(true);
      bnet.protocol.storage.Storage.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.storage.OpenTableResponse)
  }
  
  public static final class OpenColumnRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use OpenColumnRequest.newBuilder() to construct.
    private OpenColumnRequest() {
      initFields();
    }
    private OpenColumnRequest(boolean noInit) {}
    
    private static final OpenColumnRequest defaultInstance;
    public static OpenColumnRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public OpenColumnRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.storage.Storage.internal_static_bnet_protocol_storage_OpenColumnRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.storage.Storage.internal_static_bnet_protocol_storage_OpenColumnRequest_fieldAccessorTable;
    }
    
    // optional string schema = 1;
    public static final int SCHEMA_FIELD_NUMBER = 1;
    private boolean hasSchema;
    private java.lang.String schema_ = "";
    public boolean hasSchema() { return hasSchema; }
    public java.lang.String getSchema() { return schema_; }
    
    // optional .bnet.protocol.storage.Privilege privilege = 2;
    public static final int PRIVILEGE_FIELD_NUMBER = 2;
    private boolean hasPrivilege;
    private bnet.protocol.storage.Storage.Privilege privilege_;
    public boolean hasPrivilege() { return hasPrivilege; }
    public bnet.protocol.storage.Storage.Privilege getPrivilege() { return privilege_; }
    
    // required .bnet.protocol.storage.TableId table_id = 4;
    public static final int TABLE_ID_FIELD_NUMBER = 4;
    private boolean hasTableId;
    private bnet.protocol.storage.Storage.TableId tableId_;
    public boolean hasTableId() { return hasTableId; }
    public bnet.protocol.storage.Storage.TableId getTableId() { return tableId_; }
    
    // required .bnet.protocol.storage.ColumnId column_id = 5;
    public static final int COLUMN_ID_FIELD_NUMBER = 5;
    private boolean hasColumnId;
    private bnet.protocol.storage.Storage.ColumnId columnId_;
    public boolean hasColumnId() { return hasColumnId; }
    public bnet.protocol.storage.Storage.ColumnId getColumnId() { return columnId_; }
    
    // optional string proto_type = 6;
    public static final int PROTO_TYPE_FIELD_NUMBER = 6;
    private boolean hasProtoType;
    private java.lang.String protoType_ = "";
    public boolean hasProtoType() { return hasProtoType; }
    public java.lang.String getProtoType() { return protoType_; }
    
    // optional .bnet.protocol.EntityId agent_id = 7;
    public static final int AGENT_ID_FIELD_NUMBER = 7;
    private boolean hasAgentId;
    private bnet.protocol.Entity.EntityId agentId_;
    public boolean hasAgentId() { return hasAgentId; }
    public bnet.protocol.Entity.EntityId getAgentId() { return agentId_; }
    
    // optional string process_name = 8;
    public static final int PROCESS_NAME_FIELD_NUMBER = 8;
    private boolean hasProcessName;
    private java.lang.String processName_ = "";
    public boolean hasProcessName() { return hasProcessName; }
    public java.lang.String getProcessName() { return processName_; }
    
    private void initFields() {
      privilege_ = bnet.protocol.storage.Storage.Privilege.getDefaultInstance();
      tableId_ = bnet.protocol.storage.Storage.TableId.getDefaultInstance();
      columnId_ = bnet.protocol.storage.Storage.ColumnId.getDefaultInstance();
      agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasTableId) return false;
      if (!hasColumnId) return false;
      if (!getTableId().isInitialized()) return false;
      if (!getColumnId().isInitialized()) return false;
      if (hasAgentId()) {
        if (!getAgentId().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSchema()) {
        output.writeString(1, getSchema());
      }
      if (hasPrivilege()) {
        output.writeMessage(2, getPrivilege());
      }
      if (hasTableId()) {
        output.writeMessage(4, getTableId());
      }
      if (hasColumnId()) {
        output.writeMessage(5, getColumnId());
      }
      if (hasProtoType()) {
        output.writeString(6, getProtoType());
      }
      if (hasAgentId()) {
        output.writeMessage(7, getAgentId());
      }
      if (hasProcessName()) {
        output.writeString(8, getProcessName());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSchema()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getSchema());
      }
      if (hasPrivilege()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPrivilege());
      }
      if (hasTableId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getTableId());
      }
      if (hasColumnId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getColumnId());
      }
      if (hasProtoType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(6, getProtoType());
      }
      if (hasAgentId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getAgentId());
      }
      if (hasProcessName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(8, getProcessName());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.storage.Storage.OpenColumnRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.storage.Storage.OpenColumnRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.OpenColumnRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.storage.Storage.OpenColumnRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.OpenColumnRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.storage.Storage.OpenColumnRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.OpenColumnRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.storage.Storage.OpenColumnRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.storage.Storage.OpenColumnRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.storage.Storage.OpenColumnRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.storage.Storage.OpenColumnRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.storage.Storage.OpenColumnRequest result;
      
      // Construct using bnet.protocol.storage.Storage.OpenColumnRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.storage.Storage.OpenColumnRequest();
        return builder;
      }
      
      protected bnet.protocol.storage.Storage.OpenColumnRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.storage.Storage.OpenColumnRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.storage.Storage.OpenColumnRequest.getDescriptor();
      }
      
      public bnet.protocol.storage.Storage.OpenColumnRequest getDefaultInstanceForType() {
        return bnet.protocol.storage.Storage.OpenColumnRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.storage.Storage.OpenColumnRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.storage.Storage.OpenColumnRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.storage.Storage.OpenColumnRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.storage.Storage.OpenColumnRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.storage.Storage.OpenColumnRequest) {
          return mergeFrom((bnet.protocol.storage.Storage.OpenColumnRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.storage.Storage.OpenColumnRequest other) {
        if (other == bnet.protocol.storage.Storage.OpenColumnRequest.getDefaultInstance()) return this;
        if (other.hasSchema()) {
          setSchema(other.getSchema());
        }
        if (other.hasPrivilege()) {
          mergePrivilege(other.getPrivilege());
        }
        if (other.hasTableId()) {
          mergeTableId(other.getTableId());
        }
        if (other.hasColumnId()) {
          mergeColumnId(other.getColumnId());
        }
        if (other.hasProtoType()) {
          setProtoType(other.getProtoType());
        }
        if (other.hasAgentId()) {
          mergeAgentId(other.getAgentId());
        }
        if (other.hasProcessName()) {
          setProcessName(other.getProcessName());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setSchema(input.readString());
              break;
            }
            case 18: {
              bnet.protocol.storage.Storage.Privilege.Builder subBuilder = bnet.protocol.storage.Storage.Privilege.newBuilder();
              if (hasPrivilege()) {
                subBuilder.mergeFrom(getPrivilege());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setPrivilege(subBuilder.buildPartial());
              break;
            }
            case 34: {
              bnet.protocol.storage.Storage.TableId.Builder subBuilder = bnet.protocol.storage.Storage.TableId.newBuilder();
              if (hasTableId()) {
                subBuilder.mergeFrom(getTableId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setTableId(subBuilder.buildPartial());
              break;
            }
            case 42: {
              bnet.protocol.storage.Storage.ColumnId.Builder subBuilder = bnet.protocol.storage.Storage.ColumnId.newBuilder();
              if (hasColumnId()) {
                subBuilder.mergeFrom(getColumnId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setColumnId(subBuilder.buildPartial());
              break;
            }
            case 50: {
              setProtoType(input.readString());
              break;
            }
            case 58: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasAgentId()) {
                subBuilder.mergeFrom(getAgentId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAgentId(subBuilder.buildPartial());
              break;
            }
            case 66: {
              setProcessName(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional string schema = 1;
      public boolean hasSchema() {
        return result.hasSchema();
      }
      public java.lang.String getSchema() {
        return result.getSchema();
      }
      public Builder setSchema(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasSchema = true;
        result.schema_ = value;
        return this;
      }
      public Builder clearSchema() {
        result.hasSchema = false;
        result.schema_ = getDefaultInstance().getSchema();
        return this;
      }
      
      // optional .bnet.protocol.storage.Privilege privilege = 2;
      public boolean hasPrivilege() {
        return result.hasPrivilege();
      }
      public bnet.protocol.storage.Storage.Privilege getPrivilege() {
        return result.getPrivilege();
      }
      public Builder setPrivilege(bnet.protocol.storage.Storage.Privilege value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasPrivilege = true;
        result.privilege_ = value;
        return this;
      }
      public Builder setPrivilege(bnet.protocol.storage.Storage.Privilege.Builder builderForValue) {
        result.hasPrivilege = true;
        result.privilege_ = builderForValue.build();
        return this;
      }
      public Builder mergePrivilege(bnet.protocol.storage.Storage.Privilege value) {
        if (result.hasPrivilege() &&
            result.privilege_ != bnet.protocol.storage.Storage.Privilege.getDefaultInstance()) {
          result.privilege_ =
            bnet.protocol.storage.Storage.Privilege.newBuilder(result.privilege_).mergeFrom(value).buildPartial();
        } else {
          result.privilege_ = value;
        }
        result.hasPrivilege = true;
        return this;
      }
      public Builder clearPrivilege() {
        result.hasPrivilege = false;
        result.privilege_ = bnet.protocol.storage.Storage.Privilege.getDefaultInstance();
        return this;
      }
      
      // required .bnet.protocol.storage.TableId table_id = 4;
      public boolean hasTableId() {
        return result.hasTableId();
      }
      public bnet.protocol.storage.Storage.TableId getTableId() {
        return result.getTableId();
      }
      public Builder setTableId(bnet.protocol.storage.Storage.TableId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasTableId = true;
        result.tableId_ = value;
        return this;
      }
      public Builder setTableId(bnet.protocol.storage.Storage.TableId.Builder builderForValue) {
        result.hasTableId = true;
        result.tableId_ = builderForValue.build();
        return this;
      }
      public Builder mergeTableId(bnet.protocol.storage.Storage.TableId value) {
        if (result.hasTableId() &&
            result.tableId_ != bnet.protocol.storage.Storage.TableId.getDefaultInstance()) {
          result.tableId_ =
            bnet.protocol.storage.Storage.TableId.newBuilder(result.tableId_).mergeFrom(value).buildPartial();
        } else {
          result.tableId_ = value;
        }
        result.hasTableId = true;
        return this;
      }
      public Builder clearTableId() {
        result.hasTableId = false;
        result.tableId_ = bnet.protocol.storage.Storage.TableId.getDefaultInstance();
        return this;
      }
      
      // required .bnet.protocol.storage.ColumnId column_id = 5;
      public boolean hasColumnId() {
        return result.hasColumnId();
      }
      public bnet.protocol.storage.Storage.ColumnId getColumnId() {
        return result.getColumnId();
      }
      public Builder setColumnId(bnet.protocol.storage.Storage.ColumnId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasColumnId = true;
        result.columnId_ = value;
        return this;
      }
      public Builder setColumnId(bnet.protocol.storage.Storage.ColumnId.Builder builderForValue) {
        result.hasColumnId = true;
        result.columnId_ = builderForValue.build();
        return this;
      }
      public Builder mergeColumnId(bnet.protocol.storage.Storage.ColumnId value) {
        if (result.hasColumnId() &&
            result.columnId_ != bnet.protocol.storage.Storage.ColumnId.getDefaultInstance()) {
          result.columnId_ =
            bnet.protocol.storage.Storage.ColumnId.newBuilder(result.columnId_).mergeFrom(value).buildPartial();
        } else {
          result.columnId_ = value;
        }
        result.hasColumnId = true;
        return this;
      }
      public Builder clearColumnId() {
        result.hasColumnId = false;
        result.columnId_ = bnet.protocol.storage.Storage.ColumnId.getDefaultInstance();
        return this;
      }
      
      // optional string proto_type = 6;
      public boolean hasProtoType() {
        return result.hasProtoType();
      }
      public java.lang.String getProtoType() {
        return result.getProtoType();
      }
      public Builder setProtoType(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasProtoType = true;
        result.protoType_ = value;
        return this;
      }
      public Builder clearProtoType() {
        result.hasProtoType = false;
        result.protoType_ = getDefaultInstance().getProtoType();
        return this;
      }
      
      // optional .bnet.protocol.EntityId agent_id = 7;
      public boolean hasAgentId() {
        return result.hasAgentId();
      }
      public bnet.protocol.Entity.EntityId getAgentId() {
        return result.getAgentId();
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasAgentId = true;
        result.agentId_ = builderForValue.build();
        return this;
      }
      public Builder mergeAgentId(bnet.protocol.Entity.EntityId value) {
        if (result.hasAgentId() &&
            result.agentId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.agentId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.agentId_).mergeFrom(value).buildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder clearAgentId() {
        result.hasAgentId = false;
        result.agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // optional string process_name = 8;
      public boolean hasProcessName() {
        return result.hasProcessName();
      }
      public java.lang.String getProcessName() {
        return result.getProcessName();
      }
      public Builder setProcessName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasProcessName = true;
        result.processName_ = value;
        return this;
      }
      public Builder clearProcessName() {
        result.hasProcessName = false;
        result.processName_ = getDefaultInstance().getProcessName();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.storage.OpenColumnRequest)
    }
    
    static {
      defaultInstance = new OpenColumnRequest(true);
      bnet.protocol.storage.Storage.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.storage.OpenColumnRequest)
  }
  
  public static final class OpenColumnResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use OpenColumnResponse.newBuilder() to construct.
    private OpenColumnResponse() {
      initFields();
    }
    private OpenColumnResponse(boolean noInit) {}
    
    private static final OpenColumnResponse defaultInstance;
    public static OpenColumnResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public OpenColumnResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.storage.Storage.internal_static_bnet_protocol_storage_OpenColumnResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.storage.Storage.internal_static_bnet_protocol_storage_OpenColumnResponse_fieldAccessorTable;
    }
    
    // optional bool server_field_ops = 2;
    public static final int SERVER_FIELD_OPS_FIELD_NUMBER = 2;
    private boolean hasServerFieldOps;
    private boolean serverFieldOps_ = false;
    public boolean hasServerFieldOps() { return hasServerFieldOps; }
    public boolean getServerFieldOps() { return serverFieldOps_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasServerFieldOps()) {
        output.writeBool(2, getServerFieldOps());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasServerFieldOps()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, getServerFieldOps());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.storage.Storage.OpenColumnResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.storage.Storage.OpenColumnResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.OpenColumnResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.storage.Storage.OpenColumnResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.OpenColumnResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.storage.Storage.OpenColumnResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.OpenColumnResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.storage.Storage.OpenColumnResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.storage.Storage.OpenColumnResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.storage.Storage.OpenColumnResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.storage.Storage.OpenColumnResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.storage.Storage.OpenColumnResponse result;
      
      // Construct using bnet.protocol.storage.Storage.OpenColumnResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.storage.Storage.OpenColumnResponse();
        return builder;
      }
      
      protected bnet.protocol.storage.Storage.OpenColumnResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.storage.Storage.OpenColumnResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.storage.Storage.OpenColumnResponse.getDescriptor();
      }
      
      public bnet.protocol.storage.Storage.OpenColumnResponse getDefaultInstanceForType() {
        return bnet.protocol.storage.Storage.OpenColumnResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.storage.Storage.OpenColumnResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.storage.Storage.OpenColumnResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.storage.Storage.OpenColumnResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.storage.Storage.OpenColumnResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.storage.Storage.OpenColumnResponse) {
          return mergeFrom((bnet.protocol.storage.Storage.OpenColumnResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.storage.Storage.OpenColumnResponse other) {
        if (other == bnet.protocol.storage.Storage.OpenColumnResponse.getDefaultInstance()) return this;
        if (other.hasServerFieldOps()) {
          setServerFieldOps(other.getServerFieldOps());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 16: {
              setServerFieldOps(input.readBool());
              break;
            }
          }
        }
      }
      
      
      // optional bool server_field_ops = 2;
      public boolean hasServerFieldOps() {
        return result.hasServerFieldOps();
      }
      public boolean getServerFieldOps() {
        return result.getServerFieldOps();
      }
      public Builder setServerFieldOps(boolean value) {
        result.hasServerFieldOps = true;
        result.serverFieldOps_ = value;
        return this;
      }
      public Builder clearServerFieldOps() {
        result.hasServerFieldOps = false;
        result.serverFieldOps_ = false;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.storage.OpenColumnResponse)
    }
    
    static {
      defaultInstance = new OpenColumnResponse(true);
      bnet.protocol.storage.Storage.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.storage.OpenColumnResponse)
  }
  
  public static final class ExecuteRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use ExecuteRequest.newBuilder() to construct.
    private ExecuteRequest() {
      initFields();
    }
    private ExecuteRequest(boolean noInit) {}
    
    private static final ExecuteRequest defaultInstance;
    public static ExecuteRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public ExecuteRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.storage.Storage.internal_static_bnet_protocol_storage_ExecuteRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.storage.Storage.internal_static_bnet_protocol_storage_ExecuteRequest_fieldAccessorTable;
    }
    
    // optional string schema = 1;
    public static final int SCHEMA_FIELD_NUMBER = 1;
    private boolean hasSchema;
    private java.lang.String schema_ = "";
    public boolean hasSchema() { return hasSchema; }
    public java.lang.String getSchema() { return schema_; }
    
    // optional .bnet.protocol.storage.Privilege privilege = 2;
    public static final int PRIVILEGE_FIELD_NUMBER = 2;
    private boolean hasPrivilege;
    private bnet.protocol.storage.Storage.Privilege privilege_;
    public boolean hasPrivilege() { return hasPrivilege; }
    public bnet.protocol.storage.Storage.Privilege getPrivilege() { return privilege_; }
    
    // optional bool read_only = 3;
    public static final int READ_ONLY_FIELD_NUMBER = 3;
    private boolean hasReadOnly;
    private boolean readOnly_ = false;
    public boolean hasReadOnly() { return hasReadOnly; }
    public boolean getReadOnly() { return readOnly_; }
    
    // optional bool wants_row_key = 4;
    public static final int WANTS_ROW_KEY_FIELD_NUMBER = 4;
    private boolean hasWantsRowKey;
    private boolean wantsRowKey_ = false;
    public boolean hasWantsRowKey() { return hasWantsRowKey; }
    public boolean getWantsRowKey() { return wantsRowKey_; }
    
    // optional bool wants_column_name = 5;
    public static final int WANTS_COLUMN_NAME_FIELD_NUMBER = 5;
    private boolean hasWantsColumnName;
    private boolean wantsColumnName_ = false;
    public boolean hasWantsColumnName() { return hasWantsColumnName; }
    public boolean getWantsColumnName() { return wantsColumnName_; }
    
    // optional uint32 max_data_size = 6;
    public static final int MAX_DATA_SIZE_FIELD_NUMBER = 6;
    private boolean hasMaxDataSize;
    private int maxDataSize_ = 0;
    public boolean hasMaxDataSize() { return hasMaxDataSize; }
    public int getMaxDataSize() { return maxDataSize_; }
    
    // repeated .bnet.protocol.storage.Operation operations = 7;
    public static final int OPERATIONS_FIELD_NUMBER = 7;
    private java.util.List<bnet.protocol.storage.Storage.Operation> operations_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.storage.Storage.Operation> getOperationsList() {
      return operations_;
    }
    public int getOperationsCount() { return operations_.size(); }
    public bnet.protocol.storage.Storage.Operation getOperations(int index) {
      return operations_.get(index);
    }
    
    // optional uint32 timeout = 12;
    public static final int TIMEOUT_FIELD_NUMBER = 12;
    private boolean hasTimeout;
    private int timeout_ = 0;
    public boolean hasTimeout() { return hasTimeout; }
    public int getTimeout() { return timeout_; }
    
    // optional .bnet.protocol.EntityId agent_id = 9;
    public static final int AGENT_ID_FIELD_NUMBER = 9;
    private boolean hasAgentId;
    private bnet.protocol.Entity.EntityId agentId_;
    public boolean hasAgentId() { return hasAgentId; }
    public bnet.protocol.Entity.EntityId getAgentId() { return agentId_; }
    
    // optional string query_name = 10;
    public static final int QUERY_NAME_FIELD_NUMBER = 10;
    private boolean hasQueryName;
    private java.lang.String queryName_ = "";
    public boolean hasQueryName() { return hasQueryName; }
    public java.lang.String getQueryName() { return queryName_; }
    
    // optional string process_name = 11;
    public static final int PROCESS_NAME_FIELD_NUMBER = 11;
    private boolean hasProcessName;
    private java.lang.String processName_ = "";
    public boolean hasProcessName() { return hasProcessName; }
    public java.lang.String getProcessName() { return processName_; }
    
    private void initFields() {
      privilege_ = bnet.protocol.storage.Storage.Privilege.getDefaultInstance();
      agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      for (bnet.protocol.storage.Storage.Operation element : getOperationsList()) {
        if (!element.isInitialized()) return false;
      }
      if (hasAgentId()) {
        if (!getAgentId().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSchema()) {
        output.writeString(1, getSchema());
      }
      if (hasPrivilege()) {
        output.writeMessage(2, getPrivilege());
      }
      if (hasReadOnly()) {
        output.writeBool(3, getReadOnly());
      }
      if (hasWantsRowKey()) {
        output.writeBool(4, getWantsRowKey());
      }
      if (hasWantsColumnName()) {
        output.writeBool(5, getWantsColumnName());
      }
      if (hasMaxDataSize()) {
        output.writeUInt32(6, getMaxDataSize());
      }
      for (bnet.protocol.storage.Storage.Operation element : getOperationsList()) {
        output.writeMessage(7, element);
      }
      if (hasAgentId()) {
        output.writeMessage(9, getAgentId());
      }
      if (hasQueryName()) {
        output.writeString(10, getQueryName());
      }
      if (hasProcessName()) {
        output.writeString(11, getProcessName());
      }
      if (hasTimeout()) {
        output.writeUInt32(12, getTimeout());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSchema()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getSchema());
      }
      if (hasPrivilege()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPrivilege());
      }
      if (hasReadOnly()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, getReadOnly());
      }
      if (hasWantsRowKey()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, getWantsRowKey());
      }
      if (hasWantsColumnName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, getWantsColumnName());
      }
      if (hasMaxDataSize()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, getMaxDataSize());
      }
      for (bnet.protocol.storage.Storage.Operation element : getOperationsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, element);
      }
      if (hasAgentId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getAgentId());
      }
      if (hasQueryName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(10, getQueryName());
      }
      if (hasProcessName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(11, getProcessName());
      }
      if (hasTimeout()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, getTimeout());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.storage.Storage.ExecuteRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.storage.Storage.ExecuteRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.ExecuteRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.storage.Storage.ExecuteRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.ExecuteRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.storage.Storage.ExecuteRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.ExecuteRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.storage.Storage.ExecuteRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.storage.Storage.ExecuteRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.storage.Storage.ExecuteRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.storage.Storage.ExecuteRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.storage.Storage.ExecuteRequest result;
      
      // Construct using bnet.protocol.storage.Storage.ExecuteRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.storage.Storage.ExecuteRequest();
        return builder;
      }
      
      protected bnet.protocol.storage.Storage.ExecuteRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.storage.Storage.ExecuteRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.storage.Storage.ExecuteRequest.getDescriptor();
      }
      
      public bnet.protocol.storage.Storage.ExecuteRequest getDefaultInstanceForType() {
        return bnet.protocol.storage.Storage.ExecuteRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.storage.Storage.ExecuteRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.storage.Storage.ExecuteRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.storage.Storage.ExecuteRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.operations_ != java.util.Collections.EMPTY_LIST) {
          result.operations_ =
            java.util.Collections.unmodifiableList(result.operations_);
        }
        bnet.protocol.storage.Storage.ExecuteRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.storage.Storage.ExecuteRequest) {
          return mergeFrom((bnet.protocol.storage.Storage.ExecuteRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.storage.Storage.ExecuteRequest other) {
        if (other == bnet.protocol.storage.Storage.ExecuteRequest.getDefaultInstance()) return this;
        if (other.hasSchema()) {
          setSchema(other.getSchema());
        }
        if (other.hasPrivilege()) {
          mergePrivilege(other.getPrivilege());
        }
        if (other.hasReadOnly()) {
          setReadOnly(other.getReadOnly());
        }
        if (other.hasWantsRowKey()) {
          setWantsRowKey(other.getWantsRowKey());
        }
        if (other.hasWantsColumnName()) {
          setWantsColumnName(other.getWantsColumnName());
        }
        if (other.hasMaxDataSize()) {
          setMaxDataSize(other.getMaxDataSize());
        }
        if (!other.operations_.isEmpty()) {
          if (result.operations_.isEmpty()) {
            result.operations_ = new java.util.ArrayList<bnet.protocol.storage.Storage.Operation>();
          }
          result.operations_.addAll(other.operations_);
        }
        if (other.hasTimeout()) {
          setTimeout(other.getTimeout());
        }
        if (other.hasAgentId()) {
          mergeAgentId(other.getAgentId());
        }
        if (other.hasQueryName()) {
          setQueryName(other.getQueryName());
        }
        if (other.hasProcessName()) {
          setProcessName(other.getProcessName());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setSchema(input.readString());
              break;
            }
            case 18: {
              bnet.protocol.storage.Storage.Privilege.Builder subBuilder = bnet.protocol.storage.Storage.Privilege.newBuilder();
              if (hasPrivilege()) {
                subBuilder.mergeFrom(getPrivilege());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setPrivilege(subBuilder.buildPartial());
              break;
            }
            case 24: {
              setReadOnly(input.readBool());
              break;
            }
            case 32: {
              setWantsRowKey(input.readBool());
              break;
            }
            case 40: {
              setWantsColumnName(input.readBool());
              break;
            }
            case 48: {
              setMaxDataSize(input.readUInt32());
              break;
            }
            case 58: {
              bnet.protocol.storage.Storage.Operation.Builder subBuilder = bnet.protocol.storage.Storage.Operation.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addOperations(subBuilder.buildPartial());
              break;
            }
            case 74: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasAgentId()) {
                subBuilder.mergeFrom(getAgentId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAgentId(subBuilder.buildPartial());
              break;
            }
            case 82: {
              setQueryName(input.readString());
              break;
            }
            case 90: {
              setProcessName(input.readString());
              break;
            }
            case 96: {
              setTimeout(input.readUInt32());
              break;
            }
          }
        }
      }
      
      
      // optional string schema = 1;
      public boolean hasSchema() {
        return result.hasSchema();
      }
      public java.lang.String getSchema() {
        return result.getSchema();
      }
      public Builder setSchema(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasSchema = true;
        result.schema_ = value;
        return this;
      }
      public Builder clearSchema() {
        result.hasSchema = false;
        result.schema_ = getDefaultInstance().getSchema();
        return this;
      }
      
      // optional .bnet.protocol.storage.Privilege privilege = 2;
      public boolean hasPrivilege() {
        return result.hasPrivilege();
      }
      public bnet.protocol.storage.Storage.Privilege getPrivilege() {
        return result.getPrivilege();
      }
      public Builder setPrivilege(bnet.protocol.storage.Storage.Privilege value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasPrivilege = true;
        result.privilege_ = value;
        return this;
      }
      public Builder setPrivilege(bnet.protocol.storage.Storage.Privilege.Builder builderForValue) {
        result.hasPrivilege = true;
        result.privilege_ = builderForValue.build();
        return this;
      }
      public Builder mergePrivilege(bnet.protocol.storage.Storage.Privilege value) {
        if (result.hasPrivilege() &&
            result.privilege_ != bnet.protocol.storage.Storage.Privilege.getDefaultInstance()) {
          result.privilege_ =
            bnet.protocol.storage.Storage.Privilege.newBuilder(result.privilege_).mergeFrom(value).buildPartial();
        } else {
          result.privilege_ = value;
        }
        result.hasPrivilege = true;
        return this;
      }
      public Builder clearPrivilege() {
        result.hasPrivilege = false;
        result.privilege_ = bnet.protocol.storage.Storage.Privilege.getDefaultInstance();
        return this;
      }
      
      // optional bool read_only = 3;
      public boolean hasReadOnly() {
        return result.hasReadOnly();
      }
      public boolean getReadOnly() {
        return result.getReadOnly();
      }
      public Builder setReadOnly(boolean value) {
        result.hasReadOnly = true;
        result.readOnly_ = value;
        return this;
      }
      public Builder clearReadOnly() {
        result.hasReadOnly = false;
        result.readOnly_ = false;
        return this;
      }
      
      // optional bool wants_row_key = 4;
      public boolean hasWantsRowKey() {
        return result.hasWantsRowKey();
      }
      public boolean getWantsRowKey() {
        return result.getWantsRowKey();
      }
      public Builder setWantsRowKey(boolean value) {
        result.hasWantsRowKey = true;
        result.wantsRowKey_ = value;
        return this;
      }
      public Builder clearWantsRowKey() {
        result.hasWantsRowKey = false;
        result.wantsRowKey_ = false;
        return this;
      }
      
      // optional bool wants_column_name = 5;
      public boolean hasWantsColumnName() {
        return result.hasWantsColumnName();
      }
      public boolean getWantsColumnName() {
        return result.getWantsColumnName();
      }
      public Builder setWantsColumnName(boolean value) {
        result.hasWantsColumnName = true;
        result.wantsColumnName_ = value;
        return this;
      }
      public Builder clearWantsColumnName() {
        result.hasWantsColumnName = false;
        result.wantsColumnName_ = false;
        return this;
      }
      
      // optional uint32 max_data_size = 6;
      public boolean hasMaxDataSize() {
        return result.hasMaxDataSize();
      }
      public int getMaxDataSize() {
        return result.getMaxDataSize();
      }
      public Builder setMaxDataSize(int value) {
        result.hasMaxDataSize = true;
        result.maxDataSize_ = value;
        return this;
      }
      public Builder clearMaxDataSize() {
        result.hasMaxDataSize = false;
        result.maxDataSize_ = 0;
        return this;
      }
      
      // repeated .bnet.protocol.storage.Operation operations = 7;
      public java.util.List<bnet.protocol.storage.Storage.Operation> getOperationsList() {
        return java.util.Collections.unmodifiableList(result.operations_);
      }
      public int getOperationsCount() {
        return result.getOperationsCount();
      }
      public bnet.protocol.storage.Storage.Operation getOperations(int index) {
        return result.getOperations(index);
      }
      public Builder setOperations(int index, bnet.protocol.storage.Storage.Operation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.operations_.set(index, value);
        return this;
      }
      public Builder setOperations(int index, bnet.protocol.storage.Storage.Operation.Builder builderForValue) {
        result.operations_.set(index, builderForValue.build());
        return this;
      }
      public Builder addOperations(bnet.protocol.storage.Storage.Operation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.operations_.isEmpty()) {
          result.operations_ = new java.util.ArrayList<bnet.protocol.storage.Storage.Operation>();
        }
        result.operations_.add(value);
        return this;
      }
      public Builder addOperations(bnet.protocol.storage.Storage.Operation.Builder builderForValue) {
        if (result.operations_.isEmpty()) {
          result.operations_ = new java.util.ArrayList<bnet.protocol.storage.Storage.Operation>();
        }
        result.operations_.add(builderForValue.build());
        return this;
      }
      public Builder addAllOperations(
          java.lang.Iterable<? extends bnet.protocol.storage.Storage.Operation> values) {
        if (result.operations_.isEmpty()) {
          result.operations_ = new java.util.ArrayList<bnet.protocol.storage.Storage.Operation>();
        }
        super.addAll(values, result.operations_);
        return this;
      }
      public Builder clearOperations() {
        result.operations_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional uint32 timeout = 12;
      public boolean hasTimeout() {
        return result.hasTimeout();
      }
      public int getTimeout() {
        return result.getTimeout();
      }
      public Builder setTimeout(int value) {
        result.hasTimeout = true;
        result.timeout_ = value;
        return this;
      }
      public Builder clearTimeout() {
        result.hasTimeout = false;
        result.timeout_ = 0;
        return this;
      }
      
      // optional .bnet.protocol.EntityId agent_id = 9;
      public boolean hasAgentId() {
        return result.hasAgentId();
      }
      public bnet.protocol.Entity.EntityId getAgentId() {
        return result.getAgentId();
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasAgentId = true;
        result.agentId_ = builderForValue.build();
        return this;
      }
      public Builder mergeAgentId(bnet.protocol.Entity.EntityId value) {
        if (result.hasAgentId() &&
            result.agentId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.agentId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.agentId_).mergeFrom(value).buildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder clearAgentId() {
        result.hasAgentId = false;
        result.agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // optional string query_name = 10;
      public boolean hasQueryName() {
        return result.hasQueryName();
      }
      public java.lang.String getQueryName() {
        return result.getQueryName();
      }
      public Builder setQueryName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasQueryName = true;
        result.queryName_ = value;
        return this;
      }
      public Builder clearQueryName() {
        result.hasQueryName = false;
        result.queryName_ = getDefaultInstance().getQueryName();
        return this;
      }
      
      // optional string process_name = 11;
      public boolean hasProcessName() {
        return result.hasProcessName();
      }
      public java.lang.String getProcessName() {
        return result.getProcessName();
      }
      public Builder setProcessName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasProcessName = true;
        result.processName_ = value;
        return this;
      }
      public Builder clearProcessName() {
        result.hasProcessName = false;
        result.processName_ = getDefaultInstance().getProcessName();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.storage.ExecuteRequest)
    }
    
    static {
      defaultInstance = new ExecuteRequest(true);
      bnet.protocol.storage.Storage.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.storage.ExecuteRequest)
  }
  
  public static final class ExecuteResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use ExecuteResponse.newBuilder() to construct.
    private ExecuteResponse() {
      initFields();
    }
    private ExecuteResponse(boolean noInit) {}
    
    private static final ExecuteResponse defaultInstance;
    public static ExecuteResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public ExecuteResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.storage.Storage.internal_static_bnet_protocol_storage_ExecuteResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.storage.Storage.internal_static_bnet_protocol_storage_ExecuteResponse_fieldAccessorTable;
    }
    
    // optional uint32 error_code = 1;
    public static final int ERROR_CODE_FIELD_NUMBER = 1;
    private boolean hasErrorCode;
    private int errorCode_ = 0;
    public boolean hasErrorCode() { return hasErrorCode; }
    public int getErrorCode() { return errorCode_; }
    
    // repeated .bnet.protocol.storage.OperationResult results = 2;
    public static final int RESULTS_FIELD_NUMBER = 2;
    private java.util.List<bnet.protocol.storage.Storage.OperationResult> results_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.storage.Storage.OperationResult> getResultsList() {
      return results_;
    }
    public int getResultsCount() { return results_.size(); }
    public bnet.protocol.storage.Storage.OperationResult getResults(int index) {
      return results_.get(index);
    }
    
    // optional string error_message = 3;
    public static final int ERROR_MESSAGE_FIELD_NUMBER = 3;
    private boolean hasErrorMessage;
    private java.lang.String errorMessage_ = "";
    public boolean hasErrorMessage() { return hasErrorMessage; }
    public java.lang.String getErrorMessage() { return errorMessage_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (bnet.protocol.storage.Storage.OperationResult element : getResultsList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasErrorCode()) {
        output.writeUInt32(1, getErrorCode());
      }
      for (bnet.protocol.storage.Storage.OperationResult element : getResultsList()) {
        output.writeMessage(2, element);
      }
      if (hasErrorMessage()) {
        output.writeString(3, getErrorMessage());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasErrorCode()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getErrorCode());
      }
      for (bnet.protocol.storage.Storage.OperationResult element : getResultsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      if (hasErrorMessage()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getErrorMessage());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.storage.Storage.ExecuteResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.storage.Storage.ExecuteResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.ExecuteResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.storage.Storage.ExecuteResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.ExecuteResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.storage.Storage.ExecuteResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.storage.Storage.ExecuteResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.storage.Storage.ExecuteResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.storage.Storage.ExecuteResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.storage.Storage.ExecuteResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.storage.Storage.ExecuteResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.storage.Storage.ExecuteResponse result;
      
      // Construct using bnet.protocol.storage.Storage.ExecuteResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.storage.Storage.ExecuteResponse();
        return builder;
      }
      
      protected bnet.protocol.storage.Storage.ExecuteResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.storage.Storage.ExecuteResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.storage.Storage.ExecuteResponse.getDescriptor();
      }
      
      public bnet.protocol.storage.Storage.ExecuteResponse getDefaultInstanceForType() {
        return bnet.protocol.storage.Storage.ExecuteResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.storage.Storage.ExecuteResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.storage.Storage.ExecuteResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.storage.Storage.ExecuteResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.results_ != java.util.Collections.EMPTY_LIST) {
          result.results_ =
            java.util.Collections.unmodifiableList(result.results_);
        }
        bnet.protocol.storage.Storage.ExecuteResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.storage.Storage.ExecuteResponse) {
          return mergeFrom((bnet.protocol.storage.Storage.ExecuteResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.storage.Storage.ExecuteResponse other) {
        if (other == bnet.protocol.storage.Storage.ExecuteResponse.getDefaultInstance()) return this;
        if (other.hasErrorCode()) {
          setErrorCode(other.getErrorCode());
        }
        if (!other.results_.isEmpty()) {
          if (result.results_.isEmpty()) {
            result.results_ = new java.util.ArrayList<bnet.protocol.storage.Storage.OperationResult>();
          }
          result.results_.addAll(other.results_);
        }
        if (other.hasErrorMessage()) {
          setErrorMessage(other.getErrorMessage());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setErrorCode(input.readUInt32());
              break;
            }
            case 18: {
              bnet.protocol.storage.Storage.OperationResult.Builder subBuilder = bnet.protocol.storage.Storage.OperationResult.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addResults(subBuilder.buildPartial());
              break;
            }
            case 26: {
              setErrorMessage(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 error_code = 1;
      public boolean hasErrorCode() {
        return result.hasErrorCode();
      }
      public int getErrorCode() {
        return result.getErrorCode();
      }
      public Builder setErrorCode(int value) {
        result.hasErrorCode = true;
        result.errorCode_ = value;
        return this;
      }
      public Builder clearErrorCode() {
        result.hasErrorCode = false;
        result.errorCode_ = 0;
        return this;
      }
      
      // repeated .bnet.protocol.storage.OperationResult results = 2;
      public java.util.List<bnet.protocol.storage.Storage.OperationResult> getResultsList() {
        return java.util.Collections.unmodifiableList(result.results_);
      }
      public int getResultsCount() {
        return result.getResultsCount();
      }
      public bnet.protocol.storage.Storage.OperationResult getResults(int index) {
        return result.getResults(index);
      }
      public Builder setResults(int index, bnet.protocol.storage.Storage.OperationResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.results_.set(index, value);
        return this;
      }
      public Builder setResults(int index, bnet.protocol.storage.Storage.OperationResult.Builder builderForValue) {
        result.results_.set(index, builderForValue.build());
        return this;
      }
      public Builder addResults(bnet.protocol.storage.Storage.OperationResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.results_.isEmpty()) {
          result.results_ = new java.util.ArrayList<bnet.protocol.storage.Storage.OperationResult>();
        }
        result.results_.add(value);
        return this;
      }
      public Builder addResults(bnet.protocol.storage.Storage.OperationResult.Builder builderForValue) {
        if (result.results_.isEmpty()) {
          result.results_ = new java.util.ArrayList<bnet.protocol.storage.Storage.OperationResult>();
        }
        result.results_.add(builderForValue.build());
        return this;
      }
      public Builder addAllResults(
          java.lang.Iterable<? extends bnet.protocol.storage.Storage.OperationResult> values) {
        if (result.results_.isEmpty()) {
          result.results_ = new java.util.ArrayList<bnet.protocol.storage.Storage.OperationResult>();
        }
        super.addAll(values, result.results_);
        return this;
      }
      public Builder clearResults() {
        result.results_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional string error_message = 3;
      public boolean hasErrorMessage() {
        return result.hasErrorMessage();
      }
      public java.lang.String getErrorMessage() {
        return result.getErrorMessage();
      }
      public Builder setErrorMessage(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasErrorMessage = true;
        result.errorMessage_ = value;
        return this;
      }
      public Builder clearErrorMessage() {
        result.hasErrorMessage = false;
        result.errorMessage_ = getDefaultInstance().getErrorMessage();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.storage.ExecuteResponse)
    }
    
    static {
      defaultInstance = new ExecuteResponse(true);
      bnet.protocol.storage.Storage.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.storage.ExecuteResponse)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_storage_TableId_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_storage_TableId_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_storage_ColumnId_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_storage_ColumnId_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_storage_RowId_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_storage_RowId_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_storage_Privilege_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_storage_Privilege_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_storage_ScanOperation_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_storage_ScanOperation_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_storage_Command_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_storage_Command_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_storage_Operation_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_storage_Operation_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_storage_Cell_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_storage_Cell_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_storage_OperationResult_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_storage_OperationResult_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_storage_OpenTableRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_storage_OpenTableRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_storage_OpenTableResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_storage_OpenTableResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_storage_OpenColumnRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_storage_OpenColumnRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_storage_OpenColumnResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_storage_OpenColumnResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_storage_ExecuteRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_storage_ExecuteRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_storage_ExecuteResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_storage_ExecuteResponse_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\035service/storage/storage.proto\022\025bnet.pr" +
      "otocol.storage\032\035lib/protocol/descriptor." +
      "proto\032\031lib/protocol/entity.proto\032\021lib/rp" +
      "c/rpc.proto\"\027\n\007TableId\022\014\n\004hash\030\001 \002(\014\"\030\n\010" +
      "ColumnId\022\014\n\004hash\030\001 \002(\014\"\025\n\005RowId\022\014\n\004hash\030" +
      "\001 \002(\014\"m\n\tPrivilege\022\014\n\004bits\030\001 \001(\006\022\017\n\007prog" +
      "ram\030\002 \001(\007\"A\n\nPermission\022\t\n\005OWNER\020\001\022\n\n\006FR" +
      "IEND\020\002\022\t\n\005OTHER\020\004\022\010\n\004GAME\020\010\022\007\n\003ALL\020\017\"\373\001\n" +
      "\rScanOperation\0223\n\002op\030\001 \002(\0162\'.bnet.protoc" +
      "ol.storage.ScanOperation.Op\022\"\n\005field\030\002 \002",
      "(\0132\023.bnet.protocol.Path\"\220\001\n\002Op\022\014\n\010IS_CLE" +
      "AR\020\001\022\r\n\tNOT_CLEAR\020\002\022\r\n\tIS_EQUALS\020\003\022\016\n\nNO" +
      "T_EQUALS\020\004\022\023\n\017IS_GREATER_THAN\020\005\022\024\n\020NOT_G" +
      "REATER_THAN\020\006\022\020\n\014IS_LESS_THAN\020\007\022\021\n\rNOT_L" +
      "ESS_THAN\020\010\"\205\006\n\007Command\022-\n\002op\030\001 \002(\0162!.bne" +
      "t.protocol.storage.Command.Op\022\014\n\004data\030\002 " +
      "\001(\014\022#\n\006fields\030\003 \003(\0132\023.bnet.protocol.Path" +
      "\022\023\n\013min_version\030\004 \001(\006\022\023\n\013max_version\030\005 \001" +
      "(\006\0222\n\004scan\030\006 \001(\0132$.bnet.protocol.storage" +
      ".ScanOperation\022\r\n\005limit\030\007 \001(\r\0226\n\tconditi",
      "on\030\010 \001(\0162#.bnet.protocol.storage.Command" +
      ".Cond\022\017\n\007message\030\013 \001(\t\"\251\002\n\002Op\022\016\n\nROW_DEL" +
      "ETE\020\001\022\r\n\tROW_FETCH\020\002\022\016\n\nCOL_DELETE\020\003\022\r\n\t" +
      "COL_FETCH\020\004\022\r\n\tCOL_WRITE\020\005\022\r\n\tCOL_MERGE\020" +
      "\006\022\r\n\tFLD_CLEAR\020\007\022\r\n\tFLD_FETCH\020\010\022\r\n\tFLD_W" +
      "RITE\020\t\022\r\n\tFLD_MERGE\020\n\022\014\n\010FLD_INCR\020\013\022\014\n\010F" +
      "LD_TEST\020\014\022\014\n\010FLD_SCAN\020\r\022\014\n\010ROW_TEST\020\016\022\014\n" +
      "\010COL_TEST\020\017\022\014\n\010FLD_SMAX\020\020\022\014\n\010COL_COND\020\021\022" +
      "\014\n\010FLD_COND\020\022\022\014\n\010COND_POP\020\023\022\r\n\tLOG_DEBUG" +
      "\020\024\"\265\001\n\004Cond\022\017\n\013COND_ALWAYS\020\000\022\023\n\017COND_NOT",
      "_EXISTS\020\001\022\022\n\016COND_NOT_EQUAL\020\002\022\022\n\016COND_LE" +
      "SS_THAN\020\003\022\024\n\020COND_NOT_GREATER\020\004\022\017\n\013COND_" +
      "EQUALS\020\005\022\021\n\rCOND_NOT_LESS\020\006\022\025\n\021COND_GREA" +
      "TER_THAN\020\007\022\016\n\nCOND_NEVER\020\010\"\274\002\n\tOperation" +
      "\0220\n\010table_id\030\001 \002(\0132\036.bnet.protocol.stora" +
      "ge.TableId\0222\n\tcolumn_id\030\002 \001(\0132\037.bnet.pro" +
      "tocol.storage.ColumnId\022,\n\006row_id\030\003 \001(\0132\034" +
      ".bnet.protocol.storage.RowId\022\017\n\007row_key\030" +
      "\004 \001(\014\022\017\n\007version\030\005 \001(\006\022,\n\004rops\030\006 \003(\0132\036.b" +
      "net.protocol.storage.Command\022\026\n\016mutate_v",
      "ersion\030\007 \001(\006\0223\n\tprivilege\030\010 \001(\0132 .bnet.p" +
      "rotocol.storage.Privilege\"\230\001\n\004Cell\0222\n\tco" +
      "lumn_id\030\001 \002(\0132\037.bnet.protocol.storage.Co" +
      "lumnId\022,\n\006row_id\030\002 \002(\0132\034.bnet.protocol.s" +
      "torage.RowId\022\017\n\007row_key\030\003 \001(\014\022\017\n\007version" +
      "\030\004 \001(\006\022\014\n\004data\030\005 \001(\014\"\202\001\n\017OperationResult" +
      "\022\022\n\nerror_code\030\001 \001(\r\0220\n\010table_id\030\002 \002(\0132\036" +
      ".bnet.protocol.storage.TableId\022)\n\004data\030\003" +
      " \003(\0132\033.bnet.protocol.storage.Cell\"\312\001\n\020Op" +
      "enTableRequest\022\016\n\006schema\030\001 \001(\t\0223\n\tprivil",
      "ege\030\002 \001(\0132 .bnet.protocol.storage.Privil" +
      "ege\0220\n\010table_id\030\003 \002(\0132\036.bnet.protocol.st" +
      "orage.TableId\022)\n\010agent_id\030\004 \001(\0132\027.bnet.p" +
      "rotocol.EntityId\022\024\n\014process_name\030\005 \001(\t\"\023" +
      "\n\021OpenTableResponse\"\223\002\n\021OpenColumnReques" +
      "t\022\016\n\006schema\030\001 \001(\t\0223\n\tprivilege\030\002 \001(\0132 .b" +
      "net.protocol.storage.Privilege\0220\n\010table_" +
      "id\030\004 \002(\0132\036.bnet.protocol.storage.TableId" +
      "\0222\n\tcolumn_id\030\005 \002(\0132\037.bnet.protocol.stor" +
      "age.ColumnId\022\022\n\nproto_type\030\006 \001(\t\022)\n\010agen",
      "t_id\030\007 \001(\0132\027.bnet.protocol.EntityId\022\024\n\014p" +
      "rocess_name\030\010 \001(\t\".\n\022OpenColumnResponse\022" +
      "\030\n\020server_field_ops\030\002 \001(\010\"\315\002\n\016ExecuteReq" +
      "uest\022\016\n\006schema\030\001 \001(\t\0223\n\tprivilege\030\002 \001(\0132" +
      " .bnet.protocol.storage.Privilege\022\021\n\trea" +
      "d_only\030\003 \001(\010\022\025\n\rwants_row_key\030\004 \001(\010\022\031\n\021w" +
      "ants_column_name\030\005 \001(\010\022\025\n\rmax_data_size\030" +
      "\006 \001(\r\0224\n\noperations\030\007 \003(\0132 .bnet.protoco" +
      "l.storage.Operation\022\017\n\007timeout\030\014 \001(\r\022)\n\010" +
      "agent_id\030\t \001(\0132\027.bnet.protocol.EntityId\022",
      "\022\n\nquery_name\030\n \001(\t\022\024\n\014process_name\030\013 \001(" +
      "\t\"u\n\017ExecuteResponse\022\022\n\nerror_code\030\001 \001(\r" +
      "\0227\n\007results\030\002 \003(\0132&.bnet.protocol.storag" +
      "e.OperationResult\022\025\n\rerror_message\030\003 \001(\t"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_bnet_protocol_storage_TableId_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_bnet_protocol_storage_TableId_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_storage_TableId_descriptor,
              new java.lang.String[] { "Hash", },
              bnet.protocol.storage.Storage.TableId.class,
              bnet.protocol.storage.Storage.TableId.Builder.class);
          internal_static_bnet_protocol_storage_ColumnId_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_bnet_protocol_storage_ColumnId_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_storage_ColumnId_descriptor,
              new java.lang.String[] { "Hash", },
              bnet.protocol.storage.Storage.ColumnId.class,
              bnet.protocol.storage.Storage.ColumnId.Builder.class);
          internal_static_bnet_protocol_storage_RowId_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_bnet_protocol_storage_RowId_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_storage_RowId_descriptor,
              new java.lang.String[] { "Hash", },
              bnet.protocol.storage.Storage.RowId.class,
              bnet.protocol.storage.Storage.RowId.Builder.class);
          internal_static_bnet_protocol_storage_Privilege_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_bnet_protocol_storage_Privilege_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_storage_Privilege_descriptor,
              new java.lang.String[] { "Bits", "Program", },
              bnet.protocol.storage.Storage.Privilege.class,
              bnet.protocol.storage.Storage.Privilege.Builder.class);
          internal_static_bnet_protocol_storage_ScanOperation_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_bnet_protocol_storage_ScanOperation_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_storage_ScanOperation_descriptor,
              new java.lang.String[] { "Op", "Field", },
              bnet.protocol.storage.Storage.ScanOperation.class,
              bnet.protocol.storage.Storage.ScanOperation.Builder.class);
          internal_static_bnet_protocol_storage_Command_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_bnet_protocol_storage_Command_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_storage_Command_descriptor,
              new java.lang.String[] { "Op", "Data", "Fields", "MinVersion", "MaxVersion", "Scan", "Limit", "Condition", "Message", },
              bnet.protocol.storage.Storage.Command.class,
              bnet.protocol.storage.Storage.Command.Builder.class);
          internal_static_bnet_protocol_storage_Operation_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_bnet_protocol_storage_Operation_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_storage_Operation_descriptor,
              new java.lang.String[] { "TableId", "ColumnId", "RowId", "RowKey", "Version", "Rops", "MutateVersion", "Privilege", },
              bnet.protocol.storage.Storage.Operation.class,
              bnet.protocol.storage.Storage.Operation.Builder.class);
          internal_static_bnet_protocol_storage_Cell_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_bnet_protocol_storage_Cell_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_storage_Cell_descriptor,
              new java.lang.String[] { "ColumnId", "RowId", "RowKey", "Version", "Data", },
              bnet.protocol.storage.Storage.Cell.class,
              bnet.protocol.storage.Storage.Cell.Builder.class);
          internal_static_bnet_protocol_storage_OperationResult_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_bnet_protocol_storage_OperationResult_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_storage_OperationResult_descriptor,
              new java.lang.String[] { "ErrorCode", "TableId", "Data", },
              bnet.protocol.storage.Storage.OperationResult.class,
              bnet.protocol.storage.Storage.OperationResult.Builder.class);
          internal_static_bnet_protocol_storage_OpenTableRequest_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_bnet_protocol_storage_OpenTableRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_storage_OpenTableRequest_descriptor,
              new java.lang.String[] { "Schema", "Privilege", "TableId", "AgentId", "ProcessName", },
              bnet.protocol.storage.Storage.OpenTableRequest.class,
              bnet.protocol.storage.Storage.OpenTableRequest.Builder.class);
          internal_static_bnet_protocol_storage_OpenTableResponse_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_bnet_protocol_storage_OpenTableResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_storage_OpenTableResponse_descriptor,
              new java.lang.String[] { },
              bnet.protocol.storage.Storage.OpenTableResponse.class,
              bnet.protocol.storage.Storage.OpenTableResponse.Builder.class);
          internal_static_bnet_protocol_storage_OpenColumnRequest_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_bnet_protocol_storage_OpenColumnRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_storage_OpenColumnRequest_descriptor,
              new java.lang.String[] { "Schema", "Privilege", "TableId", "ColumnId", "ProtoType", "AgentId", "ProcessName", },
              bnet.protocol.storage.Storage.OpenColumnRequest.class,
              bnet.protocol.storage.Storage.OpenColumnRequest.Builder.class);
          internal_static_bnet_protocol_storage_OpenColumnResponse_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_bnet_protocol_storage_OpenColumnResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_storage_OpenColumnResponse_descriptor,
              new java.lang.String[] { "ServerFieldOps", },
              bnet.protocol.storage.Storage.OpenColumnResponse.class,
              bnet.protocol.storage.Storage.OpenColumnResponse.Builder.class);
          internal_static_bnet_protocol_storage_ExecuteRequest_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_bnet_protocol_storage_ExecuteRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_storage_ExecuteRequest_descriptor,
              new java.lang.String[] { "Schema", "Privilege", "ReadOnly", "WantsRowKey", "WantsColumnName", "MaxDataSize", "Operations", "Timeout", "AgentId", "QueryName", "ProcessName", },
              bnet.protocol.storage.Storage.ExecuteRequest.class,
              bnet.protocol.storage.Storage.ExecuteRequest.Builder.class);
          internal_static_bnet_protocol_storage_ExecuteResponse_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_bnet_protocol_storage_ExecuteResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_storage_ExecuteResponse_descriptor,
              new java.lang.String[] { "ErrorCode", "Results", "ErrorMessage", },
              bnet.protocol.storage.Storage.ExecuteResponse.class,
              bnet.protocol.storage.Storage.ExecuteResponse.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          bnet.protocol.Descriptor.getDescriptor(),
          bnet.protocol.Entity.getDescriptor(),
          bnet.protocol.Rpc.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
