// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lib/protocol/exchange.proto

package bnet.protocol.exchange;

public final class Exchange {
  private Exchange() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class PartitionId extends
      com.google.protobuf.GeneratedMessage {
    // Use PartitionId.newBuilder() to construct.
    private PartitionId() {
      initFields();
    }
    private PartitionId(boolean noInit) {}
    
    private static final PartitionId defaultInstance;
    public static PartitionId getDefaultInstance() {
      return defaultInstance;
    }
    
    public PartitionId getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.exchange.Exchange.internal_static_bnet_protocol_exchange_PartitionId_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.exchange.Exchange.internal_static_bnet_protocol_exchange_PartitionId_fieldAccessorTable;
    }
    
    // required fixed64 high = 1;
    public static final int HIGH_FIELD_NUMBER = 1;
    private boolean hasHigh;
    private long high_ = 0L;
    public boolean hasHigh() { return hasHigh; }
    public long getHigh() { return high_; }
    
    // required fixed64 low = 2;
    public static final int LOW_FIELD_NUMBER = 2;
    private boolean hasLow;
    private long low_ = 0L;
    public boolean hasLow() { return hasLow; }
    public long getLow() { return low_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasHigh) return false;
      if (!hasLow) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasHigh()) {
        output.writeFixed64(1, getHigh());
      }
      if (hasLow()) {
        output.writeFixed64(2, getLow());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasHigh()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, getHigh());
      }
      if (hasLow()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, getLow());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.exchange.Exchange.PartitionId parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.exchange.Exchange.PartitionId parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.exchange.Exchange.PartitionId parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.exchange.Exchange.PartitionId parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.exchange.Exchange.PartitionId parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.exchange.Exchange.PartitionId parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.exchange.Exchange.PartitionId parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.exchange.Exchange.PartitionId parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.exchange.Exchange.PartitionId parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.exchange.Exchange.PartitionId parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.exchange.Exchange.PartitionId prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.exchange.Exchange.PartitionId result;
      
      // Construct using bnet.protocol.exchange.Exchange.PartitionId.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.exchange.Exchange.PartitionId();
        return builder;
      }
      
      protected bnet.protocol.exchange.Exchange.PartitionId internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.exchange.Exchange.PartitionId();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.exchange.Exchange.PartitionId.getDescriptor();
      }
      
      public bnet.protocol.exchange.Exchange.PartitionId getDefaultInstanceForType() {
        return bnet.protocol.exchange.Exchange.PartitionId.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.exchange.Exchange.PartitionId build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.exchange.Exchange.PartitionId buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.exchange.Exchange.PartitionId buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.exchange.Exchange.PartitionId returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.exchange.Exchange.PartitionId) {
          return mergeFrom((bnet.protocol.exchange.Exchange.PartitionId)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.exchange.Exchange.PartitionId other) {
        if (other == bnet.protocol.exchange.Exchange.PartitionId.getDefaultInstance()) return this;
        if (other.hasHigh()) {
          setHigh(other.getHigh());
        }
        if (other.hasLow()) {
          setLow(other.getLow());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              setHigh(input.readFixed64());
              break;
            }
            case 17: {
              setLow(input.readFixed64());
              break;
            }
          }
        }
      }
      
      
      // required fixed64 high = 1;
      public boolean hasHigh() {
        return result.hasHigh();
      }
      public long getHigh() {
        return result.getHigh();
      }
      public Builder setHigh(long value) {
        result.hasHigh = true;
        result.high_ = value;
        return this;
      }
      public Builder clearHigh() {
        result.hasHigh = false;
        result.high_ = 0L;
        return this;
      }
      
      // required fixed64 low = 2;
      public boolean hasLow() {
        return result.hasLow();
      }
      public long getLow() {
        return result.getLow();
      }
      public Builder setLow(long value) {
        result.hasLow = true;
        result.low_ = value;
        return this;
      }
      public Builder clearLow() {
        result.hasLow = false;
        result.low_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.exchange.PartitionId)
    }
    
    static {
      defaultInstance = new PartitionId(true);
      bnet.protocol.exchange.Exchange.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.exchange.PartitionId)
  }
  
  public static final class BlobFrom extends
      com.google.protobuf.GeneratedMessage {
    // Use BlobFrom.newBuilder() to construct.
    private BlobFrom() {
      initFields();
    }
    private BlobFrom(boolean noInit) {}
    
    private static final BlobFrom defaultInstance;
    public static BlobFrom getDefaultInstance() {
      return defaultInstance;
    }
    
    public BlobFrom getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.exchange.Exchange.internal_static_bnet_protocol_exchange_BlobFrom_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.exchange.Exchange.internal_static_bnet_protocol_exchange_BlobFrom_fieldAccessorTable;
    }
    
    // required fixed32 source = 1;
    public static final int SOURCE_FIELD_NUMBER = 1;
    private boolean hasSource;
    private int source_ = 0;
    public boolean hasSource() { return hasSource; }
    public int getSource() { return source_; }
    
    // required bytes data = 2;
    public static final int DATA_FIELD_NUMBER = 2;
    private boolean hasData;
    private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasData() { return hasData; }
    public com.google.protobuf.ByteString getData() { return data_; }
    
    // optional bytes extra_data = 3;
    public static final int EXTRA_DATA_FIELD_NUMBER = 3;
    private boolean hasExtraData;
    private com.google.protobuf.ByteString extraData_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasExtraData() { return hasExtraData; }
    public com.google.protobuf.ByteString getExtraData() { return extraData_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasSource) return false;
      if (!hasData) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSource()) {
        output.writeFixed32(1, getSource());
      }
      if (hasData()) {
        output.writeBytes(2, getData());
      }
      if (hasExtraData()) {
        output.writeBytes(3, getExtraData());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSource()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, getSource());
      }
      if (hasData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getData());
      }
      if (hasExtraData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getExtraData());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.exchange.Exchange.BlobFrom parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.exchange.Exchange.BlobFrom parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.exchange.Exchange.BlobFrom parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.exchange.Exchange.BlobFrom parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.exchange.Exchange.BlobFrom parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.exchange.Exchange.BlobFrom parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.exchange.Exchange.BlobFrom parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.exchange.Exchange.BlobFrom parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.exchange.Exchange.BlobFrom parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.exchange.Exchange.BlobFrom parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.exchange.Exchange.BlobFrom prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.exchange.Exchange.BlobFrom result;
      
      // Construct using bnet.protocol.exchange.Exchange.BlobFrom.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.exchange.Exchange.BlobFrom();
        return builder;
      }
      
      protected bnet.protocol.exchange.Exchange.BlobFrom internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.exchange.Exchange.BlobFrom();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.exchange.Exchange.BlobFrom.getDescriptor();
      }
      
      public bnet.protocol.exchange.Exchange.BlobFrom getDefaultInstanceForType() {
        return bnet.protocol.exchange.Exchange.BlobFrom.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.exchange.Exchange.BlobFrom build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.exchange.Exchange.BlobFrom buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.exchange.Exchange.BlobFrom buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.exchange.Exchange.BlobFrom returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.exchange.Exchange.BlobFrom) {
          return mergeFrom((bnet.protocol.exchange.Exchange.BlobFrom)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.exchange.Exchange.BlobFrom other) {
        if (other == bnet.protocol.exchange.Exchange.BlobFrom.getDefaultInstance()) return this;
        if (other.hasSource()) {
          setSource(other.getSource());
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        if (other.hasExtraData()) {
          setExtraData(other.getExtraData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 13: {
              setSource(input.readFixed32());
              break;
            }
            case 18: {
              setData(input.readBytes());
              break;
            }
            case 26: {
              setExtraData(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // required fixed32 source = 1;
      public boolean hasSource() {
        return result.hasSource();
      }
      public int getSource() {
        return result.getSource();
      }
      public Builder setSource(int value) {
        result.hasSource = true;
        result.source_ = value;
        return this;
      }
      public Builder clearSource() {
        result.hasSource = false;
        result.source_ = 0;
        return this;
      }
      
      // required bytes data = 2;
      public boolean hasData() {
        return result.hasData();
      }
      public com.google.protobuf.ByteString getData() {
        return result.getData();
      }
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasData = true;
        result.data_ = value;
        return this;
      }
      public Builder clearData() {
        result.hasData = false;
        result.data_ = getDefaultInstance().getData();
        return this;
      }
      
      // optional bytes extra_data = 3;
      public boolean hasExtraData() {
        return result.hasExtraData();
      }
      public com.google.protobuf.ByteString getExtraData() {
        return result.getExtraData();
      }
      public Builder setExtraData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasExtraData = true;
        result.extraData_ = value;
        return this;
      }
      public Builder clearExtraData() {
        result.hasExtraData = false;
        result.extraData_ = getDefaultInstance().getExtraData();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.exchange.BlobFrom)
    }
    
    static {
      defaultInstance = new BlobFrom(true);
      bnet.protocol.exchange.Exchange.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.exchange.BlobFrom)
  }
  
  public static final class BlobOfType extends
      com.google.protobuf.GeneratedMessage {
    // Use BlobOfType.newBuilder() to construct.
    private BlobOfType() {
      initFields();
    }
    private BlobOfType(boolean noInit) {}
    
    private static final BlobOfType defaultInstance;
    public static BlobOfType getDefaultInstance() {
      return defaultInstance;
    }
    
    public BlobOfType getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.exchange.Exchange.internal_static_bnet_protocol_exchange_BlobOfType_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.exchange.Exchange.internal_static_bnet_protocol_exchange_BlobOfType_fieldAccessorTable;
    }
    
    // required string type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private boolean hasType;
    private java.lang.String type_ = "";
    public boolean hasType() { return hasType; }
    public java.lang.String getType() { return type_; }
    
    // optional bytes data = 2;
    public static final int DATA_FIELD_NUMBER = 2;
    private boolean hasData;
    private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasData() { return hasData; }
    public com.google.protobuf.ByteString getData() { return data_; }
    
    // optional bytes extra_data = 3;
    public static final int EXTRA_DATA_FIELD_NUMBER = 3;
    private boolean hasExtraData;
    private com.google.protobuf.ByteString extraData_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasExtraData() { return hasExtraData; }
    public com.google.protobuf.ByteString getExtraData() { return extraData_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasType) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasType()) {
        output.writeString(1, getType());
      }
      if (hasData()) {
        output.writeBytes(2, getData());
      }
      if (hasExtraData()) {
        output.writeBytes(3, getExtraData());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getType());
      }
      if (hasData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getData());
      }
      if (hasExtraData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getExtraData());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.exchange.Exchange.BlobOfType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.exchange.Exchange.BlobOfType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.exchange.Exchange.BlobOfType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.exchange.Exchange.BlobOfType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.exchange.Exchange.BlobOfType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.exchange.Exchange.BlobOfType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.exchange.Exchange.BlobOfType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.exchange.Exchange.BlobOfType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.exchange.Exchange.BlobOfType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.exchange.Exchange.BlobOfType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.exchange.Exchange.BlobOfType prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.exchange.Exchange.BlobOfType result;
      
      // Construct using bnet.protocol.exchange.Exchange.BlobOfType.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.exchange.Exchange.BlobOfType();
        return builder;
      }
      
      protected bnet.protocol.exchange.Exchange.BlobOfType internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.exchange.Exchange.BlobOfType();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.exchange.Exchange.BlobOfType.getDescriptor();
      }
      
      public bnet.protocol.exchange.Exchange.BlobOfType getDefaultInstanceForType() {
        return bnet.protocol.exchange.Exchange.BlobOfType.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.exchange.Exchange.BlobOfType build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.exchange.Exchange.BlobOfType buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.exchange.Exchange.BlobOfType buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.exchange.Exchange.BlobOfType returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.exchange.Exchange.BlobOfType) {
          return mergeFrom((bnet.protocol.exchange.Exchange.BlobOfType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.exchange.Exchange.BlobOfType other) {
        if (other == bnet.protocol.exchange.Exchange.BlobOfType.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        if (other.hasExtraData()) {
          setExtraData(other.getExtraData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setType(input.readString());
              break;
            }
            case 18: {
              setData(input.readBytes());
              break;
            }
            case 26: {
              setExtraData(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // required string type = 1;
      public boolean hasType() {
        return result.hasType();
      }
      public java.lang.String getType() {
        return result.getType();
      }
      public Builder setType(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = getDefaultInstance().getType();
        return this;
      }
      
      // optional bytes data = 2;
      public boolean hasData() {
        return result.hasData();
      }
      public com.google.protobuf.ByteString getData() {
        return result.getData();
      }
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasData = true;
        result.data_ = value;
        return this;
      }
      public Builder clearData() {
        result.hasData = false;
        result.data_ = getDefaultInstance().getData();
        return this;
      }
      
      // optional bytes extra_data = 3;
      public boolean hasExtraData() {
        return result.hasExtraData();
      }
      public com.google.protobuf.ByteString getExtraData() {
        return result.getExtraData();
      }
      public Builder setExtraData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasExtraData = true;
        result.extraData_ = value;
        return this;
      }
      public Builder clearExtraData() {
        result.hasExtraData = false;
        result.extraData_ = getDefaultInstance().getExtraData();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.exchange.BlobOfType)
    }
    
    static {
      defaultInstance = new BlobOfType(true);
      bnet.protocol.exchange.Exchange.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.exchange.BlobOfType)
  }
  
  public static final class BlobFromOfType extends
      com.google.protobuf.GeneratedMessage {
    // Use BlobFromOfType.newBuilder() to construct.
    private BlobFromOfType() {
      initFields();
    }
    private BlobFromOfType(boolean noInit) {}
    
    private static final BlobFromOfType defaultInstance;
    public static BlobFromOfType getDefaultInstance() {
      return defaultInstance;
    }
    
    public BlobFromOfType getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.exchange.Exchange.internal_static_bnet_protocol_exchange_BlobFromOfType_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.exchange.Exchange.internal_static_bnet_protocol_exchange_BlobFromOfType_fieldAccessorTable;
    }
    
    // required fixed32 source = 1;
    public static final int SOURCE_FIELD_NUMBER = 1;
    private boolean hasSource;
    private int source_ = 0;
    public boolean hasSource() { return hasSource; }
    public int getSource() { return source_; }
    
    // required string type = 2;
    public static final int TYPE_FIELD_NUMBER = 2;
    private boolean hasType;
    private java.lang.String type_ = "";
    public boolean hasType() { return hasType; }
    public java.lang.String getType() { return type_; }
    
    // required bytes data = 3;
    public static final int DATA_FIELD_NUMBER = 3;
    private boolean hasData;
    private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasData() { return hasData; }
    public com.google.protobuf.ByteString getData() { return data_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasSource) return false;
      if (!hasType) return false;
      if (!hasData) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSource()) {
        output.writeFixed32(1, getSource());
      }
      if (hasType()) {
        output.writeString(2, getType());
      }
      if (hasData()) {
        output.writeBytes(3, getData());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSource()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, getSource());
      }
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getType());
      }
      if (hasData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getData());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.exchange.Exchange.BlobFromOfType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.exchange.Exchange.BlobFromOfType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.exchange.Exchange.BlobFromOfType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.exchange.Exchange.BlobFromOfType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.exchange.Exchange.BlobFromOfType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.exchange.Exchange.BlobFromOfType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.exchange.Exchange.BlobFromOfType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.exchange.Exchange.BlobFromOfType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.exchange.Exchange.BlobFromOfType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.exchange.Exchange.BlobFromOfType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.exchange.Exchange.BlobFromOfType prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.exchange.Exchange.BlobFromOfType result;
      
      // Construct using bnet.protocol.exchange.Exchange.BlobFromOfType.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.exchange.Exchange.BlobFromOfType();
        return builder;
      }
      
      protected bnet.protocol.exchange.Exchange.BlobFromOfType internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.exchange.Exchange.BlobFromOfType();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.exchange.Exchange.BlobFromOfType.getDescriptor();
      }
      
      public bnet.protocol.exchange.Exchange.BlobFromOfType getDefaultInstanceForType() {
        return bnet.protocol.exchange.Exchange.BlobFromOfType.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.exchange.Exchange.BlobFromOfType build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.exchange.Exchange.BlobFromOfType buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.exchange.Exchange.BlobFromOfType buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.exchange.Exchange.BlobFromOfType returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.exchange.Exchange.BlobFromOfType) {
          return mergeFrom((bnet.protocol.exchange.Exchange.BlobFromOfType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.exchange.Exchange.BlobFromOfType other) {
        if (other == bnet.protocol.exchange.Exchange.BlobFromOfType.getDefaultInstance()) return this;
        if (other.hasSource()) {
          setSource(other.getSource());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 13: {
              setSource(input.readFixed32());
              break;
            }
            case 18: {
              setType(input.readString());
              break;
            }
            case 26: {
              setData(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // required fixed32 source = 1;
      public boolean hasSource() {
        return result.hasSource();
      }
      public int getSource() {
        return result.getSource();
      }
      public Builder setSource(int value) {
        result.hasSource = true;
        result.source_ = value;
        return this;
      }
      public Builder clearSource() {
        result.hasSource = false;
        result.source_ = 0;
        return this;
      }
      
      // required string type = 2;
      public boolean hasType() {
        return result.hasType();
      }
      public java.lang.String getType() {
        return result.getType();
      }
      public Builder setType(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = getDefaultInstance().getType();
        return this;
      }
      
      // required bytes data = 3;
      public boolean hasData() {
        return result.hasData();
      }
      public com.google.protobuf.ByteString getData() {
        return result.getData();
      }
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasData = true;
        result.data_ = value;
        return this;
      }
      public Builder clearData() {
        result.hasData = false;
        result.data_ = getDefaultInstance().getData();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.exchange.BlobFromOfType)
    }
    
    static {
      defaultInstance = new BlobFromOfType(true);
      bnet.protocol.exchange.Exchange.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.exchange.BlobFromOfType)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_exchange_PartitionId_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_exchange_PartitionId_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_exchange_BlobFrom_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_exchange_BlobFrom_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_exchange_BlobOfType_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_exchange_BlobOfType_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_exchange_BlobFromOfType_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_exchange_BlobFromOfType_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\033lib/protocol/exchange.proto\022\026bnet.prot" +
      "ocol.exchange\"(\n\013PartitionId\022\014\n\004high\030\001 \002" +
      "(\006\022\013\n\003low\030\002 \002(\006\"<\n\010BlobFrom\022\016\n\006source\030\001 " +
      "\002(\007\022\014\n\004data\030\002 \002(\014\022\022\n\nextra_data\030\003 \001(\014\"<\n" +
      "\nBlobOfType\022\014\n\004type\030\001 \002(\t\022\014\n\004data\030\002 \001(\014\022" +
      "\022\n\nextra_data\030\003 \001(\014\"<\n\016BlobFromOfType\022\016\n" +
      "\006source\030\001 \002(\007\022\014\n\004type\030\002 \002(\t\022\014\n\004data\030\003 \002(" +
      "\014"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_bnet_protocol_exchange_PartitionId_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_bnet_protocol_exchange_PartitionId_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_exchange_PartitionId_descriptor,
              new java.lang.String[] { "High", "Low", },
              bnet.protocol.exchange.Exchange.PartitionId.class,
              bnet.protocol.exchange.Exchange.PartitionId.Builder.class);
          internal_static_bnet_protocol_exchange_BlobFrom_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_bnet_protocol_exchange_BlobFrom_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_exchange_BlobFrom_descriptor,
              new java.lang.String[] { "Source", "Data", "ExtraData", },
              bnet.protocol.exchange.Exchange.BlobFrom.class,
              bnet.protocol.exchange.Exchange.BlobFrom.Builder.class);
          internal_static_bnet_protocol_exchange_BlobOfType_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_bnet_protocol_exchange_BlobOfType_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_exchange_BlobOfType_descriptor,
              new java.lang.String[] { "Type", "Data", "ExtraData", },
              bnet.protocol.exchange.Exchange.BlobOfType.class,
              bnet.protocol.exchange.Exchange.BlobOfType.Builder.class);
          internal_static_bnet_protocol_exchange_BlobFromOfType_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_bnet_protocol_exchange_BlobFromOfType_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_exchange_BlobFromOfType_descriptor,
              new java.lang.String[] { "Source", "Type", "Data", },
              bnet.protocol.exchange.Exchange.BlobFromOfType.class,
              bnet.protocol.exchange.Exchange.BlobFromOfType.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
