// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service/channel/channel_types.proto

package bnet.protocol.channel;

public final class ChannelTypes {
  private ChannelTypes() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class Message extends
      com.google.protobuf.GeneratedMessage {
    // Use Message.newBuilder() to construct.
    private Message() {
      initFields();
    }
    private Message(boolean noInit) {}
    
    private static final Message defaultInstance;
    public static Message getDefaultInstance() {
      return defaultInstance;
    }
    
    public Message getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel.ChannelTypes.internal_static_bnet_protocol_channel_Message_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel.ChannelTypes.internal_static_bnet_protocol_channel_Message_fieldAccessorTable;
    }
    
    // repeated .bnet.protocol.attribute.Attribute attribute = 1;
    public static final int ATTRIBUTE_FIELD_NUMBER = 1;
    private java.util.List<bnet.protocol.attribute.AttributeProto.Attribute> attribute_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.attribute.AttributeProto.Attribute> getAttributeList() {
      return attribute_;
    }
    public int getAttributeCount() { return attribute_.size(); }
    public bnet.protocol.attribute.AttributeProto.Attribute getAttribute(int index) {
      return attribute_.get(index);
    }
    
    // optional uint32 role = 2;
    public static final int ROLE_FIELD_NUMBER = 2;
    private boolean hasRole;
    private int role_ = 0;
    public boolean hasRole() { return hasRole; }
    public int getRole() { return role_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (bnet.protocol.attribute.AttributeProto.Attribute element : getAttributeList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (bnet.protocol.attribute.AttributeProto.Attribute element : getAttributeList()) {
        output.writeMessage(1, element);
      }
      if (hasRole()) {
        output.writeUInt32(2, getRole());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (bnet.protocol.attribute.AttributeProto.Attribute element : getAttributeList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      if (hasRole()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getRole());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel.ChannelTypes.Message parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.Message parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.Message parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.Message parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.Message parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.Message parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.Message parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.ChannelTypes.Message parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.ChannelTypes.Message parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.Message parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel.ChannelTypes.Message prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel.ChannelTypes.Message result;
      
      // Construct using bnet.protocol.channel.ChannelTypes.Message.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel.ChannelTypes.Message();
        return builder;
      }
      
      protected bnet.protocol.channel.ChannelTypes.Message internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel.ChannelTypes.Message();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel.ChannelTypes.Message.getDescriptor();
      }
      
      public bnet.protocol.channel.ChannelTypes.Message getDefaultInstanceForType() {
        return bnet.protocol.channel.ChannelTypes.Message.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel.ChannelTypes.Message build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel.ChannelTypes.Message buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel.ChannelTypes.Message buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.attribute_ != java.util.Collections.EMPTY_LIST) {
          result.attribute_ =
            java.util.Collections.unmodifiableList(result.attribute_);
        }
        bnet.protocol.channel.ChannelTypes.Message returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel.ChannelTypes.Message) {
          return mergeFrom((bnet.protocol.channel.ChannelTypes.Message)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel.ChannelTypes.Message other) {
        if (other == bnet.protocol.channel.ChannelTypes.Message.getDefaultInstance()) return this;
        if (!other.attribute_.isEmpty()) {
          if (result.attribute_.isEmpty()) {
            result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.AttributeProto.Attribute>();
          }
          result.attribute_.addAll(other.attribute_);
        }
        if (other.hasRole()) {
          setRole(other.getRole());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.attribute.AttributeProto.Attribute.Builder subBuilder = bnet.protocol.attribute.AttributeProto.Attribute.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAttribute(subBuilder.buildPartial());
              break;
            }
            case 16: {
              setRole(input.readUInt32());
              break;
            }
          }
        }
      }
      
      
      // repeated .bnet.protocol.attribute.Attribute attribute = 1;
      public java.util.List<bnet.protocol.attribute.AttributeProto.Attribute> getAttributeList() {
        return java.util.Collections.unmodifiableList(result.attribute_);
      }
      public int getAttributeCount() {
        return result.getAttributeCount();
      }
      public bnet.protocol.attribute.AttributeProto.Attribute getAttribute(int index) {
        return result.getAttribute(index);
      }
      public Builder setAttribute(int index, bnet.protocol.attribute.AttributeProto.Attribute value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.attribute_.set(index, value);
        return this;
      }
      public Builder setAttribute(int index, bnet.protocol.attribute.AttributeProto.Attribute.Builder builderForValue) {
        result.attribute_.set(index, builderForValue.build());
        return this;
      }
      public Builder addAttribute(bnet.protocol.attribute.AttributeProto.Attribute value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.attribute_.isEmpty()) {
          result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.AttributeProto.Attribute>();
        }
        result.attribute_.add(value);
        return this;
      }
      public Builder addAttribute(bnet.protocol.attribute.AttributeProto.Attribute.Builder builderForValue) {
        if (result.attribute_.isEmpty()) {
          result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.AttributeProto.Attribute>();
        }
        result.attribute_.add(builderForValue.build());
        return this;
      }
      public Builder addAllAttribute(
          java.lang.Iterable<? extends bnet.protocol.attribute.AttributeProto.Attribute> values) {
        if (result.attribute_.isEmpty()) {
          result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.AttributeProto.Attribute>();
        }
        super.addAll(values, result.attribute_);
        return this;
      }
      public Builder clearAttribute() {
        result.attribute_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional uint32 role = 2;
      public boolean hasRole() {
        return result.hasRole();
      }
      public int getRole() {
        return result.getRole();
      }
      public Builder setRole(int value) {
        result.hasRole = true;
        result.role_ = value;
        return this;
      }
      public Builder clearRole() {
        result.hasRole = false;
        result.role_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel.Message)
    }
    
    static {
      defaultInstance = new Message(true);
      bnet.protocol.channel.ChannelTypes.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel.Message)
  }
  
  public static final class ChannelDescription extends
      com.google.protobuf.GeneratedMessage {
    // Use ChannelDescription.newBuilder() to construct.
    private ChannelDescription() {
      initFields();
    }
    private ChannelDescription(boolean noInit) {}
    
    private static final ChannelDescription defaultInstance;
    public static ChannelDescription getDefaultInstance() {
      return defaultInstance;
    }
    
    public ChannelDescription getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel.ChannelTypes.internal_static_bnet_protocol_channel_ChannelDescription_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel.ChannelTypes.internal_static_bnet_protocol_channel_ChannelDescription_fieldAccessorTable;
    }
    
    // required .bnet.protocol.EntityId channel_id = 1;
    public static final int CHANNEL_ID_FIELD_NUMBER = 1;
    private boolean hasChannelId;
    private bnet.protocol.Entity.EntityId channelId_;
    public boolean hasChannelId() { return hasChannelId; }
    public bnet.protocol.Entity.EntityId getChannelId() { return channelId_; }
    
    // optional uint32 current_members = 2;
    public static final int CURRENT_MEMBERS_FIELD_NUMBER = 2;
    private boolean hasCurrentMembers;
    private int currentMembers_ = 0;
    public boolean hasCurrentMembers() { return hasCurrentMembers; }
    public int getCurrentMembers() { return currentMembers_; }
    
    // optional .bnet.protocol.channel.ChannelState state = 3;
    public static final int STATE_FIELD_NUMBER = 3;
    private boolean hasState;
    private bnet.protocol.channel.ChannelTypes.ChannelState state_;
    public boolean hasState() { return hasState; }
    public bnet.protocol.channel.ChannelTypes.ChannelState getState() { return state_; }
    
    private void initFields() {
      channelId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
      state_ = bnet.protocol.channel.ChannelTypes.ChannelState.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasChannelId) return false;
      if (!getChannelId().isInitialized()) return false;
      if (hasState()) {
        if (!getState().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasChannelId()) {
        output.writeMessage(1, getChannelId());
      }
      if (hasCurrentMembers()) {
        output.writeUInt32(2, getCurrentMembers());
      }
      if (hasState()) {
        output.writeMessage(3, getState());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasChannelId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getChannelId());
      }
      if (hasCurrentMembers()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getCurrentMembers());
      }
      if (hasState()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getState());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel.ChannelTypes.ChannelDescription parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.ChannelDescription parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.ChannelDescription parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.ChannelDescription parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.ChannelDescription parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.ChannelDescription parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.ChannelDescription parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.ChannelTypes.ChannelDescription parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.ChannelTypes.ChannelDescription parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.ChannelDescription parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel.ChannelTypes.ChannelDescription prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel.ChannelTypes.ChannelDescription result;
      
      // Construct using bnet.protocol.channel.ChannelTypes.ChannelDescription.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel.ChannelTypes.ChannelDescription();
        return builder;
      }
      
      protected bnet.protocol.channel.ChannelTypes.ChannelDescription internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel.ChannelTypes.ChannelDescription();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel.ChannelTypes.ChannelDescription.getDescriptor();
      }
      
      public bnet.protocol.channel.ChannelTypes.ChannelDescription getDefaultInstanceForType() {
        return bnet.protocol.channel.ChannelTypes.ChannelDescription.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel.ChannelTypes.ChannelDescription build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel.ChannelTypes.ChannelDescription buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel.ChannelTypes.ChannelDescription buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.channel.ChannelTypes.ChannelDescription returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel.ChannelTypes.ChannelDescription) {
          return mergeFrom((bnet.protocol.channel.ChannelTypes.ChannelDescription)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel.ChannelTypes.ChannelDescription other) {
        if (other == bnet.protocol.channel.ChannelTypes.ChannelDescription.getDefaultInstance()) return this;
        if (other.hasChannelId()) {
          mergeChannelId(other.getChannelId());
        }
        if (other.hasCurrentMembers()) {
          setCurrentMembers(other.getCurrentMembers());
        }
        if (other.hasState()) {
          mergeState(other.getState());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasChannelId()) {
                subBuilder.mergeFrom(getChannelId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setChannelId(subBuilder.buildPartial());
              break;
            }
            case 16: {
              setCurrentMembers(input.readUInt32());
              break;
            }
            case 26: {
              bnet.protocol.channel.ChannelTypes.ChannelState.Builder subBuilder = bnet.protocol.channel.ChannelTypes.ChannelState.newBuilder();
              if (hasState()) {
                subBuilder.mergeFrom(getState());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setState(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .bnet.protocol.EntityId channel_id = 1;
      public boolean hasChannelId() {
        return result.hasChannelId();
      }
      public bnet.protocol.Entity.EntityId getChannelId() {
        return result.getChannelId();
      }
      public Builder setChannelId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder setChannelId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasChannelId = true;
        result.channelId_ = builderForValue.build();
        return this;
      }
      public Builder mergeChannelId(bnet.protocol.Entity.EntityId value) {
        if (result.hasChannelId() &&
            result.channelId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.channelId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.channelId_).mergeFrom(value).buildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder clearChannelId() {
        result.hasChannelId = false;
        result.channelId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // optional uint32 current_members = 2;
      public boolean hasCurrentMembers() {
        return result.hasCurrentMembers();
      }
      public int getCurrentMembers() {
        return result.getCurrentMembers();
      }
      public Builder setCurrentMembers(int value) {
        result.hasCurrentMembers = true;
        result.currentMembers_ = value;
        return this;
      }
      public Builder clearCurrentMembers() {
        result.hasCurrentMembers = false;
        result.currentMembers_ = 0;
        return this;
      }
      
      // optional .bnet.protocol.channel.ChannelState state = 3;
      public boolean hasState() {
        return result.hasState();
      }
      public bnet.protocol.channel.ChannelTypes.ChannelState getState() {
        return result.getState();
      }
      public Builder setState(bnet.protocol.channel.ChannelTypes.ChannelState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasState = true;
        result.state_ = value;
        return this;
      }
      public Builder setState(bnet.protocol.channel.ChannelTypes.ChannelState.Builder builderForValue) {
        result.hasState = true;
        result.state_ = builderForValue.build();
        return this;
      }
      public Builder mergeState(bnet.protocol.channel.ChannelTypes.ChannelState value) {
        if (result.hasState() &&
            result.state_ != bnet.protocol.channel.ChannelTypes.ChannelState.getDefaultInstance()) {
          result.state_ =
            bnet.protocol.channel.ChannelTypes.ChannelState.newBuilder(result.state_).mergeFrom(value).buildPartial();
        } else {
          result.state_ = value;
        }
        result.hasState = true;
        return this;
      }
      public Builder clearState() {
        result.hasState = false;
        result.state_ = bnet.protocol.channel.ChannelTypes.ChannelState.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel.ChannelDescription)
    }
    
    static {
      defaultInstance = new ChannelDescription(true);
      bnet.protocol.channel.ChannelTypes.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel.ChannelDescription)
  }
  
  public static final class ChannelInfo extends
      com.google.protobuf.GeneratedMessage {
    // Use ChannelInfo.newBuilder() to construct.
    private ChannelInfo() {
      initFields();
    }
    private ChannelInfo(boolean noInit) {}
    
    private static final ChannelInfo defaultInstance;
    public static ChannelInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public ChannelInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel.ChannelTypes.internal_static_bnet_protocol_channel_ChannelInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel.ChannelTypes.internal_static_bnet_protocol_channel_ChannelInfo_fieldAccessorTable;
    }
    
    // required .bnet.protocol.channel.ChannelDescription description = 1;
    public static final int DESCRIPTION_FIELD_NUMBER = 1;
    private boolean hasDescription;
    private bnet.protocol.channel.ChannelTypes.ChannelDescription description_;
    public boolean hasDescription() { return hasDescription; }
    public bnet.protocol.channel.ChannelTypes.ChannelDescription getDescription() { return description_; }
    
    // repeated .bnet.protocol.channel.Member member = 2;
    public static final int MEMBER_FIELD_NUMBER = 2;
    private java.util.List<bnet.protocol.channel.ChannelTypes.Member> member_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.channel.ChannelTypes.Member> getMemberList() {
      return member_;
    }
    public int getMemberCount() { return member_.size(); }
    public bnet.protocol.channel.ChannelTypes.Member getMember(int index) {
      return member_.get(index);
    }
    
    private void initFields() {
      description_ = bnet.protocol.channel.ChannelTypes.ChannelDescription.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasDescription) return false;
      if (!getDescription().isInitialized()) return false;
      for (bnet.protocol.channel.ChannelTypes.Member element : getMemberList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasDescription()) {
        output.writeMessage(1, getDescription());
      }
      for (bnet.protocol.channel.ChannelTypes.Member element : getMemberList()) {
        output.writeMessage(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasDescription()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getDescription());
      }
      for (bnet.protocol.channel.ChannelTypes.Member element : getMemberList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel.ChannelTypes.ChannelInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.ChannelInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.ChannelInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.ChannelInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.ChannelInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.ChannelInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.ChannelInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.ChannelTypes.ChannelInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.ChannelTypes.ChannelInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.ChannelInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel.ChannelTypes.ChannelInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel.ChannelTypes.ChannelInfo result;
      
      // Construct using bnet.protocol.channel.ChannelTypes.ChannelInfo.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel.ChannelTypes.ChannelInfo();
        return builder;
      }
      
      protected bnet.protocol.channel.ChannelTypes.ChannelInfo internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel.ChannelTypes.ChannelInfo();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel.ChannelTypes.ChannelInfo.getDescriptor();
      }
      
      public bnet.protocol.channel.ChannelTypes.ChannelInfo getDefaultInstanceForType() {
        return bnet.protocol.channel.ChannelTypes.ChannelInfo.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel.ChannelTypes.ChannelInfo build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel.ChannelTypes.ChannelInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel.ChannelTypes.ChannelInfo buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.member_ != java.util.Collections.EMPTY_LIST) {
          result.member_ =
            java.util.Collections.unmodifiableList(result.member_);
        }
        bnet.protocol.channel.ChannelTypes.ChannelInfo returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel.ChannelTypes.ChannelInfo) {
          return mergeFrom((bnet.protocol.channel.ChannelTypes.ChannelInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel.ChannelTypes.ChannelInfo other) {
        if (other == bnet.protocol.channel.ChannelTypes.ChannelInfo.getDefaultInstance()) return this;
        if (other.hasDescription()) {
          mergeDescription(other.getDescription());
        }
        if (!other.member_.isEmpty()) {
          if (result.member_.isEmpty()) {
            result.member_ = new java.util.ArrayList<bnet.protocol.channel.ChannelTypes.Member>();
          }
          result.member_.addAll(other.member_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.channel.ChannelTypes.ChannelDescription.Builder subBuilder = bnet.protocol.channel.ChannelTypes.ChannelDescription.newBuilder();
              if (hasDescription()) {
                subBuilder.mergeFrom(getDescription());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setDescription(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bnet.protocol.channel.ChannelTypes.Member.Builder subBuilder = bnet.protocol.channel.ChannelTypes.Member.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addMember(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .bnet.protocol.channel.ChannelDescription description = 1;
      public boolean hasDescription() {
        return result.hasDescription();
      }
      public bnet.protocol.channel.ChannelTypes.ChannelDescription getDescription() {
        return result.getDescription();
      }
      public Builder setDescription(bnet.protocol.channel.ChannelTypes.ChannelDescription value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasDescription = true;
        result.description_ = value;
        return this;
      }
      public Builder setDescription(bnet.protocol.channel.ChannelTypes.ChannelDescription.Builder builderForValue) {
        result.hasDescription = true;
        result.description_ = builderForValue.build();
        return this;
      }
      public Builder mergeDescription(bnet.protocol.channel.ChannelTypes.ChannelDescription value) {
        if (result.hasDescription() &&
            result.description_ != bnet.protocol.channel.ChannelTypes.ChannelDescription.getDefaultInstance()) {
          result.description_ =
            bnet.protocol.channel.ChannelTypes.ChannelDescription.newBuilder(result.description_).mergeFrom(value).buildPartial();
        } else {
          result.description_ = value;
        }
        result.hasDescription = true;
        return this;
      }
      public Builder clearDescription() {
        result.hasDescription = false;
        result.description_ = bnet.protocol.channel.ChannelTypes.ChannelDescription.getDefaultInstance();
        return this;
      }
      
      // repeated .bnet.protocol.channel.Member member = 2;
      public java.util.List<bnet.protocol.channel.ChannelTypes.Member> getMemberList() {
        return java.util.Collections.unmodifiableList(result.member_);
      }
      public int getMemberCount() {
        return result.getMemberCount();
      }
      public bnet.protocol.channel.ChannelTypes.Member getMember(int index) {
        return result.getMember(index);
      }
      public Builder setMember(int index, bnet.protocol.channel.ChannelTypes.Member value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.member_.set(index, value);
        return this;
      }
      public Builder setMember(int index, bnet.protocol.channel.ChannelTypes.Member.Builder builderForValue) {
        result.member_.set(index, builderForValue.build());
        return this;
      }
      public Builder addMember(bnet.protocol.channel.ChannelTypes.Member value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.member_.isEmpty()) {
          result.member_ = new java.util.ArrayList<bnet.protocol.channel.ChannelTypes.Member>();
        }
        result.member_.add(value);
        return this;
      }
      public Builder addMember(bnet.protocol.channel.ChannelTypes.Member.Builder builderForValue) {
        if (result.member_.isEmpty()) {
          result.member_ = new java.util.ArrayList<bnet.protocol.channel.ChannelTypes.Member>();
        }
        result.member_.add(builderForValue.build());
        return this;
      }
      public Builder addAllMember(
          java.lang.Iterable<? extends bnet.protocol.channel.ChannelTypes.Member> values) {
        if (result.member_.isEmpty()) {
          result.member_ = new java.util.ArrayList<bnet.protocol.channel.ChannelTypes.Member>();
        }
        super.addAll(values, result.member_);
        return this;
      }
      public Builder clearMember() {
        result.member_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel.ChannelInfo)
    }
    
    static {
      defaultInstance = new ChannelInfo(true);
      bnet.protocol.channel.ChannelTypes.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel.ChannelInfo)
  }
  
  public static final class GetChannelInfoRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use GetChannelInfoRequest.newBuilder() to construct.
    private GetChannelInfoRequest() {
      initFields();
    }
    private GetChannelInfoRequest(boolean noInit) {}
    
    private static final GetChannelInfoRequest defaultInstance;
    public static GetChannelInfoRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public GetChannelInfoRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel.ChannelTypes.internal_static_bnet_protocol_channel_GetChannelInfoRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel.ChannelTypes.internal_static_bnet_protocol_channel_GetChannelInfoRequest_fieldAccessorTable;
    }
    
    // optional .bnet.protocol.EntityId agent_id = 1;
    public static final int AGENT_ID_FIELD_NUMBER = 1;
    private boolean hasAgentId;
    private bnet.protocol.Entity.EntityId agentId_;
    public boolean hasAgentId() { return hasAgentId; }
    public bnet.protocol.Entity.EntityId getAgentId() { return agentId_; }
    
    // required .bnet.protocol.EntityId channel_id = 2;
    public static final int CHANNEL_ID_FIELD_NUMBER = 2;
    private boolean hasChannelId;
    private bnet.protocol.Entity.EntityId channelId_;
    public boolean hasChannelId() { return hasChannelId; }
    public bnet.protocol.Entity.EntityId getChannelId() { return channelId_; }
    
    private void initFields() {
      agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
      channelId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasChannelId) return false;
      if (hasAgentId()) {
        if (!getAgentId().isInitialized()) return false;
      }
      if (!getChannelId().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAgentId()) {
        output.writeMessage(1, getAgentId());
      }
      if (hasChannelId()) {
        output.writeMessage(2, getChannelId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAgentId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAgentId());
      }
      if (hasChannelId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getChannelId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel.ChannelTypes.GetChannelInfoRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.GetChannelInfoRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.GetChannelInfoRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.GetChannelInfoRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.GetChannelInfoRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.GetChannelInfoRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.GetChannelInfoRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.ChannelTypes.GetChannelInfoRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.ChannelTypes.GetChannelInfoRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.GetChannelInfoRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel.ChannelTypes.GetChannelInfoRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel.ChannelTypes.GetChannelInfoRequest result;
      
      // Construct using bnet.protocol.channel.ChannelTypes.GetChannelInfoRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel.ChannelTypes.GetChannelInfoRequest();
        return builder;
      }
      
      protected bnet.protocol.channel.ChannelTypes.GetChannelInfoRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel.ChannelTypes.GetChannelInfoRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel.ChannelTypes.GetChannelInfoRequest.getDescriptor();
      }
      
      public bnet.protocol.channel.ChannelTypes.GetChannelInfoRequest getDefaultInstanceForType() {
        return bnet.protocol.channel.ChannelTypes.GetChannelInfoRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel.ChannelTypes.GetChannelInfoRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel.ChannelTypes.GetChannelInfoRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel.ChannelTypes.GetChannelInfoRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.channel.ChannelTypes.GetChannelInfoRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel.ChannelTypes.GetChannelInfoRequest) {
          return mergeFrom((bnet.protocol.channel.ChannelTypes.GetChannelInfoRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel.ChannelTypes.GetChannelInfoRequest other) {
        if (other == bnet.protocol.channel.ChannelTypes.GetChannelInfoRequest.getDefaultInstance()) return this;
        if (other.hasAgentId()) {
          mergeAgentId(other.getAgentId());
        }
        if (other.hasChannelId()) {
          mergeChannelId(other.getChannelId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasAgentId()) {
                subBuilder.mergeFrom(getAgentId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAgentId(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasChannelId()) {
                subBuilder.mergeFrom(getChannelId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setChannelId(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional .bnet.protocol.EntityId agent_id = 1;
      public boolean hasAgentId() {
        return result.hasAgentId();
      }
      public bnet.protocol.Entity.EntityId getAgentId() {
        return result.getAgentId();
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasAgentId = true;
        result.agentId_ = builderForValue.build();
        return this;
      }
      public Builder mergeAgentId(bnet.protocol.Entity.EntityId value) {
        if (result.hasAgentId() &&
            result.agentId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.agentId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.agentId_).mergeFrom(value).buildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder clearAgentId() {
        result.hasAgentId = false;
        result.agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // required .bnet.protocol.EntityId channel_id = 2;
      public boolean hasChannelId() {
        return result.hasChannelId();
      }
      public bnet.protocol.Entity.EntityId getChannelId() {
        return result.getChannelId();
      }
      public Builder setChannelId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder setChannelId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasChannelId = true;
        result.channelId_ = builderForValue.build();
        return this;
      }
      public Builder mergeChannelId(bnet.protocol.Entity.EntityId value) {
        if (result.hasChannelId() &&
            result.channelId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.channelId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.channelId_).mergeFrom(value).buildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder clearChannelId() {
        result.hasChannelId = false;
        result.channelId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel.GetChannelInfoRequest)
    }
    
    static {
      defaultInstance = new GetChannelInfoRequest(true);
      bnet.protocol.channel.ChannelTypes.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel.GetChannelInfoRequest)
  }
  
  public static final class GetChannelInfoResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use GetChannelInfoResponse.newBuilder() to construct.
    private GetChannelInfoResponse() {
      initFields();
    }
    private GetChannelInfoResponse(boolean noInit) {}
    
    private static final GetChannelInfoResponse defaultInstance;
    public static GetChannelInfoResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public GetChannelInfoResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel.ChannelTypes.internal_static_bnet_protocol_channel_GetChannelInfoResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel.ChannelTypes.internal_static_bnet_protocol_channel_GetChannelInfoResponse_fieldAccessorTable;
    }
    
    // optional .bnet.protocol.channel.ChannelInfo channel_info = 1;
    public static final int CHANNEL_INFO_FIELD_NUMBER = 1;
    private boolean hasChannelInfo;
    private bnet.protocol.channel.ChannelTypes.ChannelInfo channelInfo_;
    public boolean hasChannelInfo() { return hasChannelInfo; }
    public bnet.protocol.channel.ChannelTypes.ChannelInfo getChannelInfo() { return channelInfo_; }
    
    private void initFields() {
      channelInfo_ = bnet.protocol.channel.ChannelTypes.ChannelInfo.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (hasChannelInfo()) {
        if (!getChannelInfo().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasChannelInfo()) {
        output.writeMessage(1, getChannelInfo());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasChannelInfo()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getChannelInfo());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel.ChannelTypes.GetChannelInfoResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.GetChannelInfoResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.GetChannelInfoResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.GetChannelInfoResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.GetChannelInfoResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.GetChannelInfoResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.GetChannelInfoResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.ChannelTypes.GetChannelInfoResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.ChannelTypes.GetChannelInfoResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.GetChannelInfoResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel.ChannelTypes.GetChannelInfoResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel.ChannelTypes.GetChannelInfoResponse result;
      
      // Construct using bnet.protocol.channel.ChannelTypes.GetChannelInfoResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel.ChannelTypes.GetChannelInfoResponse();
        return builder;
      }
      
      protected bnet.protocol.channel.ChannelTypes.GetChannelInfoResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel.ChannelTypes.GetChannelInfoResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel.ChannelTypes.GetChannelInfoResponse.getDescriptor();
      }
      
      public bnet.protocol.channel.ChannelTypes.GetChannelInfoResponse getDefaultInstanceForType() {
        return bnet.protocol.channel.ChannelTypes.GetChannelInfoResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel.ChannelTypes.GetChannelInfoResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel.ChannelTypes.GetChannelInfoResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel.ChannelTypes.GetChannelInfoResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.channel.ChannelTypes.GetChannelInfoResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel.ChannelTypes.GetChannelInfoResponse) {
          return mergeFrom((bnet.protocol.channel.ChannelTypes.GetChannelInfoResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel.ChannelTypes.GetChannelInfoResponse other) {
        if (other == bnet.protocol.channel.ChannelTypes.GetChannelInfoResponse.getDefaultInstance()) return this;
        if (other.hasChannelInfo()) {
          mergeChannelInfo(other.getChannelInfo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.channel.ChannelTypes.ChannelInfo.Builder subBuilder = bnet.protocol.channel.ChannelTypes.ChannelInfo.newBuilder();
              if (hasChannelInfo()) {
                subBuilder.mergeFrom(getChannelInfo());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setChannelInfo(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional .bnet.protocol.channel.ChannelInfo channel_info = 1;
      public boolean hasChannelInfo() {
        return result.hasChannelInfo();
      }
      public bnet.protocol.channel.ChannelTypes.ChannelInfo getChannelInfo() {
        return result.getChannelInfo();
      }
      public Builder setChannelInfo(bnet.protocol.channel.ChannelTypes.ChannelInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasChannelInfo = true;
        result.channelInfo_ = value;
        return this;
      }
      public Builder setChannelInfo(bnet.protocol.channel.ChannelTypes.ChannelInfo.Builder builderForValue) {
        result.hasChannelInfo = true;
        result.channelInfo_ = builderForValue.build();
        return this;
      }
      public Builder mergeChannelInfo(bnet.protocol.channel.ChannelTypes.ChannelInfo value) {
        if (result.hasChannelInfo() &&
            result.channelInfo_ != bnet.protocol.channel.ChannelTypes.ChannelInfo.getDefaultInstance()) {
          result.channelInfo_ =
            bnet.protocol.channel.ChannelTypes.ChannelInfo.newBuilder(result.channelInfo_).mergeFrom(value).buildPartial();
        } else {
          result.channelInfo_ = value;
        }
        result.hasChannelInfo = true;
        return this;
      }
      public Builder clearChannelInfo() {
        result.hasChannelInfo = false;
        result.channelInfo_ = bnet.protocol.channel.ChannelTypes.ChannelInfo.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel.GetChannelInfoResponse)
    }
    
    static {
      defaultInstance = new GetChannelInfoResponse(true);
      bnet.protocol.channel.ChannelTypes.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel.GetChannelInfoResponse)
  }
  
  public static final class GetChannelIdRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use GetChannelIdRequest.newBuilder() to construct.
    private GetChannelIdRequest() {
      initFields();
    }
    private GetChannelIdRequest(boolean noInit) {}
    
    private static final GetChannelIdRequest defaultInstance;
    public static GetChannelIdRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public GetChannelIdRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel.ChannelTypes.internal_static_bnet_protocol_channel_GetChannelIdRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel.ChannelTypes.internal_static_bnet_protocol_channel_GetChannelIdRequest_fieldAccessorTable;
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel.ChannelTypes.GetChannelIdRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.GetChannelIdRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.GetChannelIdRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.GetChannelIdRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.GetChannelIdRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.GetChannelIdRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.GetChannelIdRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.ChannelTypes.GetChannelIdRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.ChannelTypes.GetChannelIdRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.GetChannelIdRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel.ChannelTypes.GetChannelIdRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel.ChannelTypes.GetChannelIdRequest result;
      
      // Construct using bnet.protocol.channel.ChannelTypes.GetChannelIdRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel.ChannelTypes.GetChannelIdRequest();
        return builder;
      }
      
      protected bnet.protocol.channel.ChannelTypes.GetChannelIdRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel.ChannelTypes.GetChannelIdRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel.ChannelTypes.GetChannelIdRequest.getDescriptor();
      }
      
      public bnet.protocol.channel.ChannelTypes.GetChannelIdRequest getDefaultInstanceForType() {
        return bnet.protocol.channel.ChannelTypes.GetChannelIdRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel.ChannelTypes.GetChannelIdRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel.ChannelTypes.GetChannelIdRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel.ChannelTypes.GetChannelIdRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.channel.ChannelTypes.GetChannelIdRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel.ChannelTypes.GetChannelIdRequest) {
          return mergeFrom((bnet.protocol.channel.ChannelTypes.GetChannelIdRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel.ChannelTypes.GetChannelIdRequest other) {
        if (other == bnet.protocol.channel.ChannelTypes.GetChannelIdRequest.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
          }
        }
      }
      
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel.GetChannelIdRequest)
    }
    
    static {
      defaultInstance = new GetChannelIdRequest(true);
      bnet.protocol.channel.ChannelTypes.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel.GetChannelIdRequest)
  }
  
  public static final class GetChannelIdResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use GetChannelIdResponse.newBuilder() to construct.
    private GetChannelIdResponse() {
      initFields();
    }
    private GetChannelIdResponse(boolean noInit) {}
    
    private static final GetChannelIdResponse defaultInstance;
    public static GetChannelIdResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public GetChannelIdResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel.ChannelTypes.internal_static_bnet_protocol_channel_GetChannelIdResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel.ChannelTypes.internal_static_bnet_protocol_channel_GetChannelIdResponse_fieldAccessorTable;
    }
    
    // optional .bnet.protocol.EntityId channel_id = 1;
    public static final int CHANNEL_ID_FIELD_NUMBER = 1;
    private boolean hasChannelId;
    private bnet.protocol.Entity.EntityId channelId_;
    public boolean hasChannelId() { return hasChannelId; }
    public bnet.protocol.Entity.EntityId getChannelId() { return channelId_; }
    
    private void initFields() {
      channelId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (hasChannelId()) {
        if (!getChannelId().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasChannelId()) {
        output.writeMessage(1, getChannelId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasChannelId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getChannelId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel.ChannelTypes.GetChannelIdResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.GetChannelIdResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.GetChannelIdResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.GetChannelIdResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.GetChannelIdResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.GetChannelIdResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.GetChannelIdResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.ChannelTypes.GetChannelIdResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.ChannelTypes.GetChannelIdResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.GetChannelIdResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel.ChannelTypes.GetChannelIdResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel.ChannelTypes.GetChannelIdResponse result;
      
      // Construct using bnet.protocol.channel.ChannelTypes.GetChannelIdResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel.ChannelTypes.GetChannelIdResponse();
        return builder;
      }
      
      protected bnet.protocol.channel.ChannelTypes.GetChannelIdResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel.ChannelTypes.GetChannelIdResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel.ChannelTypes.GetChannelIdResponse.getDescriptor();
      }
      
      public bnet.protocol.channel.ChannelTypes.GetChannelIdResponse getDefaultInstanceForType() {
        return bnet.protocol.channel.ChannelTypes.GetChannelIdResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel.ChannelTypes.GetChannelIdResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel.ChannelTypes.GetChannelIdResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel.ChannelTypes.GetChannelIdResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.channel.ChannelTypes.GetChannelIdResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel.ChannelTypes.GetChannelIdResponse) {
          return mergeFrom((bnet.protocol.channel.ChannelTypes.GetChannelIdResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel.ChannelTypes.GetChannelIdResponse other) {
        if (other == bnet.protocol.channel.ChannelTypes.GetChannelIdResponse.getDefaultInstance()) return this;
        if (other.hasChannelId()) {
          mergeChannelId(other.getChannelId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasChannelId()) {
                subBuilder.mergeFrom(getChannelId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setChannelId(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional .bnet.protocol.EntityId channel_id = 1;
      public boolean hasChannelId() {
        return result.hasChannelId();
      }
      public bnet.protocol.Entity.EntityId getChannelId() {
        return result.getChannelId();
      }
      public Builder setChannelId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder setChannelId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasChannelId = true;
        result.channelId_ = builderForValue.build();
        return this;
      }
      public Builder mergeChannelId(bnet.protocol.Entity.EntityId value) {
        if (result.hasChannelId() &&
            result.channelId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.channelId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.channelId_).mergeFrom(value).buildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder clearChannelId() {
        result.hasChannelId = false;
        result.channelId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel.GetChannelIdResponse)
    }
    
    static {
      defaultInstance = new GetChannelIdResponse(true);
      bnet.protocol.channel.ChannelTypes.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel.GetChannelIdResponse)
  }
  
  public static final class CreateChannelRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use CreateChannelRequest.newBuilder() to construct.
    private CreateChannelRequest() {
      initFields();
    }
    private CreateChannelRequest(boolean noInit) {}
    
    private static final CreateChannelRequest defaultInstance;
    public static CreateChannelRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public CreateChannelRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel.ChannelTypes.internal_static_bnet_protocol_channel_CreateChannelRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel.ChannelTypes.internal_static_bnet_protocol_channel_CreateChannelRequest_fieldAccessorTable;
    }
    
    // optional .bnet.protocol.Identity agent_identity = 1;
    public static final int AGENT_IDENTITY_FIELD_NUMBER = 1;
    private boolean hasAgentIdentity;
    private bnet.protocol.Entity.Identity agentIdentity_;
    public boolean hasAgentIdentity() { return hasAgentIdentity; }
    public bnet.protocol.Entity.Identity getAgentIdentity() { return agentIdentity_; }
    
    // optional .bnet.protocol.channel.ChannelState state = 2;
    public static final int STATE_FIELD_NUMBER = 2;
    private boolean hasState;
    private bnet.protocol.channel.ChannelTypes.ChannelState state_;
    public boolean hasState() { return hasState; }
    public bnet.protocol.channel.ChannelTypes.ChannelState getState() { return state_; }
    
    // optional .bnet.protocol.EntityId channel_id = 3;
    public static final int CHANNEL_ID_FIELD_NUMBER = 3;
    private boolean hasChannelId;
    private bnet.protocol.Entity.EntityId channelId_;
    public boolean hasChannelId() { return hasChannelId; }
    public bnet.protocol.Entity.EntityId getChannelId() { return channelId_; }
    
    // optional uint64 object_id = 4;
    public static final int OBJECT_ID_FIELD_NUMBER = 4;
    private boolean hasObjectId;
    private long objectId_ = 0L;
    public boolean hasObjectId() { return hasObjectId; }
    public long getObjectId() { return objectId_; }
    
    private void initFields() {
      agentIdentity_ = bnet.protocol.Entity.Identity.getDefaultInstance();
      state_ = bnet.protocol.channel.ChannelTypes.ChannelState.getDefaultInstance();
      channelId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (hasAgentIdentity()) {
        if (!getAgentIdentity().isInitialized()) return false;
      }
      if (hasState()) {
        if (!getState().isInitialized()) return false;
      }
      if (hasChannelId()) {
        if (!getChannelId().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAgentIdentity()) {
        output.writeMessage(1, getAgentIdentity());
      }
      if (hasState()) {
        output.writeMessage(2, getState());
      }
      if (hasChannelId()) {
        output.writeMessage(3, getChannelId());
      }
      if (hasObjectId()) {
        output.writeUInt64(4, getObjectId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAgentIdentity()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAgentIdentity());
      }
      if (hasState()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getState());
      }
      if (hasChannelId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getChannelId());
      }
      if (hasObjectId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, getObjectId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel.ChannelTypes.CreateChannelRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.CreateChannelRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.CreateChannelRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.CreateChannelRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.CreateChannelRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.CreateChannelRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.CreateChannelRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.ChannelTypes.CreateChannelRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.ChannelTypes.CreateChannelRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.CreateChannelRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel.ChannelTypes.CreateChannelRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel.ChannelTypes.CreateChannelRequest result;
      
      // Construct using bnet.protocol.channel.ChannelTypes.CreateChannelRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel.ChannelTypes.CreateChannelRequest();
        return builder;
      }
      
      protected bnet.protocol.channel.ChannelTypes.CreateChannelRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel.ChannelTypes.CreateChannelRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel.ChannelTypes.CreateChannelRequest.getDescriptor();
      }
      
      public bnet.protocol.channel.ChannelTypes.CreateChannelRequest getDefaultInstanceForType() {
        return bnet.protocol.channel.ChannelTypes.CreateChannelRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel.ChannelTypes.CreateChannelRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel.ChannelTypes.CreateChannelRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel.ChannelTypes.CreateChannelRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.channel.ChannelTypes.CreateChannelRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel.ChannelTypes.CreateChannelRequest) {
          return mergeFrom((bnet.protocol.channel.ChannelTypes.CreateChannelRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel.ChannelTypes.CreateChannelRequest other) {
        if (other == bnet.protocol.channel.ChannelTypes.CreateChannelRequest.getDefaultInstance()) return this;
        if (other.hasAgentIdentity()) {
          mergeAgentIdentity(other.getAgentIdentity());
        }
        if (other.hasState()) {
          mergeState(other.getState());
        }
        if (other.hasChannelId()) {
          mergeChannelId(other.getChannelId());
        }
        if (other.hasObjectId()) {
          setObjectId(other.getObjectId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Entity.Identity.Builder subBuilder = bnet.protocol.Entity.Identity.newBuilder();
              if (hasAgentIdentity()) {
                subBuilder.mergeFrom(getAgentIdentity());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAgentIdentity(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bnet.protocol.channel.ChannelTypes.ChannelState.Builder subBuilder = bnet.protocol.channel.ChannelTypes.ChannelState.newBuilder();
              if (hasState()) {
                subBuilder.mergeFrom(getState());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setState(subBuilder.buildPartial());
              break;
            }
            case 26: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasChannelId()) {
                subBuilder.mergeFrom(getChannelId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setChannelId(subBuilder.buildPartial());
              break;
            }
            case 32: {
              setObjectId(input.readUInt64());
              break;
            }
          }
        }
      }
      
      
      // optional .bnet.protocol.Identity agent_identity = 1;
      public boolean hasAgentIdentity() {
        return result.hasAgentIdentity();
      }
      public bnet.protocol.Entity.Identity getAgentIdentity() {
        return result.getAgentIdentity();
      }
      public Builder setAgentIdentity(bnet.protocol.Entity.Identity value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasAgentIdentity = true;
        result.agentIdentity_ = value;
        return this;
      }
      public Builder setAgentIdentity(bnet.protocol.Entity.Identity.Builder builderForValue) {
        result.hasAgentIdentity = true;
        result.agentIdentity_ = builderForValue.build();
        return this;
      }
      public Builder mergeAgentIdentity(bnet.protocol.Entity.Identity value) {
        if (result.hasAgentIdentity() &&
            result.agentIdentity_ != bnet.protocol.Entity.Identity.getDefaultInstance()) {
          result.agentIdentity_ =
            bnet.protocol.Entity.Identity.newBuilder(result.agentIdentity_).mergeFrom(value).buildPartial();
        } else {
          result.agentIdentity_ = value;
        }
        result.hasAgentIdentity = true;
        return this;
      }
      public Builder clearAgentIdentity() {
        result.hasAgentIdentity = false;
        result.agentIdentity_ = bnet.protocol.Entity.Identity.getDefaultInstance();
        return this;
      }
      
      // optional .bnet.protocol.channel.ChannelState state = 2;
      public boolean hasState() {
        return result.hasState();
      }
      public bnet.protocol.channel.ChannelTypes.ChannelState getState() {
        return result.getState();
      }
      public Builder setState(bnet.protocol.channel.ChannelTypes.ChannelState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasState = true;
        result.state_ = value;
        return this;
      }
      public Builder setState(bnet.protocol.channel.ChannelTypes.ChannelState.Builder builderForValue) {
        result.hasState = true;
        result.state_ = builderForValue.build();
        return this;
      }
      public Builder mergeState(bnet.protocol.channel.ChannelTypes.ChannelState value) {
        if (result.hasState() &&
            result.state_ != bnet.protocol.channel.ChannelTypes.ChannelState.getDefaultInstance()) {
          result.state_ =
            bnet.protocol.channel.ChannelTypes.ChannelState.newBuilder(result.state_).mergeFrom(value).buildPartial();
        } else {
          result.state_ = value;
        }
        result.hasState = true;
        return this;
      }
      public Builder clearState() {
        result.hasState = false;
        result.state_ = bnet.protocol.channel.ChannelTypes.ChannelState.getDefaultInstance();
        return this;
      }
      
      // optional .bnet.protocol.EntityId channel_id = 3;
      public boolean hasChannelId() {
        return result.hasChannelId();
      }
      public bnet.protocol.Entity.EntityId getChannelId() {
        return result.getChannelId();
      }
      public Builder setChannelId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder setChannelId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasChannelId = true;
        result.channelId_ = builderForValue.build();
        return this;
      }
      public Builder mergeChannelId(bnet.protocol.Entity.EntityId value) {
        if (result.hasChannelId() &&
            result.channelId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.channelId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.channelId_).mergeFrom(value).buildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder clearChannelId() {
        result.hasChannelId = false;
        result.channelId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // optional uint64 object_id = 4;
      public boolean hasObjectId() {
        return result.hasObjectId();
      }
      public long getObjectId() {
        return result.getObjectId();
      }
      public Builder setObjectId(long value) {
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder clearObjectId() {
        result.hasObjectId = false;
        result.objectId_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel.CreateChannelRequest)
    }
    
    static {
      defaultInstance = new CreateChannelRequest(true);
      bnet.protocol.channel.ChannelTypes.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel.CreateChannelRequest)
  }
  
  public static final class CreateChannelResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use CreateChannelResponse.newBuilder() to construct.
    private CreateChannelResponse() {
      initFields();
    }
    private CreateChannelResponse(boolean noInit) {}
    
    private static final CreateChannelResponse defaultInstance;
    public static CreateChannelResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public CreateChannelResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel.ChannelTypes.internal_static_bnet_protocol_channel_CreateChannelResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel.ChannelTypes.internal_static_bnet_protocol_channel_CreateChannelResponse_fieldAccessorTable;
    }
    
    // required uint64 object_id = 1;
    public static final int OBJECT_ID_FIELD_NUMBER = 1;
    private boolean hasObjectId;
    private long objectId_ = 0L;
    public boolean hasObjectId() { return hasObjectId; }
    public long getObjectId() { return objectId_; }
    
    // optional .bnet.protocol.EntityId channel_id = 2;
    public static final int CHANNEL_ID_FIELD_NUMBER = 2;
    private boolean hasChannelId;
    private bnet.protocol.Entity.EntityId channelId_;
    public boolean hasChannelId() { return hasChannelId; }
    public bnet.protocol.Entity.EntityId getChannelId() { return channelId_; }
    
    private void initFields() {
      channelId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasObjectId) return false;
      if (hasChannelId()) {
        if (!getChannelId().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasObjectId()) {
        output.writeUInt64(1, getObjectId());
      }
      if (hasChannelId()) {
        output.writeMessage(2, getChannelId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasObjectId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, getObjectId());
      }
      if (hasChannelId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getChannelId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel.ChannelTypes.CreateChannelResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.CreateChannelResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.CreateChannelResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.CreateChannelResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.CreateChannelResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.CreateChannelResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.CreateChannelResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.ChannelTypes.CreateChannelResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.ChannelTypes.CreateChannelResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.CreateChannelResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel.ChannelTypes.CreateChannelResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel.ChannelTypes.CreateChannelResponse result;
      
      // Construct using bnet.protocol.channel.ChannelTypes.CreateChannelResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel.ChannelTypes.CreateChannelResponse();
        return builder;
      }
      
      protected bnet.protocol.channel.ChannelTypes.CreateChannelResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel.ChannelTypes.CreateChannelResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel.ChannelTypes.CreateChannelResponse.getDescriptor();
      }
      
      public bnet.protocol.channel.ChannelTypes.CreateChannelResponse getDefaultInstanceForType() {
        return bnet.protocol.channel.ChannelTypes.CreateChannelResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel.ChannelTypes.CreateChannelResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel.ChannelTypes.CreateChannelResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel.ChannelTypes.CreateChannelResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.channel.ChannelTypes.CreateChannelResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel.ChannelTypes.CreateChannelResponse) {
          return mergeFrom((bnet.protocol.channel.ChannelTypes.CreateChannelResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel.ChannelTypes.CreateChannelResponse other) {
        if (other == bnet.protocol.channel.ChannelTypes.CreateChannelResponse.getDefaultInstance()) return this;
        if (other.hasObjectId()) {
          setObjectId(other.getObjectId());
        }
        if (other.hasChannelId()) {
          mergeChannelId(other.getChannelId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setObjectId(input.readUInt64());
              break;
            }
            case 18: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasChannelId()) {
                subBuilder.mergeFrom(getChannelId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setChannelId(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required uint64 object_id = 1;
      public boolean hasObjectId() {
        return result.hasObjectId();
      }
      public long getObjectId() {
        return result.getObjectId();
      }
      public Builder setObjectId(long value) {
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder clearObjectId() {
        result.hasObjectId = false;
        result.objectId_ = 0L;
        return this;
      }
      
      // optional .bnet.protocol.EntityId channel_id = 2;
      public boolean hasChannelId() {
        return result.hasChannelId();
      }
      public bnet.protocol.Entity.EntityId getChannelId() {
        return result.getChannelId();
      }
      public Builder setChannelId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder setChannelId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasChannelId = true;
        result.channelId_ = builderForValue.build();
        return this;
      }
      public Builder mergeChannelId(bnet.protocol.Entity.EntityId value) {
        if (result.hasChannelId() &&
            result.channelId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.channelId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.channelId_).mergeFrom(value).buildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder clearChannelId() {
        result.hasChannelId = false;
        result.channelId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel.CreateChannelResponse)
    }
    
    static {
      defaultInstance = new CreateChannelResponse(true);
      bnet.protocol.channel.ChannelTypes.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel.CreateChannelResponse)
  }
  
  public static final class JoinChannelRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use JoinChannelRequest.newBuilder() to construct.
    private JoinChannelRequest() {
      initFields();
    }
    private JoinChannelRequest(boolean noInit) {}
    
    private static final JoinChannelRequest defaultInstance;
    public static JoinChannelRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public JoinChannelRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel.ChannelTypes.internal_static_bnet_protocol_channel_JoinChannelRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel.ChannelTypes.internal_static_bnet_protocol_channel_JoinChannelRequest_fieldAccessorTable;
    }
    
    // optional .bnet.protocol.Identity agent_identity = 1;
    public static final int AGENT_IDENTITY_FIELD_NUMBER = 1;
    private boolean hasAgentIdentity;
    private bnet.protocol.Entity.Identity agentIdentity_;
    public boolean hasAgentIdentity() { return hasAgentIdentity; }
    public bnet.protocol.Entity.Identity getAgentIdentity() { return agentIdentity_; }
    
    // required .bnet.protocol.EntityId channel_id = 2;
    public static final int CHANNEL_ID_FIELD_NUMBER = 2;
    private boolean hasChannelId;
    private bnet.protocol.Entity.EntityId channelId_;
    public boolean hasChannelId() { return hasChannelId; }
    public bnet.protocol.Entity.EntityId getChannelId() { return channelId_; }
    
    // required uint64 object_id = 3;
    public static final int OBJECT_ID_FIELD_NUMBER = 3;
    private boolean hasObjectId;
    private long objectId_ = 0L;
    public boolean hasObjectId() { return hasObjectId; }
    public long getObjectId() { return objectId_; }
    
    // repeated .bnet.protocol.EntityId friend_account_id = 4;
    public static final int FRIEND_ACCOUNT_ID_FIELD_NUMBER = 4;
    private java.util.List<bnet.protocol.Entity.EntityId> friendAccountId_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.Entity.EntityId> getFriendAccountIdList() {
      return friendAccountId_;
    }
    public int getFriendAccountIdCount() { return friendAccountId_.size(); }
    public bnet.protocol.Entity.EntityId getFriendAccountId(int index) {
      return friendAccountId_.get(index);
    }
    
    private void initFields() {
      agentIdentity_ = bnet.protocol.Entity.Identity.getDefaultInstance();
      channelId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasChannelId) return false;
      if (!hasObjectId) return false;
      if (hasAgentIdentity()) {
        if (!getAgentIdentity().isInitialized()) return false;
      }
      if (!getChannelId().isInitialized()) return false;
      for (bnet.protocol.Entity.EntityId element : getFriendAccountIdList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAgentIdentity()) {
        output.writeMessage(1, getAgentIdentity());
      }
      if (hasChannelId()) {
        output.writeMessage(2, getChannelId());
      }
      if (hasObjectId()) {
        output.writeUInt64(3, getObjectId());
      }
      for (bnet.protocol.Entity.EntityId element : getFriendAccountIdList()) {
        output.writeMessage(4, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAgentIdentity()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAgentIdentity());
      }
      if (hasChannelId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getChannelId());
      }
      if (hasObjectId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, getObjectId());
      }
      for (bnet.protocol.Entity.EntityId element : getFriendAccountIdList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel.ChannelTypes.JoinChannelRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.JoinChannelRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.JoinChannelRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.JoinChannelRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.JoinChannelRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.JoinChannelRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.JoinChannelRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.ChannelTypes.JoinChannelRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.ChannelTypes.JoinChannelRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.JoinChannelRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel.ChannelTypes.JoinChannelRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel.ChannelTypes.JoinChannelRequest result;
      
      // Construct using bnet.protocol.channel.ChannelTypes.JoinChannelRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel.ChannelTypes.JoinChannelRequest();
        return builder;
      }
      
      protected bnet.protocol.channel.ChannelTypes.JoinChannelRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel.ChannelTypes.JoinChannelRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel.ChannelTypes.JoinChannelRequest.getDescriptor();
      }
      
      public bnet.protocol.channel.ChannelTypes.JoinChannelRequest getDefaultInstanceForType() {
        return bnet.protocol.channel.ChannelTypes.JoinChannelRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel.ChannelTypes.JoinChannelRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel.ChannelTypes.JoinChannelRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel.ChannelTypes.JoinChannelRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.friendAccountId_ != java.util.Collections.EMPTY_LIST) {
          result.friendAccountId_ =
            java.util.Collections.unmodifiableList(result.friendAccountId_);
        }
        bnet.protocol.channel.ChannelTypes.JoinChannelRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel.ChannelTypes.JoinChannelRequest) {
          return mergeFrom((bnet.protocol.channel.ChannelTypes.JoinChannelRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel.ChannelTypes.JoinChannelRequest other) {
        if (other == bnet.protocol.channel.ChannelTypes.JoinChannelRequest.getDefaultInstance()) return this;
        if (other.hasAgentIdentity()) {
          mergeAgentIdentity(other.getAgentIdentity());
        }
        if (other.hasChannelId()) {
          mergeChannelId(other.getChannelId());
        }
        if (other.hasObjectId()) {
          setObjectId(other.getObjectId());
        }
        if (!other.friendAccountId_.isEmpty()) {
          if (result.friendAccountId_.isEmpty()) {
            result.friendAccountId_ = new java.util.ArrayList<bnet.protocol.Entity.EntityId>();
          }
          result.friendAccountId_.addAll(other.friendAccountId_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Entity.Identity.Builder subBuilder = bnet.protocol.Entity.Identity.newBuilder();
              if (hasAgentIdentity()) {
                subBuilder.mergeFrom(getAgentIdentity());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAgentIdentity(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasChannelId()) {
                subBuilder.mergeFrom(getChannelId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setChannelId(subBuilder.buildPartial());
              break;
            }
            case 24: {
              setObjectId(input.readUInt64());
              break;
            }
            case 34: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addFriendAccountId(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional .bnet.protocol.Identity agent_identity = 1;
      public boolean hasAgentIdentity() {
        return result.hasAgentIdentity();
      }
      public bnet.protocol.Entity.Identity getAgentIdentity() {
        return result.getAgentIdentity();
      }
      public Builder setAgentIdentity(bnet.protocol.Entity.Identity value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasAgentIdentity = true;
        result.agentIdentity_ = value;
        return this;
      }
      public Builder setAgentIdentity(bnet.protocol.Entity.Identity.Builder builderForValue) {
        result.hasAgentIdentity = true;
        result.agentIdentity_ = builderForValue.build();
        return this;
      }
      public Builder mergeAgentIdentity(bnet.protocol.Entity.Identity value) {
        if (result.hasAgentIdentity() &&
            result.agentIdentity_ != bnet.protocol.Entity.Identity.getDefaultInstance()) {
          result.agentIdentity_ =
            bnet.protocol.Entity.Identity.newBuilder(result.agentIdentity_).mergeFrom(value).buildPartial();
        } else {
          result.agentIdentity_ = value;
        }
        result.hasAgentIdentity = true;
        return this;
      }
      public Builder clearAgentIdentity() {
        result.hasAgentIdentity = false;
        result.agentIdentity_ = bnet.protocol.Entity.Identity.getDefaultInstance();
        return this;
      }
      
      // required .bnet.protocol.EntityId channel_id = 2;
      public boolean hasChannelId() {
        return result.hasChannelId();
      }
      public bnet.protocol.Entity.EntityId getChannelId() {
        return result.getChannelId();
      }
      public Builder setChannelId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder setChannelId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasChannelId = true;
        result.channelId_ = builderForValue.build();
        return this;
      }
      public Builder mergeChannelId(bnet.protocol.Entity.EntityId value) {
        if (result.hasChannelId() &&
            result.channelId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.channelId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.channelId_).mergeFrom(value).buildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder clearChannelId() {
        result.hasChannelId = false;
        result.channelId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // required uint64 object_id = 3;
      public boolean hasObjectId() {
        return result.hasObjectId();
      }
      public long getObjectId() {
        return result.getObjectId();
      }
      public Builder setObjectId(long value) {
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder clearObjectId() {
        result.hasObjectId = false;
        result.objectId_ = 0L;
        return this;
      }
      
      // repeated .bnet.protocol.EntityId friend_account_id = 4;
      public java.util.List<bnet.protocol.Entity.EntityId> getFriendAccountIdList() {
        return java.util.Collections.unmodifiableList(result.friendAccountId_);
      }
      public int getFriendAccountIdCount() {
        return result.getFriendAccountIdCount();
      }
      public bnet.protocol.Entity.EntityId getFriendAccountId(int index) {
        return result.getFriendAccountId(index);
      }
      public Builder setFriendAccountId(int index, bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.friendAccountId_.set(index, value);
        return this;
      }
      public Builder setFriendAccountId(int index, bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.friendAccountId_.set(index, builderForValue.build());
        return this;
      }
      public Builder addFriendAccountId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.friendAccountId_.isEmpty()) {
          result.friendAccountId_ = new java.util.ArrayList<bnet.protocol.Entity.EntityId>();
        }
        result.friendAccountId_.add(value);
        return this;
      }
      public Builder addFriendAccountId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        if (result.friendAccountId_.isEmpty()) {
          result.friendAccountId_ = new java.util.ArrayList<bnet.protocol.Entity.EntityId>();
        }
        result.friendAccountId_.add(builderForValue.build());
        return this;
      }
      public Builder addAllFriendAccountId(
          java.lang.Iterable<? extends bnet.protocol.Entity.EntityId> values) {
        if (result.friendAccountId_.isEmpty()) {
          result.friendAccountId_ = new java.util.ArrayList<bnet.protocol.Entity.EntityId>();
        }
        super.addAll(values, result.friendAccountId_);
        return this;
      }
      public Builder clearFriendAccountId() {
        result.friendAccountId_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel.JoinChannelRequest)
    }
    
    static {
      defaultInstance = new JoinChannelRequest(true);
      bnet.protocol.channel.ChannelTypes.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel.JoinChannelRequest)
  }
  
  public static final class JoinChannelResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use JoinChannelResponse.newBuilder() to construct.
    private JoinChannelResponse() {
      initFields();
    }
    private JoinChannelResponse(boolean noInit) {}
    
    private static final JoinChannelResponse defaultInstance;
    public static JoinChannelResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public JoinChannelResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel.ChannelTypes.internal_static_bnet_protocol_channel_JoinChannelResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel.ChannelTypes.internal_static_bnet_protocol_channel_JoinChannelResponse_fieldAccessorTable;
    }
    
    // optional uint64 object_id = 1;
    public static final int OBJECT_ID_FIELD_NUMBER = 1;
    private boolean hasObjectId;
    private long objectId_ = 0L;
    public boolean hasObjectId() { return hasObjectId; }
    public long getObjectId() { return objectId_; }
    
    // optional bool require_friend_validation = 2;
    public static final int REQUIRE_FRIEND_VALIDATION_FIELD_NUMBER = 2;
    private boolean hasRequireFriendValidation;
    private boolean requireFriendValidation_ = false;
    public boolean hasRequireFriendValidation() { return hasRequireFriendValidation; }
    public boolean getRequireFriendValidation() { return requireFriendValidation_; }
    
    // repeated .bnet.protocol.EntityId privileged_account = 3;
    public static final int PRIVILEGED_ACCOUNT_FIELD_NUMBER = 3;
    private java.util.List<bnet.protocol.Entity.EntityId> privilegedAccount_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.Entity.EntityId> getPrivilegedAccountList() {
      return privilegedAccount_;
    }
    public int getPrivilegedAccountCount() { return privilegedAccount_.size(); }
    public bnet.protocol.Entity.EntityId getPrivilegedAccount(int index) {
      return privilegedAccount_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (bnet.protocol.Entity.EntityId element : getPrivilegedAccountList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasObjectId()) {
        output.writeUInt64(1, getObjectId());
      }
      if (hasRequireFriendValidation()) {
        output.writeBool(2, getRequireFriendValidation());
      }
      for (bnet.protocol.Entity.EntityId element : getPrivilegedAccountList()) {
        output.writeMessage(3, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasObjectId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, getObjectId());
      }
      if (hasRequireFriendValidation()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, getRequireFriendValidation());
      }
      for (bnet.protocol.Entity.EntityId element : getPrivilegedAccountList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel.ChannelTypes.JoinChannelResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.JoinChannelResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.JoinChannelResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.JoinChannelResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.JoinChannelResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.JoinChannelResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.JoinChannelResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.ChannelTypes.JoinChannelResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.ChannelTypes.JoinChannelResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.JoinChannelResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel.ChannelTypes.JoinChannelResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel.ChannelTypes.JoinChannelResponse result;
      
      // Construct using bnet.protocol.channel.ChannelTypes.JoinChannelResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel.ChannelTypes.JoinChannelResponse();
        return builder;
      }
      
      protected bnet.protocol.channel.ChannelTypes.JoinChannelResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel.ChannelTypes.JoinChannelResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel.ChannelTypes.JoinChannelResponse.getDescriptor();
      }
      
      public bnet.protocol.channel.ChannelTypes.JoinChannelResponse getDefaultInstanceForType() {
        return bnet.protocol.channel.ChannelTypes.JoinChannelResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel.ChannelTypes.JoinChannelResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel.ChannelTypes.JoinChannelResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel.ChannelTypes.JoinChannelResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.privilegedAccount_ != java.util.Collections.EMPTY_LIST) {
          result.privilegedAccount_ =
            java.util.Collections.unmodifiableList(result.privilegedAccount_);
        }
        bnet.protocol.channel.ChannelTypes.JoinChannelResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel.ChannelTypes.JoinChannelResponse) {
          return mergeFrom((bnet.protocol.channel.ChannelTypes.JoinChannelResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel.ChannelTypes.JoinChannelResponse other) {
        if (other == bnet.protocol.channel.ChannelTypes.JoinChannelResponse.getDefaultInstance()) return this;
        if (other.hasObjectId()) {
          setObjectId(other.getObjectId());
        }
        if (other.hasRequireFriendValidation()) {
          setRequireFriendValidation(other.getRequireFriendValidation());
        }
        if (!other.privilegedAccount_.isEmpty()) {
          if (result.privilegedAccount_.isEmpty()) {
            result.privilegedAccount_ = new java.util.ArrayList<bnet.protocol.Entity.EntityId>();
          }
          result.privilegedAccount_.addAll(other.privilegedAccount_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setObjectId(input.readUInt64());
              break;
            }
            case 16: {
              setRequireFriendValidation(input.readBool());
              break;
            }
            case 26: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addPrivilegedAccount(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional uint64 object_id = 1;
      public boolean hasObjectId() {
        return result.hasObjectId();
      }
      public long getObjectId() {
        return result.getObjectId();
      }
      public Builder setObjectId(long value) {
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder clearObjectId() {
        result.hasObjectId = false;
        result.objectId_ = 0L;
        return this;
      }
      
      // optional bool require_friend_validation = 2;
      public boolean hasRequireFriendValidation() {
        return result.hasRequireFriendValidation();
      }
      public boolean getRequireFriendValidation() {
        return result.getRequireFriendValidation();
      }
      public Builder setRequireFriendValidation(boolean value) {
        result.hasRequireFriendValidation = true;
        result.requireFriendValidation_ = value;
        return this;
      }
      public Builder clearRequireFriendValidation() {
        result.hasRequireFriendValidation = false;
        result.requireFriendValidation_ = false;
        return this;
      }
      
      // repeated .bnet.protocol.EntityId privileged_account = 3;
      public java.util.List<bnet.protocol.Entity.EntityId> getPrivilegedAccountList() {
        return java.util.Collections.unmodifiableList(result.privilegedAccount_);
      }
      public int getPrivilegedAccountCount() {
        return result.getPrivilegedAccountCount();
      }
      public bnet.protocol.Entity.EntityId getPrivilegedAccount(int index) {
        return result.getPrivilegedAccount(index);
      }
      public Builder setPrivilegedAccount(int index, bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.privilegedAccount_.set(index, value);
        return this;
      }
      public Builder setPrivilegedAccount(int index, bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.privilegedAccount_.set(index, builderForValue.build());
        return this;
      }
      public Builder addPrivilegedAccount(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.privilegedAccount_.isEmpty()) {
          result.privilegedAccount_ = new java.util.ArrayList<bnet.protocol.Entity.EntityId>();
        }
        result.privilegedAccount_.add(value);
        return this;
      }
      public Builder addPrivilegedAccount(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        if (result.privilegedAccount_.isEmpty()) {
          result.privilegedAccount_ = new java.util.ArrayList<bnet.protocol.Entity.EntityId>();
        }
        result.privilegedAccount_.add(builderForValue.build());
        return this;
      }
      public Builder addAllPrivilegedAccount(
          java.lang.Iterable<? extends bnet.protocol.Entity.EntityId> values) {
        if (result.privilegedAccount_.isEmpty()) {
          result.privilegedAccount_ = new java.util.ArrayList<bnet.protocol.Entity.EntityId>();
        }
        super.addAll(values, result.privilegedAccount_);
        return this;
      }
      public Builder clearPrivilegedAccount() {
        result.privilegedAccount_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel.JoinChannelResponse)
    }
    
    static {
      defaultInstance = new JoinChannelResponse(true);
      bnet.protocol.channel.ChannelTypes.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel.JoinChannelResponse)
  }
  
  public static final class FindChannelRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use FindChannelRequest.newBuilder() to construct.
    private FindChannelRequest() {
      initFields();
    }
    private FindChannelRequest(boolean noInit) {}
    
    private static final FindChannelRequest defaultInstance;
    public static FindChannelRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public FindChannelRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel.ChannelTypes.internal_static_bnet_protocol_channel_FindChannelRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel.ChannelTypes.internal_static_bnet_protocol_channel_FindChannelRequest_fieldAccessorTable;
    }
    
    // required .bnet.protocol.attribute.AttributeFilter filter = 1;
    public static final int FILTER_FIELD_NUMBER = 1;
    private boolean hasFilter;
    private bnet.protocol.attribute.AttributeProto.AttributeFilter filter_;
    public boolean hasFilter() { return hasFilter; }
    public bnet.protocol.attribute.AttributeProto.AttributeFilter getFilter() { return filter_; }
    
    private void initFields() {
      filter_ = bnet.protocol.attribute.AttributeProto.AttributeFilter.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasFilter) return false;
      if (!getFilter().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasFilter()) {
        output.writeMessage(1, getFilter());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasFilter()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getFilter());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel.ChannelTypes.FindChannelRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.FindChannelRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.FindChannelRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.FindChannelRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.FindChannelRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.FindChannelRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.FindChannelRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.ChannelTypes.FindChannelRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.ChannelTypes.FindChannelRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.FindChannelRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel.ChannelTypes.FindChannelRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel.ChannelTypes.FindChannelRequest result;
      
      // Construct using bnet.protocol.channel.ChannelTypes.FindChannelRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel.ChannelTypes.FindChannelRequest();
        return builder;
      }
      
      protected bnet.protocol.channel.ChannelTypes.FindChannelRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel.ChannelTypes.FindChannelRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel.ChannelTypes.FindChannelRequest.getDescriptor();
      }
      
      public bnet.protocol.channel.ChannelTypes.FindChannelRequest getDefaultInstanceForType() {
        return bnet.protocol.channel.ChannelTypes.FindChannelRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel.ChannelTypes.FindChannelRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel.ChannelTypes.FindChannelRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel.ChannelTypes.FindChannelRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.channel.ChannelTypes.FindChannelRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel.ChannelTypes.FindChannelRequest) {
          return mergeFrom((bnet.protocol.channel.ChannelTypes.FindChannelRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel.ChannelTypes.FindChannelRequest other) {
        if (other == bnet.protocol.channel.ChannelTypes.FindChannelRequest.getDefaultInstance()) return this;
        if (other.hasFilter()) {
          mergeFilter(other.getFilter());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.attribute.AttributeProto.AttributeFilter.Builder subBuilder = bnet.protocol.attribute.AttributeProto.AttributeFilter.newBuilder();
              if (hasFilter()) {
                subBuilder.mergeFrom(getFilter());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFilter(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .bnet.protocol.attribute.AttributeFilter filter = 1;
      public boolean hasFilter() {
        return result.hasFilter();
      }
      public bnet.protocol.attribute.AttributeProto.AttributeFilter getFilter() {
        return result.getFilter();
      }
      public Builder setFilter(bnet.protocol.attribute.AttributeProto.AttributeFilter value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFilter = true;
        result.filter_ = value;
        return this;
      }
      public Builder setFilter(bnet.protocol.attribute.AttributeProto.AttributeFilter.Builder builderForValue) {
        result.hasFilter = true;
        result.filter_ = builderForValue.build();
        return this;
      }
      public Builder mergeFilter(bnet.protocol.attribute.AttributeProto.AttributeFilter value) {
        if (result.hasFilter() &&
            result.filter_ != bnet.protocol.attribute.AttributeProto.AttributeFilter.getDefaultInstance()) {
          result.filter_ =
            bnet.protocol.attribute.AttributeProto.AttributeFilter.newBuilder(result.filter_).mergeFrom(value).buildPartial();
        } else {
          result.filter_ = value;
        }
        result.hasFilter = true;
        return this;
      }
      public Builder clearFilter() {
        result.hasFilter = false;
        result.filter_ = bnet.protocol.attribute.AttributeProto.AttributeFilter.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel.FindChannelRequest)
    }
    
    static {
      defaultInstance = new FindChannelRequest(true);
      bnet.protocol.channel.ChannelTypes.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel.FindChannelRequest)
  }
  
  public static final class FindChannelResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use FindChannelResponse.newBuilder() to construct.
    private FindChannelResponse() {
      initFields();
    }
    private FindChannelResponse(boolean noInit) {}
    
    private static final FindChannelResponse defaultInstance;
    public static FindChannelResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public FindChannelResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel.ChannelTypes.internal_static_bnet_protocol_channel_FindChannelResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel.ChannelTypes.internal_static_bnet_protocol_channel_FindChannelResponse_fieldAccessorTable;
    }
    
    // repeated .bnet.protocol.channel.ChannelDescription channel = 1;
    public static final int CHANNEL_FIELD_NUMBER = 1;
    private java.util.List<bnet.protocol.channel.ChannelTypes.ChannelDescription> channel_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.channel.ChannelTypes.ChannelDescription> getChannelList() {
      return channel_;
    }
    public int getChannelCount() { return channel_.size(); }
    public bnet.protocol.channel.ChannelTypes.ChannelDescription getChannel(int index) {
      return channel_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (bnet.protocol.channel.ChannelTypes.ChannelDescription element : getChannelList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (bnet.protocol.channel.ChannelTypes.ChannelDescription element : getChannelList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (bnet.protocol.channel.ChannelTypes.ChannelDescription element : getChannelList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel.ChannelTypes.FindChannelResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.FindChannelResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.FindChannelResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.FindChannelResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.FindChannelResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.FindChannelResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.FindChannelResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.ChannelTypes.FindChannelResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.ChannelTypes.FindChannelResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.FindChannelResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel.ChannelTypes.FindChannelResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel.ChannelTypes.FindChannelResponse result;
      
      // Construct using bnet.protocol.channel.ChannelTypes.FindChannelResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel.ChannelTypes.FindChannelResponse();
        return builder;
      }
      
      protected bnet.protocol.channel.ChannelTypes.FindChannelResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel.ChannelTypes.FindChannelResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel.ChannelTypes.FindChannelResponse.getDescriptor();
      }
      
      public bnet.protocol.channel.ChannelTypes.FindChannelResponse getDefaultInstanceForType() {
        return bnet.protocol.channel.ChannelTypes.FindChannelResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel.ChannelTypes.FindChannelResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel.ChannelTypes.FindChannelResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel.ChannelTypes.FindChannelResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.channel_ != java.util.Collections.EMPTY_LIST) {
          result.channel_ =
            java.util.Collections.unmodifiableList(result.channel_);
        }
        bnet.protocol.channel.ChannelTypes.FindChannelResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel.ChannelTypes.FindChannelResponse) {
          return mergeFrom((bnet.protocol.channel.ChannelTypes.FindChannelResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel.ChannelTypes.FindChannelResponse other) {
        if (other == bnet.protocol.channel.ChannelTypes.FindChannelResponse.getDefaultInstance()) return this;
        if (!other.channel_.isEmpty()) {
          if (result.channel_.isEmpty()) {
            result.channel_ = new java.util.ArrayList<bnet.protocol.channel.ChannelTypes.ChannelDescription>();
          }
          result.channel_.addAll(other.channel_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.channel.ChannelTypes.ChannelDescription.Builder subBuilder = bnet.protocol.channel.ChannelTypes.ChannelDescription.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addChannel(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .bnet.protocol.channel.ChannelDescription channel = 1;
      public java.util.List<bnet.protocol.channel.ChannelTypes.ChannelDescription> getChannelList() {
        return java.util.Collections.unmodifiableList(result.channel_);
      }
      public int getChannelCount() {
        return result.getChannelCount();
      }
      public bnet.protocol.channel.ChannelTypes.ChannelDescription getChannel(int index) {
        return result.getChannel(index);
      }
      public Builder setChannel(int index, bnet.protocol.channel.ChannelTypes.ChannelDescription value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.channel_.set(index, value);
        return this;
      }
      public Builder setChannel(int index, bnet.protocol.channel.ChannelTypes.ChannelDescription.Builder builderForValue) {
        result.channel_.set(index, builderForValue.build());
        return this;
      }
      public Builder addChannel(bnet.protocol.channel.ChannelTypes.ChannelDescription value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.channel_.isEmpty()) {
          result.channel_ = new java.util.ArrayList<bnet.protocol.channel.ChannelTypes.ChannelDescription>();
        }
        result.channel_.add(value);
        return this;
      }
      public Builder addChannel(bnet.protocol.channel.ChannelTypes.ChannelDescription.Builder builderForValue) {
        if (result.channel_.isEmpty()) {
          result.channel_ = new java.util.ArrayList<bnet.protocol.channel.ChannelTypes.ChannelDescription>();
        }
        result.channel_.add(builderForValue.build());
        return this;
      }
      public Builder addAllChannel(
          java.lang.Iterable<? extends bnet.protocol.channel.ChannelTypes.ChannelDescription> values) {
        if (result.channel_.isEmpty()) {
          result.channel_ = new java.util.ArrayList<bnet.protocol.channel.ChannelTypes.ChannelDescription>();
        }
        super.addAll(values, result.channel_);
        return this;
      }
      public Builder clearChannel() {
        result.channel_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel.FindChannelResponse)
    }
    
    static {
      defaultInstance = new FindChannelResponse(true);
      bnet.protocol.channel.ChannelTypes.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel.FindChannelResponse)
  }
  
  public static final class ChannelState extends
      com.google.protobuf.GeneratedMessage {
    // Use ChannelState.newBuilder() to construct.
    private ChannelState() {
      initFields();
    }
    private ChannelState(boolean noInit) {}
    
    private static final ChannelState defaultInstance;
    public static ChannelState getDefaultInstance() {
      return defaultInstance;
    }
    
    public ChannelState getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel.ChannelTypes.internal_static_bnet_protocol_channel_ChannelState_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel.ChannelTypes.internal_static_bnet_protocol_channel_ChannelState_fieldAccessorTable;
    }
    
    public enum PrivacyLevel
        implements com.google.protobuf.ProtocolMessageEnum {
      PRIVACY_LEVEL_OPEN(0, 1),
      PRIVACY_LEVEL_OPEN_INVITATION_AND_FRIEND(1, 2),
      PRIVACY_LEVEL_OPEN_INVITATION(2, 3),
      PRIVACY_LEVEL_CLOSED(3, 4),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static PrivacyLevel valueOf(int value) {
        switch (value) {
          case 1: return PRIVACY_LEVEL_OPEN;
          case 2: return PRIVACY_LEVEL_OPEN_INVITATION_AND_FRIEND;
          case 3: return PRIVACY_LEVEL_OPEN_INVITATION;
          case 4: return PRIVACY_LEVEL_CLOSED;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<PrivacyLevel>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<PrivacyLevel>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<PrivacyLevel>() {
              public PrivacyLevel findValueByNumber(int number) {
                return PrivacyLevel.valueOf(number)
      ;        }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return bnet.protocol.channel.ChannelTypes.ChannelState.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final PrivacyLevel[] VALUES = {
        PRIVACY_LEVEL_OPEN, PRIVACY_LEVEL_OPEN_INVITATION_AND_FRIEND, PRIVACY_LEVEL_OPEN_INVITATION, PRIVACY_LEVEL_CLOSED, 
      };
      public static PrivacyLevel valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      private final int index;
      private final int value;
      private PrivacyLevel(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      static {
        bnet.protocol.channel.ChannelTypes.getDescriptor();
      }
      
      // @@protoc_insertion_point(enum_scope:bnet.protocol.channel.ChannelState.PrivacyLevel)
    }
    
    // optional uint32 max_members = 1;
    public static final int MAX_MEMBERS_FIELD_NUMBER = 1;
    private boolean hasMaxMembers;
    private int maxMembers_ = 0;
    public boolean hasMaxMembers() { return hasMaxMembers; }
    public int getMaxMembers() { return maxMembers_; }
    
    // optional uint32 min_members = 2;
    public static final int MIN_MEMBERS_FIELD_NUMBER = 2;
    private boolean hasMinMembers;
    private int minMembers_ = 0;
    public boolean hasMinMembers() { return hasMinMembers; }
    public int getMinMembers() { return minMembers_; }
    
    // repeated .bnet.protocol.attribute.Attribute attribute = 3;
    public static final int ATTRIBUTE_FIELD_NUMBER = 3;
    private java.util.List<bnet.protocol.attribute.AttributeProto.Attribute> attribute_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.attribute.AttributeProto.Attribute> getAttributeList() {
      return attribute_;
    }
    public int getAttributeCount() { return attribute_.size(); }
    public bnet.protocol.attribute.AttributeProto.Attribute getAttribute(int index) {
      return attribute_.get(index);
    }
    
    // repeated .bnet.protocol.invitation.Invitation invitation = 4;
    public static final int INVITATION_FIELD_NUMBER = 4;
    private java.util.List<bnet.protocol.invitation.InvitationProto.Invitation> invitation_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.invitation.InvitationProto.Invitation> getInvitationList() {
      return invitation_;
    }
    public int getInvitationCount() { return invitation_.size(); }
    public bnet.protocol.invitation.InvitationProto.Invitation getInvitation(int index) {
      return invitation_.get(index);
    }
    
    // optional uint32 max_invitations = 5;
    public static final int MAX_INVITATIONS_FIELD_NUMBER = 5;
    private boolean hasMaxInvitations;
    private int maxInvitations_ = 0;
    public boolean hasMaxInvitations() { return hasMaxInvitations; }
    public int getMaxInvitations() { return maxInvitations_; }
    
    // optional uint32 reason = 6;
    public static final int REASON_FIELD_NUMBER = 6;
    private boolean hasReason;
    private int reason_ = 0;
    public boolean hasReason() { return hasReason; }
    public int getReason() { return reason_; }
    
    // optional .bnet.protocol.channel.ChannelState.PrivacyLevel privacy_level = 7;
    public static final int PRIVACY_LEVEL_FIELD_NUMBER = 7;
    private boolean hasPrivacyLevel;
    private bnet.protocol.channel.ChannelTypes.ChannelState.PrivacyLevel privacyLevel_;
    public boolean hasPrivacyLevel() { return hasPrivacyLevel; }
    public bnet.protocol.channel.ChannelTypes.ChannelState.PrivacyLevel getPrivacyLevel() { return privacyLevel_; }
    
    // optional bool public = 8;
    public static final int PUBLIC_FIELD_NUMBER = 8;
    private boolean hasPublic;
    private boolean public_ = false;
    public boolean hasPublic() { return hasPublic; }
    public boolean getPublic() { return public_; }
    
    // optional string name = 9;
    public static final int NAME_FIELD_NUMBER = 9;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // optional string delegate_name = 10;
    public static final int DELEGATE_NAME_FIELD_NUMBER = 10;
    private boolean hasDelegateName;
    private java.lang.String delegateName_ = "";
    public boolean hasDelegateName() { return hasDelegateName; }
    public java.lang.String getDelegateName() { return delegateName_; }
    
    // optional string channel_type = 11;
    public static final int CHANNEL_TYPE_FIELD_NUMBER = 11;
    private boolean hasChannelType;
    private java.lang.String channelType_ = "";
    public boolean hasChannelType() { return hasChannelType; }
    public java.lang.String getChannelType() { return channelType_; }
    
    private void initFields() {
      privacyLevel_ = bnet.protocol.channel.ChannelTypes.ChannelState.PrivacyLevel.PRIVACY_LEVEL_OPEN;
    }
    public final boolean isInitialized() {
      for (bnet.protocol.attribute.AttributeProto.Attribute element : getAttributeList()) {
        if (!element.isInitialized()) return false;
      }
      for (bnet.protocol.invitation.InvitationProto.Invitation element : getInvitationList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasMaxMembers()) {
        output.writeUInt32(1, getMaxMembers());
      }
      if (hasMinMembers()) {
        output.writeUInt32(2, getMinMembers());
      }
      for (bnet.protocol.attribute.AttributeProto.Attribute element : getAttributeList()) {
        output.writeMessage(3, element);
      }
      for (bnet.protocol.invitation.InvitationProto.Invitation element : getInvitationList()) {
        output.writeMessage(4, element);
      }
      if (hasMaxInvitations()) {
        output.writeUInt32(5, getMaxInvitations());
      }
      if (hasReason()) {
        output.writeUInt32(6, getReason());
      }
      if (hasPrivacyLevel()) {
        output.writeEnum(7, getPrivacyLevel().getNumber());
      }
      if (hasPublic()) {
        output.writeBool(8, getPublic());
      }
      if (hasName()) {
        output.writeString(9, getName());
      }
      if (hasDelegateName()) {
        output.writeString(10, getDelegateName());
      }
      if (hasChannelType()) {
        output.writeString(11, getChannelType());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasMaxMembers()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getMaxMembers());
      }
      if (hasMinMembers()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getMinMembers());
      }
      for (bnet.protocol.attribute.AttributeProto.Attribute element : getAttributeList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, element);
      }
      for (bnet.protocol.invitation.InvitationProto.Invitation element : getInvitationList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, element);
      }
      if (hasMaxInvitations()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, getMaxInvitations());
      }
      if (hasReason()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, getReason());
      }
      if (hasPrivacyLevel()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, getPrivacyLevel().getNumber());
      }
      if (hasPublic()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, getPublic());
      }
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(9, getName());
      }
      if (hasDelegateName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(10, getDelegateName());
      }
      if (hasChannelType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(11, getChannelType());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel.ChannelTypes.ChannelState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.ChannelState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.ChannelState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.ChannelState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.ChannelState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.ChannelState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.ChannelState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.ChannelTypes.ChannelState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.ChannelTypes.ChannelState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.ChannelState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel.ChannelTypes.ChannelState prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel.ChannelTypes.ChannelState result;
      
      // Construct using bnet.protocol.channel.ChannelTypes.ChannelState.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel.ChannelTypes.ChannelState();
        return builder;
      }
      
      protected bnet.protocol.channel.ChannelTypes.ChannelState internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel.ChannelTypes.ChannelState();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel.ChannelTypes.ChannelState.getDescriptor();
      }
      
      public bnet.protocol.channel.ChannelTypes.ChannelState getDefaultInstanceForType() {
        return bnet.protocol.channel.ChannelTypes.ChannelState.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel.ChannelTypes.ChannelState build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel.ChannelTypes.ChannelState buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel.ChannelTypes.ChannelState buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.attribute_ != java.util.Collections.EMPTY_LIST) {
          result.attribute_ =
            java.util.Collections.unmodifiableList(result.attribute_);
        }
        if (result.invitation_ != java.util.Collections.EMPTY_LIST) {
          result.invitation_ =
            java.util.Collections.unmodifiableList(result.invitation_);
        }
        bnet.protocol.channel.ChannelTypes.ChannelState returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel.ChannelTypes.ChannelState) {
          return mergeFrom((bnet.protocol.channel.ChannelTypes.ChannelState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel.ChannelTypes.ChannelState other) {
        if (other == bnet.protocol.channel.ChannelTypes.ChannelState.getDefaultInstance()) return this;
        if (other.hasMaxMembers()) {
          setMaxMembers(other.getMaxMembers());
        }
        if (other.hasMinMembers()) {
          setMinMembers(other.getMinMembers());
        }
        if (!other.attribute_.isEmpty()) {
          if (result.attribute_.isEmpty()) {
            result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.AttributeProto.Attribute>();
          }
          result.attribute_.addAll(other.attribute_);
        }
        if (!other.invitation_.isEmpty()) {
          if (result.invitation_.isEmpty()) {
            result.invitation_ = new java.util.ArrayList<bnet.protocol.invitation.InvitationProto.Invitation>();
          }
          result.invitation_.addAll(other.invitation_);
        }
        if (other.hasMaxInvitations()) {
          setMaxInvitations(other.getMaxInvitations());
        }
        if (other.hasReason()) {
          setReason(other.getReason());
        }
        if (other.hasPrivacyLevel()) {
          setPrivacyLevel(other.getPrivacyLevel());
        }
        if (other.hasPublic()) {
          setPublic(other.getPublic());
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasDelegateName()) {
          setDelegateName(other.getDelegateName());
        }
        if (other.hasChannelType()) {
          setChannelType(other.getChannelType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setMaxMembers(input.readUInt32());
              break;
            }
            case 16: {
              setMinMembers(input.readUInt32());
              break;
            }
            case 26: {
              bnet.protocol.attribute.AttributeProto.Attribute.Builder subBuilder = bnet.protocol.attribute.AttributeProto.Attribute.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAttribute(subBuilder.buildPartial());
              break;
            }
            case 34: {
              bnet.protocol.invitation.InvitationProto.Invitation.Builder subBuilder = bnet.protocol.invitation.InvitationProto.Invitation.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addInvitation(subBuilder.buildPartial());
              break;
            }
            case 40: {
              setMaxInvitations(input.readUInt32());
              break;
            }
            case 48: {
              setReason(input.readUInt32());
              break;
            }
            case 56: {
              int rawValue = input.readEnum();
              bnet.protocol.channel.ChannelTypes.ChannelState.PrivacyLevel value = bnet.protocol.channel.ChannelTypes.ChannelState.PrivacyLevel.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(7, rawValue);
              } else {
                setPrivacyLevel(value);
              }
              break;
            }
            case 64: {
              setPublic(input.readBool());
              break;
            }
            case 74: {
              setName(input.readString());
              break;
            }
            case 82: {
              setDelegateName(input.readString());
              break;
            }
            case 90: {
              setChannelType(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 max_members = 1;
      public boolean hasMaxMembers() {
        return result.hasMaxMembers();
      }
      public int getMaxMembers() {
        return result.getMaxMembers();
      }
      public Builder setMaxMembers(int value) {
        result.hasMaxMembers = true;
        result.maxMembers_ = value;
        return this;
      }
      public Builder clearMaxMembers() {
        result.hasMaxMembers = false;
        result.maxMembers_ = 0;
        return this;
      }
      
      // optional uint32 min_members = 2;
      public boolean hasMinMembers() {
        return result.hasMinMembers();
      }
      public int getMinMembers() {
        return result.getMinMembers();
      }
      public Builder setMinMembers(int value) {
        result.hasMinMembers = true;
        result.minMembers_ = value;
        return this;
      }
      public Builder clearMinMembers() {
        result.hasMinMembers = false;
        result.minMembers_ = 0;
        return this;
      }
      
      // repeated .bnet.protocol.attribute.Attribute attribute = 3;
      public java.util.List<bnet.protocol.attribute.AttributeProto.Attribute> getAttributeList() {
        return java.util.Collections.unmodifiableList(result.attribute_);
      }
      public int getAttributeCount() {
        return result.getAttributeCount();
      }
      public bnet.protocol.attribute.AttributeProto.Attribute getAttribute(int index) {
        return result.getAttribute(index);
      }
      public Builder setAttribute(int index, bnet.protocol.attribute.AttributeProto.Attribute value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.attribute_.set(index, value);
        return this;
      }
      public Builder setAttribute(int index, bnet.protocol.attribute.AttributeProto.Attribute.Builder builderForValue) {
        result.attribute_.set(index, builderForValue.build());
        return this;
      }
      public Builder addAttribute(bnet.protocol.attribute.AttributeProto.Attribute value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.attribute_.isEmpty()) {
          result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.AttributeProto.Attribute>();
        }
        result.attribute_.add(value);
        return this;
      }
      public Builder addAttribute(bnet.protocol.attribute.AttributeProto.Attribute.Builder builderForValue) {
        if (result.attribute_.isEmpty()) {
          result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.AttributeProto.Attribute>();
        }
        result.attribute_.add(builderForValue.build());
        return this;
      }
      public Builder addAllAttribute(
          java.lang.Iterable<? extends bnet.protocol.attribute.AttributeProto.Attribute> values) {
        if (result.attribute_.isEmpty()) {
          result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.AttributeProto.Attribute>();
        }
        super.addAll(values, result.attribute_);
        return this;
      }
      public Builder clearAttribute() {
        result.attribute_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .bnet.protocol.invitation.Invitation invitation = 4;
      public java.util.List<bnet.protocol.invitation.InvitationProto.Invitation> getInvitationList() {
        return java.util.Collections.unmodifiableList(result.invitation_);
      }
      public int getInvitationCount() {
        return result.getInvitationCount();
      }
      public bnet.protocol.invitation.InvitationProto.Invitation getInvitation(int index) {
        return result.getInvitation(index);
      }
      public Builder setInvitation(int index, bnet.protocol.invitation.InvitationProto.Invitation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.invitation_.set(index, value);
        return this;
      }
      public Builder setInvitation(int index, bnet.protocol.invitation.InvitationProto.Invitation.Builder builderForValue) {
        result.invitation_.set(index, builderForValue.build());
        return this;
      }
      public Builder addInvitation(bnet.protocol.invitation.InvitationProto.Invitation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.invitation_.isEmpty()) {
          result.invitation_ = new java.util.ArrayList<bnet.protocol.invitation.InvitationProto.Invitation>();
        }
        result.invitation_.add(value);
        return this;
      }
      public Builder addInvitation(bnet.protocol.invitation.InvitationProto.Invitation.Builder builderForValue) {
        if (result.invitation_.isEmpty()) {
          result.invitation_ = new java.util.ArrayList<bnet.protocol.invitation.InvitationProto.Invitation>();
        }
        result.invitation_.add(builderForValue.build());
        return this;
      }
      public Builder addAllInvitation(
          java.lang.Iterable<? extends bnet.protocol.invitation.InvitationProto.Invitation> values) {
        if (result.invitation_.isEmpty()) {
          result.invitation_ = new java.util.ArrayList<bnet.protocol.invitation.InvitationProto.Invitation>();
        }
        super.addAll(values, result.invitation_);
        return this;
      }
      public Builder clearInvitation() {
        result.invitation_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional uint32 max_invitations = 5;
      public boolean hasMaxInvitations() {
        return result.hasMaxInvitations();
      }
      public int getMaxInvitations() {
        return result.getMaxInvitations();
      }
      public Builder setMaxInvitations(int value) {
        result.hasMaxInvitations = true;
        result.maxInvitations_ = value;
        return this;
      }
      public Builder clearMaxInvitations() {
        result.hasMaxInvitations = false;
        result.maxInvitations_ = 0;
        return this;
      }
      
      // optional uint32 reason = 6;
      public boolean hasReason() {
        return result.hasReason();
      }
      public int getReason() {
        return result.getReason();
      }
      public Builder setReason(int value) {
        result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder clearReason() {
        result.hasReason = false;
        result.reason_ = 0;
        return this;
      }
      
      // optional .bnet.protocol.channel.ChannelState.PrivacyLevel privacy_level = 7;
      public boolean hasPrivacyLevel() {
        return result.hasPrivacyLevel();
      }
      public bnet.protocol.channel.ChannelTypes.ChannelState.PrivacyLevel getPrivacyLevel() {
        return result.getPrivacyLevel();
      }
      public Builder setPrivacyLevel(bnet.protocol.channel.ChannelTypes.ChannelState.PrivacyLevel value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasPrivacyLevel = true;
        result.privacyLevel_ = value;
        return this;
      }
      public Builder clearPrivacyLevel() {
        result.hasPrivacyLevel = false;
        result.privacyLevel_ = bnet.protocol.channel.ChannelTypes.ChannelState.PrivacyLevel.PRIVACY_LEVEL_OPEN;
        return this;
      }
      
      // optional bool public = 8;
      public boolean hasPublic() {
        return result.hasPublic();
      }
      public boolean getPublic() {
        return result.getPublic();
      }
      public Builder setPublic(boolean value) {
        result.hasPublic = true;
        result.public_ = value;
        return this;
      }
      public Builder clearPublic() {
        result.hasPublic = false;
        result.public_ = false;
        return this;
      }
      
      // optional string name = 9;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // optional string delegate_name = 10;
      public boolean hasDelegateName() {
        return result.hasDelegateName();
      }
      public java.lang.String getDelegateName() {
        return result.getDelegateName();
      }
      public Builder setDelegateName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasDelegateName = true;
        result.delegateName_ = value;
        return this;
      }
      public Builder clearDelegateName() {
        result.hasDelegateName = false;
        result.delegateName_ = getDefaultInstance().getDelegateName();
        return this;
      }
      
      // optional string channel_type = 11;
      public boolean hasChannelType() {
        return result.hasChannelType();
      }
      public java.lang.String getChannelType() {
        return result.getChannelType();
      }
      public Builder setChannelType(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasChannelType = true;
        result.channelType_ = value;
        return this;
      }
      public Builder clearChannelType() {
        result.hasChannelType = false;
        result.channelType_ = getDefaultInstance().getChannelType();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel.ChannelState)
    }
    
    static {
      defaultInstance = new ChannelState(true);
      bnet.protocol.channel.ChannelTypes.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel.ChannelState)
  }
  
  public static final class MemberState extends
      com.google.protobuf.GeneratedMessage {
    // Use MemberState.newBuilder() to construct.
    private MemberState() {
      initFields();
    }
    private MemberState(boolean noInit) {}
    
    private static final MemberState defaultInstance;
    public static MemberState getDefaultInstance() {
      return defaultInstance;
    }
    
    public MemberState getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel.ChannelTypes.internal_static_bnet_protocol_channel_MemberState_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel.ChannelTypes.internal_static_bnet_protocol_channel_MemberState_fieldAccessorTable;
    }
    
    // repeated .bnet.protocol.attribute.Attribute attribute = 1;
    public static final int ATTRIBUTE_FIELD_NUMBER = 1;
    private java.util.List<bnet.protocol.attribute.AttributeProto.Attribute> attribute_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.attribute.AttributeProto.Attribute> getAttributeList() {
      return attribute_;
    }
    public int getAttributeCount() { return attribute_.size(); }
    public bnet.protocol.attribute.AttributeProto.Attribute getAttribute(int index) {
      return attribute_.get(index);
    }
    
    // repeated uint32 role = 2;
    public static final int ROLE_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> role_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getRoleList() {
      return role_;
    }
    public int getRoleCount() { return role_.size(); }
    public int getRole(int index) {
      return role_.get(index);
    }
    
    // optional uint64 privileges = 3;
    public static final int PRIVILEGES_FIELD_NUMBER = 3;
    private boolean hasPrivileges;
    private long privileges_ = 0L;
    public boolean hasPrivileges() { return hasPrivileges; }
    public long getPrivileges() { return privileges_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (bnet.protocol.attribute.AttributeProto.Attribute element : getAttributeList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (bnet.protocol.attribute.AttributeProto.Attribute element : getAttributeList()) {
        output.writeMessage(1, element);
      }
      for (int element : getRoleList()) {
        output.writeUInt32(2, element);
      }
      if (hasPrivileges()) {
        output.writeUInt64(3, getPrivileges());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (bnet.protocol.attribute.AttributeProto.Attribute element : getAttributeList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      {
        int dataSize = 0;
        for (int element : getRoleList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getRoleList().size();
      }
      if (hasPrivileges()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, getPrivileges());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel.ChannelTypes.MemberState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.MemberState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.MemberState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.MemberState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.MemberState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.MemberState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.MemberState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.ChannelTypes.MemberState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.ChannelTypes.MemberState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.MemberState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel.ChannelTypes.MemberState prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel.ChannelTypes.MemberState result;
      
      // Construct using bnet.protocol.channel.ChannelTypes.MemberState.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel.ChannelTypes.MemberState();
        return builder;
      }
      
      protected bnet.protocol.channel.ChannelTypes.MemberState internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel.ChannelTypes.MemberState();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel.ChannelTypes.MemberState.getDescriptor();
      }
      
      public bnet.protocol.channel.ChannelTypes.MemberState getDefaultInstanceForType() {
        return bnet.protocol.channel.ChannelTypes.MemberState.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel.ChannelTypes.MemberState build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel.ChannelTypes.MemberState buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel.ChannelTypes.MemberState buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.attribute_ != java.util.Collections.EMPTY_LIST) {
          result.attribute_ =
            java.util.Collections.unmodifiableList(result.attribute_);
        }
        if (result.role_ != java.util.Collections.EMPTY_LIST) {
          result.role_ =
            java.util.Collections.unmodifiableList(result.role_);
        }
        bnet.protocol.channel.ChannelTypes.MemberState returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel.ChannelTypes.MemberState) {
          return mergeFrom((bnet.protocol.channel.ChannelTypes.MemberState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel.ChannelTypes.MemberState other) {
        if (other == bnet.protocol.channel.ChannelTypes.MemberState.getDefaultInstance()) return this;
        if (!other.attribute_.isEmpty()) {
          if (result.attribute_.isEmpty()) {
            result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.AttributeProto.Attribute>();
          }
          result.attribute_.addAll(other.attribute_);
        }
        if (!other.role_.isEmpty()) {
          if (result.role_.isEmpty()) {
            result.role_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.role_.addAll(other.role_);
        }
        if (other.hasPrivileges()) {
          setPrivileges(other.getPrivileges());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.attribute.AttributeProto.Attribute.Builder subBuilder = bnet.protocol.attribute.AttributeProto.Attribute.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAttribute(subBuilder.buildPartial());
              break;
            }
            case 16: {
              addRole(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addRole(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              setPrivileges(input.readUInt64());
              break;
            }
          }
        }
      }
      
      
      // repeated .bnet.protocol.attribute.Attribute attribute = 1;
      public java.util.List<bnet.protocol.attribute.AttributeProto.Attribute> getAttributeList() {
        return java.util.Collections.unmodifiableList(result.attribute_);
      }
      public int getAttributeCount() {
        return result.getAttributeCount();
      }
      public bnet.protocol.attribute.AttributeProto.Attribute getAttribute(int index) {
        return result.getAttribute(index);
      }
      public Builder setAttribute(int index, bnet.protocol.attribute.AttributeProto.Attribute value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.attribute_.set(index, value);
        return this;
      }
      public Builder setAttribute(int index, bnet.protocol.attribute.AttributeProto.Attribute.Builder builderForValue) {
        result.attribute_.set(index, builderForValue.build());
        return this;
      }
      public Builder addAttribute(bnet.protocol.attribute.AttributeProto.Attribute value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.attribute_.isEmpty()) {
          result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.AttributeProto.Attribute>();
        }
        result.attribute_.add(value);
        return this;
      }
      public Builder addAttribute(bnet.protocol.attribute.AttributeProto.Attribute.Builder builderForValue) {
        if (result.attribute_.isEmpty()) {
          result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.AttributeProto.Attribute>();
        }
        result.attribute_.add(builderForValue.build());
        return this;
      }
      public Builder addAllAttribute(
          java.lang.Iterable<? extends bnet.protocol.attribute.AttributeProto.Attribute> values) {
        if (result.attribute_.isEmpty()) {
          result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.AttributeProto.Attribute>();
        }
        super.addAll(values, result.attribute_);
        return this;
      }
      public Builder clearAttribute() {
        result.attribute_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated uint32 role = 2;
      public java.util.List<java.lang.Integer> getRoleList() {
        return java.util.Collections.unmodifiableList(result.role_);
      }
      public int getRoleCount() {
        return result.getRoleCount();
      }
      public int getRole(int index) {
        return result.getRole(index);
      }
      public Builder setRole(int index, int value) {
        result.role_.set(index, value);
        return this;
      }
      public Builder addRole(int value) {
        if (result.role_.isEmpty()) {
          result.role_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.role_.add(value);
        return this;
      }
      public Builder addAllRole(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.role_.isEmpty()) {
          result.role_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.role_);
        return this;
      }
      public Builder clearRole() {
        result.role_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional uint64 privileges = 3;
      public boolean hasPrivileges() {
        return result.hasPrivileges();
      }
      public long getPrivileges() {
        return result.getPrivileges();
      }
      public Builder setPrivileges(long value) {
        result.hasPrivileges = true;
        result.privileges_ = value;
        return this;
      }
      public Builder clearPrivileges() {
        result.hasPrivileges = false;
        result.privileges_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel.MemberState)
    }
    
    static {
      defaultInstance = new MemberState(true);
      bnet.protocol.channel.ChannelTypes.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel.MemberState)
  }
  
  public static final class Member extends
      com.google.protobuf.GeneratedMessage {
    // Use Member.newBuilder() to construct.
    private Member() {
      initFields();
    }
    private Member(boolean noInit) {}
    
    private static final Member defaultInstance;
    public static Member getDefaultInstance() {
      return defaultInstance;
    }
    
    public Member getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel.ChannelTypes.internal_static_bnet_protocol_channel_Member_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel.ChannelTypes.internal_static_bnet_protocol_channel_Member_fieldAccessorTable;
    }
    
    // required .bnet.protocol.Identity identity = 1;
    public static final int IDENTITY_FIELD_NUMBER = 1;
    private boolean hasIdentity;
    private bnet.protocol.Entity.Identity identity_;
    public boolean hasIdentity() { return hasIdentity; }
    public bnet.protocol.Entity.Identity getIdentity() { return identity_; }
    
    // required .bnet.protocol.channel.MemberState state = 2;
    public static final int STATE_FIELD_NUMBER = 2;
    private boolean hasState;
    private bnet.protocol.channel.ChannelTypes.MemberState state_;
    public boolean hasState() { return hasState; }
    public bnet.protocol.channel.ChannelTypes.MemberState getState() { return state_; }
    
    private void initFields() {
      identity_ = bnet.protocol.Entity.Identity.getDefaultInstance();
      state_ = bnet.protocol.channel.ChannelTypes.MemberState.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasIdentity) return false;
      if (!hasState) return false;
      if (!getIdentity().isInitialized()) return false;
      if (!getState().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasIdentity()) {
        output.writeMessage(1, getIdentity());
      }
      if (hasState()) {
        output.writeMessage(2, getState());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasIdentity()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getIdentity());
      }
      if (hasState()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getState());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel.ChannelTypes.Member parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.Member parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.Member parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.Member parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.Member parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.Member parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.Member parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.ChannelTypes.Member parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.ChannelTypes.Member parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.ChannelTypes.Member parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel.ChannelTypes.Member prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel.ChannelTypes.Member result;
      
      // Construct using bnet.protocol.channel.ChannelTypes.Member.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel.ChannelTypes.Member();
        return builder;
      }
      
      protected bnet.protocol.channel.ChannelTypes.Member internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel.ChannelTypes.Member();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel.ChannelTypes.Member.getDescriptor();
      }
      
      public bnet.protocol.channel.ChannelTypes.Member getDefaultInstanceForType() {
        return bnet.protocol.channel.ChannelTypes.Member.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel.ChannelTypes.Member build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel.ChannelTypes.Member buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel.ChannelTypes.Member buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.channel.ChannelTypes.Member returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel.ChannelTypes.Member) {
          return mergeFrom((bnet.protocol.channel.ChannelTypes.Member)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel.ChannelTypes.Member other) {
        if (other == bnet.protocol.channel.ChannelTypes.Member.getDefaultInstance()) return this;
        if (other.hasIdentity()) {
          mergeIdentity(other.getIdentity());
        }
        if (other.hasState()) {
          mergeState(other.getState());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Entity.Identity.Builder subBuilder = bnet.protocol.Entity.Identity.newBuilder();
              if (hasIdentity()) {
                subBuilder.mergeFrom(getIdentity());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setIdentity(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bnet.protocol.channel.ChannelTypes.MemberState.Builder subBuilder = bnet.protocol.channel.ChannelTypes.MemberState.newBuilder();
              if (hasState()) {
                subBuilder.mergeFrom(getState());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setState(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .bnet.protocol.Identity identity = 1;
      public boolean hasIdentity() {
        return result.hasIdentity();
      }
      public bnet.protocol.Entity.Identity getIdentity() {
        return result.getIdentity();
      }
      public Builder setIdentity(bnet.protocol.Entity.Identity value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasIdentity = true;
        result.identity_ = value;
        return this;
      }
      public Builder setIdentity(bnet.protocol.Entity.Identity.Builder builderForValue) {
        result.hasIdentity = true;
        result.identity_ = builderForValue.build();
        return this;
      }
      public Builder mergeIdentity(bnet.protocol.Entity.Identity value) {
        if (result.hasIdentity() &&
            result.identity_ != bnet.protocol.Entity.Identity.getDefaultInstance()) {
          result.identity_ =
            bnet.protocol.Entity.Identity.newBuilder(result.identity_).mergeFrom(value).buildPartial();
        } else {
          result.identity_ = value;
        }
        result.hasIdentity = true;
        return this;
      }
      public Builder clearIdentity() {
        result.hasIdentity = false;
        result.identity_ = bnet.protocol.Entity.Identity.getDefaultInstance();
        return this;
      }
      
      // required .bnet.protocol.channel.MemberState state = 2;
      public boolean hasState() {
        return result.hasState();
      }
      public bnet.protocol.channel.ChannelTypes.MemberState getState() {
        return result.getState();
      }
      public Builder setState(bnet.protocol.channel.ChannelTypes.MemberState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasState = true;
        result.state_ = value;
        return this;
      }
      public Builder setState(bnet.protocol.channel.ChannelTypes.MemberState.Builder builderForValue) {
        result.hasState = true;
        result.state_ = builderForValue.build();
        return this;
      }
      public Builder mergeState(bnet.protocol.channel.ChannelTypes.MemberState value) {
        if (result.hasState() &&
            result.state_ != bnet.protocol.channel.ChannelTypes.MemberState.getDefaultInstance()) {
          result.state_ =
            bnet.protocol.channel.ChannelTypes.MemberState.newBuilder(result.state_).mergeFrom(value).buildPartial();
        } else {
          result.state_ = value;
        }
        result.hasState = true;
        return this;
      }
      public Builder clearState() {
        result.hasState = false;
        result.state_ = bnet.protocol.channel.ChannelTypes.MemberState.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel.Member)
    }
    
    static {
      defaultInstance = new Member(true);
      bnet.protocol.channel.ChannelTypes.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel.Member)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_Message_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_Message_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_ChannelDescription_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_ChannelDescription_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_ChannelInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_ChannelInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_GetChannelInfoRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_GetChannelInfoRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_GetChannelInfoResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_GetChannelInfoResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_GetChannelIdRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_GetChannelIdRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_GetChannelIdResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_GetChannelIdResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_CreateChannelRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_CreateChannelRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_CreateChannelResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_CreateChannelResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_JoinChannelRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_JoinChannelRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_JoinChannelResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_JoinChannelResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_FindChannelRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_FindChannelRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_FindChannelResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_FindChannelResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_ChannelState_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_ChannelState_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_MemberState_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_MemberState_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_Member_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_Member_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n#service/channel/channel_types.proto\022\025b" +
      "net.protocol.channel\032\034lib/protocol/attri" +
      "bute.proto\032\031lib/protocol/entity.proto\032\035l" +
      "ib/protocol/invitation.proto\"N\n\007Message\022" +
      "5\n\tattribute\030\001 \003(\0132\".bnet.protocol.attri" +
      "bute.Attribute\022\014\n\004role\030\002 \001(\r\"\216\001\n\022Channel" +
      "Description\022+\n\nchannel_id\030\001 \002(\0132\027.bnet.p" +
      "rotocol.EntityId\022\027\n\017current_members\030\002 \001(" +
      "\r\0222\n\005state\030\003 \001(\0132#.bnet.protocol.channel" +
      ".ChannelState\"|\n\013ChannelInfo\022>\n\013descript",
      "ion\030\001 \002(\0132).bnet.protocol.channel.Channe" +
      "lDescription\022-\n\006member\030\002 \003(\0132\035.bnet.prot" +
      "ocol.channel.Member\"o\n\025GetChannelInfoReq" +
      "uest\022)\n\010agent_id\030\001 \001(\0132\027.bnet.protocol.E" +
      "ntityId\022+\n\nchannel_id\030\002 \002(\0132\027.bnet.proto" +
      "col.EntityId\"R\n\026GetChannelInfoResponse\0228" +
      "\n\014channel_info\030\001 \001(\0132\".bnet.protocol.cha" +
      "nnel.ChannelInfo\"\025\n\023GetChannelIdRequest\"" +
      "C\n\024GetChannelIdResponse\022+\n\nchannel_id\030\001 " +
      "\001(\0132\027.bnet.protocol.EntityId\"\273\001\n\024CreateC",
      "hannelRequest\022/\n\016agent_identity\030\001 \001(\0132\027." +
      "bnet.protocol.Identity\0222\n\005state\030\002 \001(\0132#." +
      "bnet.protocol.channel.ChannelState\022+\n\nch" +
      "annel_id\030\003 \001(\0132\027.bnet.protocol.EntityId\022" +
      "\021\n\tobject_id\030\004 \001(\004\"W\n\025CreateChannelRespo" +
      "nse\022\021\n\tobject_id\030\001 \002(\004\022+\n\nchannel_id\030\002 \001" +
      "(\0132\027.bnet.protocol.EntityId\"\271\001\n\022JoinChan" +
      "nelRequest\022/\n\016agent_identity\030\001 \001(\0132\027.bne" +
      "t.protocol.Identity\022+\n\nchannel_id\030\002 \002(\0132" +
      "\027.bnet.protocol.EntityId\022\021\n\tobject_id\030\003 ",
      "\002(\004\0222\n\021friend_account_id\030\004 \003(\0132\027.bnet.pr" +
      "otocol.EntityId\"\200\001\n\023JoinChannelResponse\022" +
      "\021\n\tobject_id\030\001 \001(\004\022!\n\031require_friend_val" +
      "idation\030\002 \001(\010\0223\n\022privileged_account\030\003 \003(" +
      "\0132\027.bnet.protocol.EntityId\"N\n\022FindChanne" +
      "lRequest\0228\n\006filter\030\001 \002(\0132(.bnet.protocol" +
      ".attribute.AttributeFilter\"Q\n\023FindChanne" +
      "lResponse\022:\n\007channel\030\001 \003(\0132).bnet.protoc" +
      "ol.channel.ChannelDescription\"\372\003\n\014Channe" +
      "lState\022\023\n\013max_members\030\001 \001(\r\022\023\n\013min_membe",
      "rs\030\002 \001(\r\0225\n\tattribute\030\003 \003(\0132\".bnet.proto" +
      "col.attribute.Attribute\0228\n\ninvitation\030\004 " +
      "\003(\0132$.bnet.protocol.invitation.Invitatio" +
      "n\022\027\n\017max_invitations\030\005 \001(\r\022\016\n\006reason\030\006 \001" +
      "(\r\022G\n\rprivacy_level\030\007 \001(\01620.bnet.protoco" +
      "l.channel.ChannelState.PrivacyLevel\022\016\n\006p" +
      "ublic\030\010 \001(\010\022\014\n\004name\030\t \001(\t\022\025\n\rdelegate_na" +
      "me\030\n \001(\t\022\024\n\014channel_type\030\013 \001(\t\"\221\001\n\014Priva" +
      "cyLevel\022\026\n\022PRIVACY_LEVEL_OPEN\020\001\022,\n(PRIVA" +
      "CY_LEVEL_OPEN_INVITATION_AND_FRIEND\020\002\022!\n",
      "\035PRIVACY_LEVEL_OPEN_INVITATION\020\003\022\030\n\024PRIV" +
      "ACY_LEVEL_CLOSED\020\004\"f\n\013MemberState\0225\n\tatt" +
      "ribute\030\001 \003(\0132\".bnet.protocol.attribute.A" +
      "ttribute\022\014\n\004role\030\002 \003(\r\022\022\n\nprivileges\030\003 \001" +
      "(\004\"f\n\006Member\022)\n\010identity\030\001 \002(\0132\027.bnet.pr" +
      "otocol.Identity\0221\n\005state\030\002 \002(\0132\".bnet.pr" +
      "otocol.channel.MemberState"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_bnet_protocol_channel_Message_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_bnet_protocol_channel_Message_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_Message_descriptor,
              new java.lang.String[] { "Attribute", "Role", },
              bnet.protocol.channel.ChannelTypes.Message.class,
              bnet.protocol.channel.ChannelTypes.Message.Builder.class);
          internal_static_bnet_protocol_channel_ChannelDescription_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_bnet_protocol_channel_ChannelDescription_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_ChannelDescription_descriptor,
              new java.lang.String[] { "ChannelId", "CurrentMembers", "State", },
              bnet.protocol.channel.ChannelTypes.ChannelDescription.class,
              bnet.protocol.channel.ChannelTypes.ChannelDescription.Builder.class);
          internal_static_bnet_protocol_channel_ChannelInfo_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_bnet_protocol_channel_ChannelInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_ChannelInfo_descriptor,
              new java.lang.String[] { "Description", "Member", },
              bnet.protocol.channel.ChannelTypes.ChannelInfo.class,
              bnet.protocol.channel.ChannelTypes.ChannelInfo.Builder.class);
          internal_static_bnet_protocol_channel_GetChannelInfoRequest_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_bnet_protocol_channel_GetChannelInfoRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_GetChannelInfoRequest_descriptor,
              new java.lang.String[] { "AgentId", "ChannelId", },
              bnet.protocol.channel.ChannelTypes.GetChannelInfoRequest.class,
              bnet.protocol.channel.ChannelTypes.GetChannelInfoRequest.Builder.class);
          internal_static_bnet_protocol_channel_GetChannelInfoResponse_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_bnet_protocol_channel_GetChannelInfoResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_GetChannelInfoResponse_descriptor,
              new java.lang.String[] { "ChannelInfo", },
              bnet.protocol.channel.ChannelTypes.GetChannelInfoResponse.class,
              bnet.protocol.channel.ChannelTypes.GetChannelInfoResponse.Builder.class);
          internal_static_bnet_protocol_channel_GetChannelIdRequest_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_bnet_protocol_channel_GetChannelIdRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_GetChannelIdRequest_descriptor,
              new java.lang.String[] { },
              bnet.protocol.channel.ChannelTypes.GetChannelIdRequest.class,
              bnet.protocol.channel.ChannelTypes.GetChannelIdRequest.Builder.class);
          internal_static_bnet_protocol_channel_GetChannelIdResponse_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_bnet_protocol_channel_GetChannelIdResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_GetChannelIdResponse_descriptor,
              new java.lang.String[] { "ChannelId", },
              bnet.protocol.channel.ChannelTypes.GetChannelIdResponse.class,
              bnet.protocol.channel.ChannelTypes.GetChannelIdResponse.Builder.class);
          internal_static_bnet_protocol_channel_CreateChannelRequest_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_bnet_protocol_channel_CreateChannelRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_CreateChannelRequest_descriptor,
              new java.lang.String[] { "AgentIdentity", "State", "ChannelId", "ObjectId", },
              bnet.protocol.channel.ChannelTypes.CreateChannelRequest.class,
              bnet.protocol.channel.ChannelTypes.CreateChannelRequest.Builder.class);
          internal_static_bnet_protocol_channel_CreateChannelResponse_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_bnet_protocol_channel_CreateChannelResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_CreateChannelResponse_descriptor,
              new java.lang.String[] { "ObjectId", "ChannelId", },
              bnet.protocol.channel.ChannelTypes.CreateChannelResponse.class,
              bnet.protocol.channel.ChannelTypes.CreateChannelResponse.Builder.class);
          internal_static_bnet_protocol_channel_JoinChannelRequest_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_bnet_protocol_channel_JoinChannelRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_JoinChannelRequest_descriptor,
              new java.lang.String[] { "AgentIdentity", "ChannelId", "ObjectId", "FriendAccountId", },
              bnet.protocol.channel.ChannelTypes.JoinChannelRequest.class,
              bnet.protocol.channel.ChannelTypes.JoinChannelRequest.Builder.class);
          internal_static_bnet_protocol_channel_JoinChannelResponse_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_bnet_protocol_channel_JoinChannelResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_JoinChannelResponse_descriptor,
              new java.lang.String[] { "ObjectId", "RequireFriendValidation", "PrivilegedAccount", },
              bnet.protocol.channel.ChannelTypes.JoinChannelResponse.class,
              bnet.protocol.channel.ChannelTypes.JoinChannelResponse.Builder.class);
          internal_static_bnet_protocol_channel_FindChannelRequest_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_bnet_protocol_channel_FindChannelRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_FindChannelRequest_descriptor,
              new java.lang.String[] { "Filter", },
              bnet.protocol.channel.ChannelTypes.FindChannelRequest.class,
              bnet.protocol.channel.ChannelTypes.FindChannelRequest.Builder.class);
          internal_static_bnet_protocol_channel_FindChannelResponse_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_bnet_protocol_channel_FindChannelResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_FindChannelResponse_descriptor,
              new java.lang.String[] { "Channel", },
              bnet.protocol.channel.ChannelTypes.FindChannelResponse.class,
              bnet.protocol.channel.ChannelTypes.FindChannelResponse.Builder.class);
          internal_static_bnet_protocol_channel_ChannelState_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_bnet_protocol_channel_ChannelState_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_ChannelState_descriptor,
              new java.lang.String[] { "MaxMembers", "MinMembers", "Attribute", "Invitation", "MaxInvitations", "Reason", "PrivacyLevel", "Public", "Name", "DelegateName", "ChannelType", },
              bnet.protocol.channel.ChannelTypes.ChannelState.class,
              bnet.protocol.channel.ChannelTypes.ChannelState.Builder.class);
          internal_static_bnet_protocol_channel_MemberState_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_bnet_protocol_channel_MemberState_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_MemberState_descriptor,
              new java.lang.String[] { "Attribute", "Role", "Privileges", },
              bnet.protocol.channel.ChannelTypes.MemberState.class,
              bnet.protocol.channel.ChannelTypes.MemberState.Builder.class);
          internal_static_bnet_protocol_channel_Member_descriptor =
            getDescriptor().getMessageTypes().get(15);
          internal_static_bnet_protocol_channel_Member_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_Member_descriptor,
              new java.lang.String[] { "Identity", "State", },
              bnet.protocol.channel.ChannelTypes.Member.class,
              bnet.protocol.channel.ChannelTypes.Member.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          bnet.protocol.attribute.AttributeProto.getDescriptor(),
          bnet.protocol.Entity.getDescriptor(),
          bnet.protocol.invitation.InvitationProto.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
