// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service/channel/definition/channel.proto

package bnet.protocol.channel;

public final class Channel {
  private Channel() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class AddMemberRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use AddMemberRequest.newBuilder() to construct.
    private AddMemberRequest() {
      initFields();
    }
    private AddMemberRequest(boolean noInit) {}
    
    private static final AddMemberRequest defaultInstance;
    public static AddMemberRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public AddMemberRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel.Channel.internal_static_bnet_protocol_channel_AddMemberRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel.Channel.internal_static_bnet_protocol_channel_AddMemberRequest_fieldAccessorTable;
    }
    
    // optional .bnet.protocol.EntityId agent_id = 1;
    public static final int AGENT_ID_FIELD_NUMBER = 1;
    private boolean hasAgentId;
    private bnet.protocol.Entity.EntityId agentId_;
    public boolean hasAgentId() { return hasAgentId; }
    public bnet.protocol.Entity.EntityId getAgentId() { return agentId_; }
    
    // required .bnet.protocol.Identity member_identity = 2;
    public static final int MEMBER_IDENTITY_FIELD_NUMBER = 2;
    private boolean hasMemberIdentity;
    private bnet.protocol.Entity.Identity memberIdentity_;
    public boolean hasMemberIdentity() { return hasMemberIdentity; }
    public bnet.protocol.Entity.Identity getMemberIdentity() { return memberIdentity_; }
    
    // required .bnet.protocol.channel.MemberState state = 3;
    public static final int STATE_FIELD_NUMBER = 3;
    private boolean hasState;
    private bnet.protocol.channel.ChannelTypes.MemberState state_;
    public boolean hasState() { return hasState; }
    public bnet.protocol.channel.ChannelTypes.MemberState getState() { return state_; }
    
    // required uint64 object_id = 4;
    public static final int OBJECT_ID_FIELD_NUMBER = 4;
    private boolean hasObjectId;
    private long objectId_ = 0L;
    public boolean hasObjectId() { return hasObjectId; }
    public long getObjectId() { return objectId_; }
    
    private void initFields() {
      agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
      memberIdentity_ = bnet.protocol.Entity.Identity.getDefaultInstance();
      state_ = bnet.protocol.channel.ChannelTypes.MemberState.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasMemberIdentity) return false;
      if (!hasState) return false;
      if (!hasObjectId) return false;
      if (hasAgentId()) {
        if (!getAgentId().isInitialized()) return false;
      }
      if (!getMemberIdentity().isInitialized()) return false;
      if (!getState().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAgentId()) {
        output.writeMessage(1, getAgentId());
      }
      if (hasMemberIdentity()) {
        output.writeMessage(2, getMemberIdentity());
      }
      if (hasState()) {
        output.writeMessage(3, getState());
      }
      if (hasObjectId()) {
        output.writeUInt64(4, getObjectId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAgentId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAgentId());
      }
      if (hasMemberIdentity()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getMemberIdentity());
      }
      if (hasState()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getState());
      }
      if (hasObjectId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, getObjectId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel.Channel.AddMemberRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.Channel.AddMemberRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.Channel.AddMemberRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.Channel.AddMemberRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.Channel.AddMemberRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.Channel.AddMemberRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.Channel.AddMemberRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.Channel.AddMemberRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.Channel.AddMemberRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.Channel.AddMemberRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel.Channel.AddMemberRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel.Channel.AddMemberRequest result;
      
      // Construct using bnet.protocol.channel.Channel.AddMemberRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel.Channel.AddMemberRequest();
        return builder;
      }
      
      protected bnet.protocol.channel.Channel.AddMemberRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel.Channel.AddMemberRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel.Channel.AddMemberRequest.getDescriptor();
      }
      
      public bnet.protocol.channel.Channel.AddMemberRequest getDefaultInstanceForType() {
        return bnet.protocol.channel.Channel.AddMemberRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel.Channel.AddMemberRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel.Channel.AddMemberRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel.Channel.AddMemberRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.channel.Channel.AddMemberRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel.Channel.AddMemberRequest) {
          return mergeFrom((bnet.protocol.channel.Channel.AddMemberRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel.Channel.AddMemberRequest other) {
        if (other == bnet.protocol.channel.Channel.AddMemberRequest.getDefaultInstance()) return this;
        if (other.hasAgentId()) {
          mergeAgentId(other.getAgentId());
        }
        if (other.hasMemberIdentity()) {
          mergeMemberIdentity(other.getMemberIdentity());
        }
        if (other.hasState()) {
          mergeState(other.getState());
        }
        if (other.hasObjectId()) {
          setObjectId(other.getObjectId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasAgentId()) {
                subBuilder.mergeFrom(getAgentId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAgentId(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bnet.protocol.Entity.Identity.Builder subBuilder = bnet.protocol.Entity.Identity.newBuilder();
              if (hasMemberIdentity()) {
                subBuilder.mergeFrom(getMemberIdentity());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMemberIdentity(subBuilder.buildPartial());
              break;
            }
            case 26: {
              bnet.protocol.channel.ChannelTypes.MemberState.Builder subBuilder = bnet.protocol.channel.ChannelTypes.MemberState.newBuilder();
              if (hasState()) {
                subBuilder.mergeFrom(getState());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setState(subBuilder.buildPartial());
              break;
            }
            case 32: {
              setObjectId(input.readUInt64());
              break;
            }
          }
        }
      }
      
      
      // optional .bnet.protocol.EntityId agent_id = 1;
      public boolean hasAgentId() {
        return result.hasAgentId();
      }
      public bnet.protocol.Entity.EntityId getAgentId() {
        return result.getAgentId();
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasAgentId = true;
        result.agentId_ = builderForValue.build();
        return this;
      }
      public Builder mergeAgentId(bnet.protocol.Entity.EntityId value) {
        if (result.hasAgentId() &&
            result.agentId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.agentId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.agentId_).mergeFrom(value).buildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder clearAgentId() {
        result.hasAgentId = false;
        result.agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // required .bnet.protocol.Identity member_identity = 2;
      public boolean hasMemberIdentity() {
        return result.hasMemberIdentity();
      }
      public bnet.protocol.Entity.Identity getMemberIdentity() {
        return result.getMemberIdentity();
      }
      public Builder setMemberIdentity(bnet.protocol.Entity.Identity value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasMemberIdentity = true;
        result.memberIdentity_ = value;
        return this;
      }
      public Builder setMemberIdentity(bnet.protocol.Entity.Identity.Builder builderForValue) {
        result.hasMemberIdentity = true;
        result.memberIdentity_ = builderForValue.build();
        return this;
      }
      public Builder mergeMemberIdentity(bnet.protocol.Entity.Identity value) {
        if (result.hasMemberIdentity() &&
            result.memberIdentity_ != bnet.protocol.Entity.Identity.getDefaultInstance()) {
          result.memberIdentity_ =
            bnet.protocol.Entity.Identity.newBuilder(result.memberIdentity_).mergeFrom(value).buildPartial();
        } else {
          result.memberIdentity_ = value;
        }
        result.hasMemberIdentity = true;
        return this;
      }
      public Builder clearMemberIdentity() {
        result.hasMemberIdentity = false;
        result.memberIdentity_ = bnet.protocol.Entity.Identity.getDefaultInstance();
        return this;
      }
      
      // required .bnet.protocol.channel.MemberState state = 3;
      public boolean hasState() {
        return result.hasState();
      }
      public bnet.protocol.channel.ChannelTypes.MemberState getState() {
        return result.getState();
      }
      public Builder setState(bnet.protocol.channel.ChannelTypes.MemberState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasState = true;
        result.state_ = value;
        return this;
      }
      public Builder setState(bnet.protocol.channel.ChannelTypes.MemberState.Builder builderForValue) {
        result.hasState = true;
        result.state_ = builderForValue.build();
        return this;
      }
      public Builder mergeState(bnet.protocol.channel.ChannelTypes.MemberState value) {
        if (result.hasState() &&
            result.state_ != bnet.protocol.channel.ChannelTypes.MemberState.getDefaultInstance()) {
          result.state_ =
            bnet.protocol.channel.ChannelTypes.MemberState.newBuilder(result.state_).mergeFrom(value).buildPartial();
        } else {
          result.state_ = value;
        }
        result.hasState = true;
        return this;
      }
      public Builder clearState() {
        result.hasState = false;
        result.state_ = bnet.protocol.channel.ChannelTypes.MemberState.getDefaultInstance();
        return this;
      }
      
      // required uint64 object_id = 4;
      public boolean hasObjectId() {
        return result.hasObjectId();
      }
      public long getObjectId() {
        return result.getObjectId();
      }
      public Builder setObjectId(long value) {
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder clearObjectId() {
        result.hasObjectId = false;
        result.objectId_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel.AddMemberRequest)
    }
    
    static {
      defaultInstance = new AddMemberRequest(true);
      bnet.protocol.channel.Channel.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel.AddMemberRequest)
  }
  
  public static final class RemoveMemberRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use RemoveMemberRequest.newBuilder() to construct.
    private RemoveMemberRequest() {
      initFields();
    }
    private RemoveMemberRequest(boolean noInit) {}
    
    private static final RemoveMemberRequest defaultInstance;
    public static RemoveMemberRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public RemoveMemberRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel.Channel.internal_static_bnet_protocol_channel_RemoveMemberRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel.Channel.internal_static_bnet_protocol_channel_RemoveMemberRequest_fieldAccessorTable;
    }
    
    // optional .bnet.protocol.EntityId agent_id = 1;
    public static final int AGENT_ID_FIELD_NUMBER = 1;
    private boolean hasAgentId;
    private bnet.protocol.Entity.EntityId agentId_;
    public boolean hasAgentId() { return hasAgentId; }
    public bnet.protocol.Entity.EntityId getAgentId() { return agentId_; }
    
    // required .bnet.protocol.EntityId member_id = 2;
    public static final int MEMBER_ID_FIELD_NUMBER = 2;
    private boolean hasMemberId;
    private bnet.protocol.Entity.EntityId memberId_;
    public boolean hasMemberId() { return hasMemberId; }
    public bnet.protocol.Entity.EntityId getMemberId() { return memberId_; }
    
    // optional uint32 reason = 3;
    public static final int REASON_FIELD_NUMBER = 3;
    private boolean hasReason;
    private int reason_ = 0;
    public boolean hasReason() { return hasReason; }
    public int getReason() { return reason_; }
    
    private void initFields() {
      agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
      memberId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasMemberId) return false;
      if (hasAgentId()) {
        if (!getAgentId().isInitialized()) return false;
      }
      if (!getMemberId().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAgentId()) {
        output.writeMessage(1, getAgentId());
      }
      if (hasMemberId()) {
        output.writeMessage(2, getMemberId());
      }
      if (hasReason()) {
        output.writeUInt32(3, getReason());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAgentId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAgentId());
      }
      if (hasMemberId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getMemberId());
      }
      if (hasReason()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, getReason());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel.Channel.RemoveMemberRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.Channel.RemoveMemberRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.Channel.RemoveMemberRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.Channel.RemoveMemberRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.Channel.RemoveMemberRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.Channel.RemoveMemberRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.Channel.RemoveMemberRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.Channel.RemoveMemberRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.Channel.RemoveMemberRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.Channel.RemoveMemberRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel.Channel.RemoveMemberRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel.Channel.RemoveMemberRequest result;
      
      // Construct using bnet.protocol.channel.Channel.RemoveMemberRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel.Channel.RemoveMemberRequest();
        return builder;
      }
      
      protected bnet.protocol.channel.Channel.RemoveMemberRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel.Channel.RemoveMemberRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel.Channel.RemoveMemberRequest.getDescriptor();
      }
      
      public bnet.protocol.channel.Channel.RemoveMemberRequest getDefaultInstanceForType() {
        return bnet.protocol.channel.Channel.RemoveMemberRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel.Channel.RemoveMemberRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel.Channel.RemoveMemberRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel.Channel.RemoveMemberRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.channel.Channel.RemoveMemberRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel.Channel.RemoveMemberRequest) {
          return mergeFrom((bnet.protocol.channel.Channel.RemoveMemberRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel.Channel.RemoveMemberRequest other) {
        if (other == bnet.protocol.channel.Channel.RemoveMemberRequest.getDefaultInstance()) return this;
        if (other.hasAgentId()) {
          mergeAgentId(other.getAgentId());
        }
        if (other.hasMemberId()) {
          mergeMemberId(other.getMemberId());
        }
        if (other.hasReason()) {
          setReason(other.getReason());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasAgentId()) {
                subBuilder.mergeFrom(getAgentId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAgentId(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasMemberId()) {
                subBuilder.mergeFrom(getMemberId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMemberId(subBuilder.buildPartial());
              break;
            }
            case 24: {
              setReason(input.readUInt32());
              break;
            }
          }
        }
      }
      
      
      // optional .bnet.protocol.EntityId agent_id = 1;
      public boolean hasAgentId() {
        return result.hasAgentId();
      }
      public bnet.protocol.Entity.EntityId getAgentId() {
        return result.getAgentId();
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasAgentId = true;
        result.agentId_ = builderForValue.build();
        return this;
      }
      public Builder mergeAgentId(bnet.protocol.Entity.EntityId value) {
        if (result.hasAgentId() &&
            result.agentId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.agentId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.agentId_).mergeFrom(value).buildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder clearAgentId() {
        result.hasAgentId = false;
        result.agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // required .bnet.protocol.EntityId member_id = 2;
      public boolean hasMemberId() {
        return result.hasMemberId();
      }
      public bnet.protocol.Entity.EntityId getMemberId() {
        return result.getMemberId();
      }
      public Builder setMemberId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasMemberId = true;
        result.memberId_ = value;
        return this;
      }
      public Builder setMemberId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasMemberId = true;
        result.memberId_ = builderForValue.build();
        return this;
      }
      public Builder mergeMemberId(bnet.protocol.Entity.EntityId value) {
        if (result.hasMemberId() &&
            result.memberId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.memberId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.memberId_).mergeFrom(value).buildPartial();
        } else {
          result.memberId_ = value;
        }
        result.hasMemberId = true;
        return this;
      }
      public Builder clearMemberId() {
        result.hasMemberId = false;
        result.memberId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // optional uint32 reason = 3;
      public boolean hasReason() {
        return result.hasReason();
      }
      public int getReason() {
        return result.getReason();
      }
      public Builder setReason(int value) {
        result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder clearReason() {
        result.hasReason = false;
        result.reason_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel.RemoveMemberRequest)
    }
    
    static {
      defaultInstance = new RemoveMemberRequest(true);
      bnet.protocol.channel.Channel.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel.RemoveMemberRequest)
  }
  
  public static final class SendMessageRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use SendMessageRequest.newBuilder() to construct.
    private SendMessageRequest() {
      initFields();
    }
    private SendMessageRequest(boolean noInit) {}
    
    private static final SendMessageRequest defaultInstance;
    public static SendMessageRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public SendMessageRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel.Channel.internal_static_bnet_protocol_channel_SendMessageRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel.Channel.internal_static_bnet_protocol_channel_SendMessageRequest_fieldAccessorTable;
    }
    
    // optional .bnet.protocol.EntityId agent_id = 1;
    public static final int AGENT_ID_FIELD_NUMBER = 1;
    private boolean hasAgentId;
    private bnet.protocol.Entity.EntityId agentId_;
    public boolean hasAgentId() { return hasAgentId; }
    public bnet.protocol.Entity.EntityId getAgentId() { return agentId_; }
    
    // required .bnet.protocol.channel.Message message = 2;
    public static final int MESSAGE_FIELD_NUMBER = 2;
    private boolean hasMessage;
    private bnet.protocol.channel.ChannelTypes.Message message_;
    public boolean hasMessage() { return hasMessage; }
    public bnet.protocol.channel.ChannelTypes.Message getMessage() { return message_; }
    
    // optional uint64 required_privileges = 3;
    public static final int REQUIRED_PRIVILEGES_FIELD_NUMBER = 3;
    private boolean hasRequiredPrivileges;
    private long requiredPrivileges_ = 0L;
    public boolean hasRequiredPrivileges() { return hasRequiredPrivileges; }
    public long getRequiredPrivileges() { return requiredPrivileges_; }
    
    private void initFields() {
      agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
      message_ = bnet.protocol.channel.ChannelTypes.Message.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasMessage) return false;
      if (hasAgentId()) {
        if (!getAgentId().isInitialized()) return false;
      }
      if (!getMessage().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAgentId()) {
        output.writeMessage(1, getAgentId());
      }
      if (hasMessage()) {
        output.writeMessage(2, getMessage());
      }
      if (hasRequiredPrivileges()) {
        output.writeUInt64(3, getRequiredPrivileges());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAgentId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAgentId());
      }
      if (hasMessage()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getMessage());
      }
      if (hasRequiredPrivileges()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, getRequiredPrivileges());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel.Channel.SendMessageRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.Channel.SendMessageRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.Channel.SendMessageRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.Channel.SendMessageRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.Channel.SendMessageRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.Channel.SendMessageRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.Channel.SendMessageRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.Channel.SendMessageRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.Channel.SendMessageRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.Channel.SendMessageRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel.Channel.SendMessageRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel.Channel.SendMessageRequest result;
      
      // Construct using bnet.protocol.channel.Channel.SendMessageRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel.Channel.SendMessageRequest();
        return builder;
      }
      
      protected bnet.protocol.channel.Channel.SendMessageRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel.Channel.SendMessageRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel.Channel.SendMessageRequest.getDescriptor();
      }
      
      public bnet.protocol.channel.Channel.SendMessageRequest getDefaultInstanceForType() {
        return bnet.protocol.channel.Channel.SendMessageRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel.Channel.SendMessageRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel.Channel.SendMessageRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel.Channel.SendMessageRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.channel.Channel.SendMessageRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel.Channel.SendMessageRequest) {
          return mergeFrom((bnet.protocol.channel.Channel.SendMessageRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel.Channel.SendMessageRequest other) {
        if (other == bnet.protocol.channel.Channel.SendMessageRequest.getDefaultInstance()) return this;
        if (other.hasAgentId()) {
          mergeAgentId(other.getAgentId());
        }
        if (other.hasMessage()) {
          mergeMessage(other.getMessage());
        }
        if (other.hasRequiredPrivileges()) {
          setRequiredPrivileges(other.getRequiredPrivileges());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasAgentId()) {
                subBuilder.mergeFrom(getAgentId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAgentId(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bnet.protocol.channel.ChannelTypes.Message.Builder subBuilder = bnet.protocol.channel.ChannelTypes.Message.newBuilder();
              if (hasMessage()) {
                subBuilder.mergeFrom(getMessage());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMessage(subBuilder.buildPartial());
              break;
            }
            case 24: {
              setRequiredPrivileges(input.readUInt64());
              break;
            }
          }
        }
      }
      
      
      // optional .bnet.protocol.EntityId agent_id = 1;
      public boolean hasAgentId() {
        return result.hasAgentId();
      }
      public bnet.protocol.Entity.EntityId getAgentId() {
        return result.getAgentId();
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasAgentId = true;
        result.agentId_ = builderForValue.build();
        return this;
      }
      public Builder mergeAgentId(bnet.protocol.Entity.EntityId value) {
        if (result.hasAgentId() &&
            result.agentId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.agentId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.agentId_).mergeFrom(value).buildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder clearAgentId() {
        result.hasAgentId = false;
        result.agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // required .bnet.protocol.channel.Message message = 2;
      public boolean hasMessage() {
        return result.hasMessage();
      }
      public bnet.protocol.channel.ChannelTypes.Message getMessage() {
        return result.getMessage();
      }
      public Builder setMessage(bnet.protocol.channel.ChannelTypes.Message value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasMessage = true;
        result.message_ = value;
        return this;
      }
      public Builder setMessage(bnet.protocol.channel.ChannelTypes.Message.Builder builderForValue) {
        result.hasMessage = true;
        result.message_ = builderForValue.build();
        return this;
      }
      public Builder mergeMessage(bnet.protocol.channel.ChannelTypes.Message value) {
        if (result.hasMessage() &&
            result.message_ != bnet.protocol.channel.ChannelTypes.Message.getDefaultInstance()) {
          result.message_ =
            bnet.protocol.channel.ChannelTypes.Message.newBuilder(result.message_).mergeFrom(value).buildPartial();
        } else {
          result.message_ = value;
        }
        result.hasMessage = true;
        return this;
      }
      public Builder clearMessage() {
        result.hasMessage = false;
        result.message_ = bnet.protocol.channel.ChannelTypes.Message.getDefaultInstance();
        return this;
      }
      
      // optional uint64 required_privileges = 3;
      public boolean hasRequiredPrivileges() {
        return result.hasRequiredPrivileges();
      }
      public long getRequiredPrivileges() {
        return result.getRequiredPrivileges();
      }
      public Builder setRequiredPrivileges(long value) {
        result.hasRequiredPrivileges = true;
        result.requiredPrivileges_ = value;
        return this;
      }
      public Builder clearRequiredPrivileges() {
        result.hasRequiredPrivileges = false;
        result.requiredPrivileges_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel.SendMessageRequest)
    }
    
    static {
      defaultInstance = new SendMessageRequest(true);
      bnet.protocol.channel.Channel.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel.SendMessageRequest)
  }
  
  public static final class UpdateChannelStateRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use UpdateChannelStateRequest.newBuilder() to construct.
    private UpdateChannelStateRequest() {
      initFields();
    }
    private UpdateChannelStateRequest(boolean noInit) {}
    
    private static final UpdateChannelStateRequest defaultInstance;
    public static UpdateChannelStateRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public UpdateChannelStateRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel.Channel.internal_static_bnet_protocol_channel_UpdateChannelStateRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel.Channel.internal_static_bnet_protocol_channel_UpdateChannelStateRequest_fieldAccessorTable;
    }
    
    // optional .bnet.protocol.EntityId agent_id = 1;
    public static final int AGENT_ID_FIELD_NUMBER = 1;
    private boolean hasAgentId;
    private bnet.protocol.Entity.EntityId agentId_;
    public boolean hasAgentId() { return hasAgentId; }
    public bnet.protocol.Entity.EntityId getAgentId() { return agentId_; }
    
    // required .bnet.protocol.channel.ChannelState state_change = 2;
    public static final int STATE_CHANGE_FIELD_NUMBER = 2;
    private boolean hasStateChange;
    private bnet.protocol.channel.ChannelTypes.ChannelState stateChange_;
    public boolean hasStateChange() { return hasStateChange; }
    public bnet.protocol.channel.ChannelTypes.ChannelState getStateChange() { return stateChange_; }
    
    private void initFields() {
      agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
      stateChange_ = bnet.protocol.channel.ChannelTypes.ChannelState.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasStateChange) return false;
      if (hasAgentId()) {
        if (!getAgentId().isInitialized()) return false;
      }
      if (!getStateChange().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAgentId()) {
        output.writeMessage(1, getAgentId());
      }
      if (hasStateChange()) {
        output.writeMessage(2, getStateChange());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAgentId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAgentId());
      }
      if (hasStateChange()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getStateChange());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel.Channel.UpdateChannelStateRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.Channel.UpdateChannelStateRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.Channel.UpdateChannelStateRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.Channel.UpdateChannelStateRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.Channel.UpdateChannelStateRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.Channel.UpdateChannelStateRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.Channel.UpdateChannelStateRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.Channel.UpdateChannelStateRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.Channel.UpdateChannelStateRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.Channel.UpdateChannelStateRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel.Channel.UpdateChannelStateRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel.Channel.UpdateChannelStateRequest result;
      
      // Construct using bnet.protocol.channel.Channel.UpdateChannelStateRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel.Channel.UpdateChannelStateRequest();
        return builder;
      }
      
      protected bnet.protocol.channel.Channel.UpdateChannelStateRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel.Channel.UpdateChannelStateRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel.Channel.UpdateChannelStateRequest.getDescriptor();
      }
      
      public bnet.protocol.channel.Channel.UpdateChannelStateRequest getDefaultInstanceForType() {
        return bnet.protocol.channel.Channel.UpdateChannelStateRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel.Channel.UpdateChannelStateRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel.Channel.UpdateChannelStateRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel.Channel.UpdateChannelStateRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.channel.Channel.UpdateChannelStateRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel.Channel.UpdateChannelStateRequest) {
          return mergeFrom((bnet.protocol.channel.Channel.UpdateChannelStateRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel.Channel.UpdateChannelStateRequest other) {
        if (other == bnet.protocol.channel.Channel.UpdateChannelStateRequest.getDefaultInstance()) return this;
        if (other.hasAgentId()) {
          mergeAgentId(other.getAgentId());
        }
        if (other.hasStateChange()) {
          mergeStateChange(other.getStateChange());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasAgentId()) {
                subBuilder.mergeFrom(getAgentId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAgentId(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bnet.protocol.channel.ChannelTypes.ChannelState.Builder subBuilder = bnet.protocol.channel.ChannelTypes.ChannelState.newBuilder();
              if (hasStateChange()) {
                subBuilder.mergeFrom(getStateChange());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setStateChange(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional .bnet.protocol.EntityId agent_id = 1;
      public boolean hasAgentId() {
        return result.hasAgentId();
      }
      public bnet.protocol.Entity.EntityId getAgentId() {
        return result.getAgentId();
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasAgentId = true;
        result.agentId_ = builderForValue.build();
        return this;
      }
      public Builder mergeAgentId(bnet.protocol.Entity.EntityId value) {
        if (result.hasAgentId() &&
            result.agentId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.agentId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.agentId_).mergeFrom(value).buildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder clearAgentId() {
        result.hasAgentId = false;
        result.agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // required .bnet.protocol.channel.ChannelState state_change = 2;
      public boolean hasStateChange() {
        return result.hasStateChange();
      }
      public bnet.protocol.channel.ChannelTypes.ChannelState getStateChange() {
        return result.getStateChange();
      }
      public Builder setStateChange(bnet.protocol.channel.ChannelTypes.ChannelState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasStateChange = true;
        result.stateChange_ = value;
        return this;
      }
      public Builder setStateChange(bnet.protocol.channel.ChannelTypes.ChannelState.Builder builderForValue) {
        result.hasStateChange = true;
        result.stateChange_ = builderForValue.build();
        return this;
      }
      public Builder mergeStateChange(bnet.protocol.channel.ChannelTypes.ChannelState value) {
        if (result.hasStateChange() &&
            result.stateChange_ != bnet.protocol.channel.ChannelTypes.ChannelState.getDefaultInstance()) {
          result.stateChange_ =
            bnet.protocol.channel.ChannelTypes.ChannelState.newBuilder(result.stateChange_).mergeFrom(value).buildPartial();
        } else {
          result.stateChange_ = value;
        }
        result.hasStateChange = true;
        return this;
      }
      public Builder clearStateChange() {
        result.hasStateChange = false;
        result.stateChange_ = bnet.protocol.channel.ChannelTypes.ChannelState.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel.UpdateChannelStateRequest)
    }
    
    static {
      defaultInstance = new UpdateChannelStateRequest(true);
      bnet.protocol.channel.Channel.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel.UpdateChannelStateRequest)
  }
  
  public static final class UpdateMemberStateRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use UpdateMemberStateRequest.newBuilder() to construct.
    private UpdateMemberStateRequest() {
      initFields();
    }
    private UpdateMemberStateRequest(boolean noInit) {}
    
    private static final UpdateMemberStateRequest defaultInstance;
    public static UpdateMemberStateRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public UpdateMemberStateRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel.Channel.internal_static_bnet_protocol_channel_UpdateMemberStateRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel.Channel.internal_static_bnet_protocol_channel_UpdateMemberStateRequest_fieldAccessorTable;
    }
    
    // optional .bnet.protocol.EntityId agent_id = 1;
    public static final int AGENT_ID_FIELD_NUMBER = 1;
    private boolean hasAgentId;
    private bnet.protocol.Entity.EntityId agentId_;
    public boolean hasAgentId() { return hasAgentId; }
    public bnet.protocol.Entity.EntityId getAgentId() { return agentId_; }
    
    // repeated .bnet.protocol.channel.Member state_change = 2;
    public static final int STATE_CHANGE_FIELD_NUMBER = 2;
    private java.util.List<bnet.protocol.channel.ChannelTypes.Member> stateChange_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.channel.ChannelTypes.Member> getStateChangeList() {
      return stateChange_;
    }
    public int getStateChangeCount() { return stateChange_.size(); }
    public bnet.protocol.channel.ChannelTypes.Member getStateChange(int index) {
      return stateChange_.get(index);
    }
    
    private void initFields() {
      agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (hasAgentId()) {
        if (!getAgentId().isInitialized()) return false;
      }
      for (bnet.protocol.channel.ChannelTypes.Member element : getStateChangeList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAgentId()) {
        output.writeMessage(1, getAgentId());
      }
      for (bnet.protocol.channel.ChannelTypes.Member element : getStateChangeList()) {
        output.writeMessage(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAgentId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAgentId());
      }
      for (bnet.protocol.channel.ChannelTypes.Member element : getStateChangeList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel.Channel.UpdateMemberStateRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.Channel.UpdateMemberStateRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.Channel.UpdateMemberStateRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.Channel.UpdateMemberStateRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.Channel.UpdateMemberStateRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.Channel.UpdateMemberStateRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.Channel.UpdateMemberStateRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.Channel.UpdateMemberStateRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.Channel.UpdateMemberStateRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.Channel.UpdateMemberStateRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel.Channel.UpdateMemberStateRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel.Channel.UpdateMemberStateRequest result;
      
      // Construct using bnet.protocol.channel.Channel.UpdateMemberStateRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel.Channel.UpdateMemberStateRequest();
        return builder;
      }
      
      protected bnet.protocol.channel.Channel.UpdateMemberStateRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel.Channel.UpdateMemberStateRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel.Channel.UpdateMemberStateRequest.getDescriptor();
      }
      
      public bnet.protocol.channel.Channel.UpdateMemberStateRequest getDefaultInstanceForType() {
        return bnet.protocol.channel.Channel.UpdateMemberStateRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel.Channel.UpdateMemberStateRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel.Channel.UpdateMemberStateRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel.Channel.UpdateMemberStateRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.stateChange_ != java.util.Collections.EMPTY_LIST) {
          result.stateChange_ =
            java.util.Collections.unmodifiableList(result.stateChange_);
        }
        bnet.protocol.channel.Channel.UpdateMemberStateRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel.Channel.UpdateMemberStateRequest) {
          return mergeFrom((bnet.protocol.channel.Channel.UpdateMemberStateRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel.Channel.UpdateMemberStateRequest other) {
        if (other == bnet.protocol.channel.Channel.UpdateMemberStateRequest.getDefaultInstance()) return this;
        if (other.hasAgentId()) {
          mergeAgentId(other.getAgentId());
        }
        if (!other.stateChange_.isEmpty()) {
          if (result.stateChange_.isEmpty()) {
            result.stateChange_ = new java.util.ArrayList<bnet.protocol.channel.ChannelTypes.Member>();
          }
          result.stateChange_.addAll(other.stateChange_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasAgentId()) {
                subBuilder.mergeFrom(getAgentId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAgentId(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bnet.protocol.channel.ChannelTypes.Member.Builder subBuilder = bnet.protocol.channel.ChannelTypes.Member.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addStateChange(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional .bnet.protocol.EntityId agent_id = 1;
      public boolean hasAgentId() {
        return result.hasAgentId();
      }
      public bnet.protocol.Entity.EntityId getAgentId() {
        return result.getAgentId();
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasAgentId = true;
        result.agentId_ = builderForValue.build();
        return this;
      }
      public Builder mergeAgentId(bnet.protocol.Entity.EntityId value) {
        if (result.hasAgentId() &&
            result.agentId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.agentId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.agentId_).mergeFrom(value).buildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder clearAgentId() {
        result.hasAgentId = false;
        result.agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // repeated .bnet.protocol.channel.Member state_change = 2;
      public java.util.List<bnet.protocol.channel.ChannelTypes.Member> getStateChangeList() {
        return java.util.Collections.unmodifiableList(result.stateChange_);
      }
      public int getStateChangeCount() {
        return result.getStateChangeCount();
      }
      public bnet.protocol.channel.ChannelTypes.Member getStateChange(int index) {
        return result.getStateChange(index);
      }
      public Builder setStateChange(int index, bnet.protocol.channel.ChannelTypes.Member value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.stateChange_.set(index, value);
        return this;
      }
      public Builder setStateChange(int index, bnet.protocol.channel.ChannelTypes.Member.Builder builderForValue) {
        result.stateChange_.set(index, builderForValue.build());
        return this;
      }
      public Builder addStateChange(bnet.protocol.channel.ChannelTypes.Member value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.stateChange_.isEmpty()) {
          result.stateChange_ = new java.util.ArrayList<bnet.protocol.channel.ChannelTypes.Member>();
        }
        result.stateChange_.add(value);
        return this;
      }
      public Builder addStateChange(bnet.protocol.channel.ChannelTypes.Member.Builder builderForValue) {
        if (result.stateChange_.isEmpty()) {
          result.stateChange_ = new java.util.ArrayList<bnet.protocol.channel.ChannelTypes.Member>();
        }
        result.stateChange_.add(builderForValue.build());
        return this;
      }
      public Builder addAllStateChange(
          java.lang.Iterable<? extends bnet.protocol.channel.ChannelTypes.Member> values) {
        if (result.stateChange_.isEmpty()) {
          result.stateChange_ = new java.util.ArrayList<bnet.protocol.channel.ChannelTypes.Member>();
        }
        super.addAll(values, result.stateChange_);
        return this;
      }
      public Builder clearStateChange() {
        result.stateChange_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel.UpdateMemberStateRequest)
    }
    
    static {
      defaultInstance = new UpdateMemberStateRequest(true);
      bnet.protocol.channel.Channel.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel.UpdateMemberStateRequest)
  }
  
  public static final class DissolveRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use DissolveRequest.newBuilder() to construct.
    private DissolveRequest() {
      initFields();
    }
    private DissolveRequest(boolean noInit) {}
    
    private static final DissolveRequest defaultInstance;
    public static DissolveRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public DissolveRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel.Channel.internal_static_bnet_protocol_channel_DissolveRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel.Channel.internal_static_bnet_protocol_channel_DissolveRequest_fieldAccessorTable;
    }
    
    // optional .bnet.protocol.EntityId agent_id = 1;
    public static final int AGENT_ID_FIELD_NUMBER = 1;
    private boolean hasAgentId;
    private bnet.protocol.Entity.EntityId agentId_;
    public boolean hasAgentId() { return hasAgentId; }
    public bnet.protocol.Entity.EntityId getAgentId() { return agentId_; }
    
    // optional uint32 reason = 2;
    public static final int REASON_FIELD_NUMBER = 2;
    private boolean hasReason;
    private int reason_ = 0;
    public boolean hasReason() { return hasReason; }
    public int getReason() { return reason_; }
    
    private void initFields() {
      agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (hasAgentId()) {
        if (!getAgentId().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAgentId()) {
        output.writeMessage(1, getAgentId());
      }
      if (hasReason()) {
        output.writeUInt32(2, getReason());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAgentId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAgentId());
      }
      if (hasReason()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getReason());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel.Channel.DissolveRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.Channel.DissolveRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.Channel.DissolveRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.Channel.DissolveRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.Channel.DissolveRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.Channel.DissolveRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.Channel.DissolveRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.Channel.DissolveRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.Channel.DissolveRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.Channel.DissolveRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel.Channel.DissolveRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel.Channel.DissolveRequest result;
      
      // Construct using bnet.protocol.channel.Channel.DissolveRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel.Channel.DissolveRequest();
        return builder;
      }
      
      protected bnet.protocol.channel.Channel.DissolveRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel.Channel.DissolveRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel.Channel.DissolveRequest.getDescriptor();
      }
      
      public bnet.protocol.channel.Channel.DissolveRequest getDefaultInstanceForType() {
        return bnet.protocol.channel.Channel.DissolveRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel.Channel.DissolveRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel.Channel.DissolveRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel.Channel.DissolveRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.channel.Channel.DissolveRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel.Channel.DissolveRequest) {
          return mergeFrom((bnet.protocol.channel.Channel.DissolveRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel.Channel.DissolveRequest other) {
        if (other == bnet.protocol.channel.Channel.DissolveRequest.getDefaultInstance()) return this;
        if (other.hasAgentId()) {
          mergeAgentId(other.getAgentId());
        }
        if (other.hasReason()) {
          setReason(other.getReason());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasAgentId()) {
                subBuilder.mergeFrom(getAgentId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAgentId(subBuilder.buildPartial());
              break;
            }
            case 16: {
              setReason(input.readUInt32());
              break;
            }
          }
        }
      }
      
      
      // optional .bnet.protocol.EntityId agent_id = 1;
      public boolean hasAgentId() {
        return result.hasAgentId();
      }
      public bnet.protocol.Entity.EntityId getAgentId() {
        return result.getAgentId();
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasAgentId = true;
        result.agentId_ = builderForValue.build();
        return this;
      }
      public Builder mergeAgentId(bnet.protocol.Entity.EntityId value) {
        if (result.hasAgentId() &&
            result.agentId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.agentId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.agentId_).mergeFrom(value).buildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder clearAgentId() {
        result.hasAgentId = false;
        result.agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // optional uint32 reason = 2;
      public boolean hasReason() {
        return result.hasReason();
      }
      public int getReason() {
        return result.getReason();
      }
      public Builder setReason(int value) {
        result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder clearReason() {
        result.hasReason = false;
        result.reason_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel.DissolveRequest)
    }
    
    static {
      defaultInstance = new DissolveRequest(true);
      bnet.protocol.channel.Channel.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel.DissolveRequest)
  }
  
  public static final class SetRolesRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use SetRolesRequest.newBuilder() to construct.
    private SetRolesRequest() {
      initFields();
    }
    private SetRolesRequest(boolean noInit) {}
    
    private static final SetRolesRequest defaultInstance;
    public static SetRolesRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public SetRolesRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel.Channel.internal_static_bnet_protocol_channel_SetRolesRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel.Channel.internal_static_bnet_protocol_channel_SetRolesRequest_fieldAccessorTable;
    }
    
    // optional .bnet.protocol.EntityId agent_id = 1;
    public static final int AGENT_ID_FIELD_NUMBER = 1;
    private boolean hasAgentId;
    private bnet.protocol.Entity.EntityId agentId_;
    public boolean hasAgentId() { return hasAgentId; }
    public bnet.protocol.Entity.EntityId getAgentId() { return agentId_; }
    
    // repeated uint32 role = 2;
    public static final int ROLE_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> role_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getRoleList() {
      return role_;
    }
    public int getRoleCount() { return role_.size(); }
    public int getRole(int index) {
      return role_.get(index);
    }
    
    // repeated .bnet.protocol.EntityId member_id = 3;
    public static final int MEMBER_ID_FIELD_NUMBER = 3;
    private java.util.List<bnet.protocol.Entity.EntityId> memberId_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.Entity.EntityId> getMemberIdList() {
      return memberId_;
    }
    public int getMemberIdCount() { return memberId_.size(); }
    public bnet.protocol.Entity.EntityId getMemberId(int index) {
      return memberId_.get(index);
    }
    
    private void initFields() {
      agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (hasAgentId()) {
        if (!getAgentId().isInitialized()) return false;
      }
      for (bnet.protocol.Entity.EntityId element : getMemberIdList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAgentId()) {
        output.writeMessage(1, getAgentId());
      }
      for (int element : getRoleList()) {
        output.writeUInt32(2, element);
      }
      for (bnet.protocol.Entity.EntityId element : getMemberIdList()) {
        output.writeMessage(3, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAgentId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAgentId());
      }
      {
        int dataSize = 0;
        for (int element : getRoleList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getRoleList().size();
      }
      for (bnet.protocol.Entity.EntityId element : getMemberIdList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel.Channel.SetRolesRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.Channel.SetRolesRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.Channel.SetRolesRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.Channel.SetRolesRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.Channel.SetRolesRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.Channel.SetRolesRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.Channel.SetRolesRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.Channel.SetRolesRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.Channel.SetRolesRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.Channel.SetRolesRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel.Channel.SetRolesRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel.Channel.SetRolesRequest result;
      
      // Construct using bnet.protocol.channel.Channel.SetRolesRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel.Channel.SetRolesRequest();
        return builder;
      }
      
      protected bnet.protocol.channel.Channel.SetRolesRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel.Channel.SetRolesRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel.Channel.SetRolesRequest.getDescriptor();
      }
      
      public bnet.protocol.channel.Channel.SetRolesRequest getDefaultInstanceForType() {
        return bnet.protocol.channel.Channel.SetRolesRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel.Channel.SetRolesRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel.Channel.SetRolesRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel.Channel.SetRolesRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.role_ != java.util.Collections.EMPTY_LIST) {
          result.role_ =
            java.util.Collections.unmodifiableList(result.role_);
        }
        if (result.memberId_ != java.util.Collections.EMPTY_LIST) {
          result.memberId_ =
            java.util.Collections.unmodifiableList(result.memberId_);
        }
        bnet.protocol.channel.Channel.SetRolesRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel.Channel.SetRolesRequest) {
          return mergeFrom((bnet.protocol.channel.Channel.SetRolesRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel.Channel.SetRolesRequest other) {
        if (other == bnet.protocol.channel.Channel.SetRolesRequest.getDefaultInstance()) return this;
        if (other.hasAgentId()) {
          mergeAgentId(other.getAgentId());
        }
        if (!other.role_.isEmpty()) {
          if (result.role_.isEmpty()) {
            result.role_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.role_.addAll(other.role_);
        }
        if (!other.memberId_.isEmpty()) {
          if (result.memberId_.isEmpty()) {
            result.memberId_ = new java.util.ArrayList<bnet.protocol.Entity.EntityId>();
          }
          result.memberId_.addAll(other.memberId_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasAgentId()) {
                subBuilder.mergeFrom(getAgentId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAgentId(subBuilder.buildPartial());
              break;
            }
            case 16: {
              addRole(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addRole(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 26: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addMemberId(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional .bnet.protocol.EntityId agent_id = 1;
      public boolean hasAgentId() {
        return result.hasAgentId();
      }
      public bnet.protocol.Entity.EntityId getAgentId() {
        return result.getAgentId();
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasAgentId = true;
        result.agentId_ = builderForValue.build();
        return this;
      }
      public Builder mergeAgentId(bnet.protocol.Entity.EntityId value) {
        if (result.hasAgentId() &&
            result.agentId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.agentId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.agentId_).mergeFrom(value).buildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder clearAgentId() {
        result.hasAgentId = false;
        result.agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // repeated uint32 role = 2;
      public java.util.List<java.lang.Integer> getRoleList() {
        return java.util.Collections.unmodifiableList(result.role_);
      }
      public int getRoleCount() {
        return result.getRoleCount();
      }
      public int getRole(int index) {
        return result.getRole(index);
      }
      public Builder setRole(int index, int value) {
        result.role_.set(index, value);
        return this;
      }
      public Builder addRole(int value) {
        if (result.role_.isEmpty()) {
          result.role_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.role_.add(value);
        return this;
      }
      public Builder addAllRole(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.role_.isEmpty()) {
          result.role_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.role_);
        return this;
      }
      public Builder clearRole() {
        result.role_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .bnet.protocol.EntityId member_id = 3;
      public java.util.List<bnet.protocol.Entity.EntityId> getMemberIdList() {
        return java.util.Collections.unmodifiableList(result.memberId_);
      }
      public int getMemberIdCount() {
        return result.getMemberIdCount();
      }
      public bnet.protocol.Entity.EntityId getMemberId(int index) {
        return result.getMemberId(index);
      }
      public Builder setMemberId(int index, bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.memberId_.set(index, value);
        return this;
      }
      public Builder setMemberId(int index, bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.memberId_.set(index, builderForValue.build());
        return this;
      }
      public Builder addMemberId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.memberId_.isEmpty()) {
          result.memberId_ = new java.util.ArrayList<bnet.protocol.Entity.EntityId>();
        }
        result.memberId_.add(value);
        return this;
      }
      public Builder addMemberId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        if (result.memberId_.isEmpty()) {
          result.memberId_ = new java.util.ArrayList<bnet.protocol.Entity.EntityId>();
        }
        result.memberId_.add(builderForValue.build());
        return this;
      }
      public Builder addAllMemberId(
          java.lang.Iterable<? extends bnet.protocol.Entity.EntityId> values) {
        if (result.memberId_.isEmpty()) {
          result.memberId_ = new java.util.ArrayList<bnet.protocol.Entity.EntityId>();
        }
        super.addAll(values, result.memberId_);
        return this;
      }
      public Builder clearMemberId() {
        result.memberId_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel.SetRolesRequest)
    }
    
    static {
      defaultInstance = new SetRolesRequest(true);
      bnet.protocol.channel.Channel.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel.SetRolesRequest)
  }
  
  public static final class AddNotification extends
      com.google.protobuf.GeneratedMessage {
    // Use AddNotification.newBuilder() to construct.
    private AddNotification() {
      initFields();
    }
    private AddNotification(boolean noInit) {}
    
    private static final AddNotification defaultInstance;
    public static AddNotification getDefaultInstance() {
      return defaultInstance;
    }
    
    public AddNotification getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel.Channel.internal_static_bnet_protocol_channel_AddNotification_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel.Channel.internal_static_bnet_protocol_channel_AddNotification_fieldAccessorTable;
    }
    
    // optional .bnet.protocol.channel.Member self = 1;
    public static final int SELF_FIELD_NUMBER = 1;
    private boolean hasSelf;
    private bnet.protocol.channel.ChannelTypes.Member self_;
    public boolean hasSelf() { return hasSelf; }
    public bnet.protocol.channel.ChannelTypes.Member getSelf() { return self_; }
    
    // repeated .bnet.protocol.channel.Member member = 2;
    public static final int MEMBER_FIELD_NUMBER = 2;
    private java.util.List<bnet.protocol.channel.ChannelTypes.Member> member_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.channel.ChannelTypes.Member> getMemberList() {
      return member_;
    }
    public int getMemberCount() { return member_.size(); }
    public bnet.protocol.channel.ChannelTypes.Member getMember(int index) {
      return member_.get(index);
    }
    
    // required .bnet.protocol.channel.ChannelState channel_state = 3;
    public static final int CHANNEL_STATE_FIELD_NUMBER = 3;
    private boolean hasChannelState;
    private bnet.protocol.channel.ChannelTypes.ChannelState channelState_;
    public boolean hasChannelState() { return hasChannelState; }
    public bnet.protocol.channel.ChannelTypes.ChannelState getChannelState() { return channelState_; }
    
    private void initFields() {
      self_ = bnet.protocol.channel.ChannelTypes.Member.getDefaultInstance();
      channelState_ = bnet.protocol.channel.ChannelTypes.ChannelState.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasChannelState) return false;
      if (hasSelf()) {
        if (!getSelf().isInitialized()) return false;
      }
      for (bnet.protocol.channel.ChannelTypes.Member element : getMemberList()) {
        if (!element.isInitialized()) return false;
      }
      if (!getChannelState().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSelf()) {
        output.writeMessage(1, getSelf());
      }
      for (bnet.protocol.channel.ChannelTypes.Member element : getMemberList()) {
        output.writeMessage(2, element);
      }
      if (hasChannelState()) {
        output.writeMessage(3, getChannelState());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSelf()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSelf());
      }
      for (bnet.protocol.channel.ChannelTypes.Member element : getMemberList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      if (hasChannelState()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getChannelState());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel.Channel.AddNotification parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.Channel.AddNotification parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.Channel.AddNotification parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.Channel.AddNotification parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.Channel.AddNotification parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.Channel.AddNotification parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.Channel.AddNotification parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.Channel.AddNotification parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.Channel.AddNotification parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.Channel.AddNotification parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel.Channel.AddNotification prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel.Channel.AddNotification result;
      
      // Construct using bnet.protocol.channel.Channel.AddNotification.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel.Channel.AddNotification();
        return builder;
      }
      
      protected bnet.protocol.channel.Channel.AddNotification internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel.Channel.AddNotification();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel.Channel.AddNotification.getDescriptor();
      }
      
      public bnet.protocol.channel.Channel.AddNotification getDefaultInstanceForType() {
        return bnet.protocol.channel.Channel.AddNotification.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel.Channel.AddNotification build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel.Channel.AddNotification buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel.Channel.AddNotification buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.member_ != java.util.Collections.EMPTY_LIST) {
          result.member_ =
            java.util.Collections.unmodifiableList(result.member_);
        }
        bnet.protocol.channel.Channel.AddNotification returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel.Channel.AddNotification) {
          return mergeFrom((bnet.protocol.channel.Channel.AddNotification)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel.Channel.AddNotification other) {
        if (other == bnet.protocol.channel.Channel.AddNotification.getDefaultInstance()) return this;
        if (other.hasSelf()) {
          mergeSelf(other.getSelf());
        }
        if (!other.member_.isEmpty()) {
          if (result.member_.isEmpty()) {
            result.member_ = new java.util.ArrayList<bnet.protocol.channel.ChannelTypes.Member>();
          }
          result.member_.addAll(other.member_);
        }
        if (other.hasChannelState()) {
          mergeChannelState(other.getChannelState());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.channel.ChannelTypes.Member.Builder subBuilder = bnet.protocol.channel.ChannelTypes.Member.newBuilder();
              if (hasSelf()) {
                subBuilder.mergeFrom(getSelf());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSelf(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bnet.protocol.channel.ChannelTypes.Member.Builder subBuilder = bnet.protocol.channel.ChannelTypes.Member.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addMember(subBuilder.buildPartial());
              break;
            }
            case 26: {
              bnet.protocol.channel.ChannelTypes.ChannelState.Builder subBuilder = bnet.protocol.channel.ChannelTypes.ChannelState.newBuilder();
              if (hasChannelState()) {
                subBuilder.mergeFrom(getChannelState());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setChannelState(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional .bnet.protocol.channel.Member self = 1;
      public boolean hasSelf() {
        return result.hasSelf();
      }
      public bnet.protocol.channel.ChannelTypes.Member getSelf() {
        return result.getSelf();
      }
      public Builder setSelf(bnet.protocol.channel.ChannelTypes.Member value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSelf = true;
        result.self_ = value;
        return this;
      }
      public Builder setSelf(bnet.protocol.channel.ChannelTypes.Member.Builder builderForValue) {
        result.hasSelf = true;
        result.self_ = builderForValue.build();
        return this;
      }
      public Builder mergeSelf(bnet.protocol.channel.ChannelTypes.Member value) {
        if (result.hasSelf() &&
            result.self_ != bnet.protocol.channel.ChannelTypes.Member.getDefaultInstance()) {
          result.self_ =
            bnet.protocol.channel.ChannelTypes.Member.newBuilder(result.self_).mergeFrom(value).buildPartial();
        } else {
          result.self_ = value;
        }
        result.hasSelf = true;
        return this;
      }
      public Builder clearSelf() {
        result.hasSelf = false;
        result.self_ = bnet.protocol.channel.ChannelTypes.Member.getDefaultInstance();
        return this;
      }
      
      // repeated .bnet.protocol.channel.Member member = 2;
      public java.util.List<bnet.protocol.channel.ChannelTypes.Member> getMemberList() {
        return java.util.Collections.unmodifiableList(result.member_);
      }
      public int getMemberCount() {
        return result.getMemberCount();
      }
      public bnet.protocol.channel.ChannelTypes.Member getMember(int index) {
        return result.getMember(index);
      }
      public Builder setMember(int index, bnet.protocol.channel.ChannelTypes.Member value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.member_.set(index, value);
        return this;
      }
      public Builder setMember(int index, bnet.protocol.channel.ChannelTypes.Member.Builder builderForValue) {
        result.member_.set(index, builderForValue.build());
        return this;
      }
      public Builder addMember(bnet.protocol.channel.ChannelTypes.Member value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.member_.isEmpty()) {
          result.member_ = new java.util.ArrayList<bnet.protocol.channel.ChannelTypes.Member>();
        }
        result.member_.add(value);
        return this;
      }
      public Builder addMember(bnet.protocol.channel.ChannelTypes.Member.Builder builderForValue) {
        if (result.member_.isEmpty()) {
          result.member_ = new java.util.ArrayList<bnet.protocol.channel.ChannelTypes.Member>();
        }
        result.member_.add(builderForValue.build());
        return this;
      }
      public Builder addAllMember(
          java.lang.Iterable<? extends bnet.protocol.channel.ChannelTypes.Member> values) {
        if (result.member_.isEmpty()) {
          result.member_ = new java.util.ArrayList<bnet.protocol.channel.ChannelTypes.Member>();
        }
        super.addAll(values, result.member_);
        return this;
      }
      public Builder clearMember() {
        result.member_ = java.util.Collections.emptyList();
        return this;
      }
      
      // required .bnet.protocol.channel.ChannelState channel_state = 3;
      public boolean hasChannelState() {
        return result.hasChannelState();
      }
      public bnet.protocol.channel.ChannelTypes.ChannelState getChannelState() {
        return result.getChannelState();
      }
      public Builder setChannelState(bnet.protocol.channel.ChannelTypes.ChannelState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasChannelState = true;
        result.channelState_ = value;
        return this;
      }
      public Builder setChannelState(bnet.protocol.channel.ChannelTypes.ChannelState.Builder builderForValue) {
        result.hasChannelState = true;
        result.channelState_ = builderForValue.build();
        return this;
      }
      public Builder mergeChannelState(bnet.protocol.channel.ChannelTypes.ChannelState value) {
        if (result.hasChannelState() &&
            result.channelState_ != bnet.protocol.channel.ChannelTypes.ChannelState.getDefaultInstance()) {
          result.channelState_ =
            bnet.protocol.channel.ChannelTypes.ChannelState.newBuilder(result.channelState_).mergeFrom(value).buildPartial();
        } else {
          result.channelState_ = value;
        }
        result.hasChannelState = true;
        return this;
      }
      public Builder clearChannelState() {
        result.hasChannelState = false;
        result.channelState_ = bnet.protocol.channel.ChannelTypes.ChannelState.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel.AddNotification)
    }
    
    static {
      defaultInstance = new AddNotification(true);
      bnet.protocol.channel.Channel.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel.AddNotification)
  }
  
  public static final class JoinNotification extends
      com.google.protobuf.GeneratedMessage {
    // Use JoinNotification.newBuilder() to construct.
    private JoinNotification() {
      initFields();
    }
    private JoinNotification(boolean noInit) {}
    
    private static final JoinNotification defaultInstance;
    public static JoinNotification getDefaultInstance() {
      return defaultInstance;
    }
    
    public JoinNotification getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel.Channel.internal_static_bnet_protocol_channel_JoinNotification_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel.Channel.internal_static_bnet_protocol_channel_JoinNotification_fieldAccessorTable;
    }
    
    // required .bnet.protocol.channel.Member member = 1;
    public static final int MEMBER_FIELD_NUMBER = 1;
    private boolean hasMember;
    private bnet.protocol.channel.ChannelTypes.Member member_;
    public boolean hasMember() { return hasMember; }
    public bnet.protocol.channel.ChannelTypes.Member getMember() { return member_; }
    
    private void initFields() {
      member_ = bnet.protocol.channel.ChannelTypes.Member.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasMember) return false;
      if (!getMember().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasMember()) {
        output.writeMessage(1, getMember());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasMember()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMember());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel.Channel.JoinNotification parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.Channel.JoinNotification parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.Channel.JoinNotification parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.Channel.JoinNotification parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.Channel.JoinNotification parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.Channel.JoinNotification parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.Channel.JoinNotification parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.Channel.JoinNotification parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.Channel.JoinNotification parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.Channel.JoinNotification parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel.Channel.JoinNotification prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel.Channel.JoinNotification result;
      
      // Construct using bnet.protocol.channel.Channel.JoinNotification.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel.Channel.JoinNotification();
        return builder;
      }
      
      protected bnet.protocol.channel.Channel.JoinNotification internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel.Channel.JoinNotification();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel.Channel.JoinNotification.getDescriptor();
      }
      
      public bnet.protocol.channel.Channel.JoinNotification getDefaultInstanceForType() {
        return bnet.protocol.channel.Channel.JoinNotification.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel.Channel.JoinNotification build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel.Channel.JoinNotification buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel.Channel.JoinNotification buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.channel.Channel.JoinNotification returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel.Channel.JoinNotification) {
          return mergeFrom((bnet.protocol.channel.Channel.JoinNotification)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel.Channel.JoinNotification other) {
        if (other == bnet.protocol.channel.Channel.JoinNotification.getDefaultInstance()) return this;
        if (other.hasMember()) {
          mergeMember(other.getMember());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.channel.ChannelTypes.Member.Builder subBuilder = bnet.protocol.channel.ChannelTypes.Member.newBuilder();
              if (hasMember()) {
                subBuilder.mergeFrom(getMember());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMember(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .bnet.protocol.channel.Member member = 1;
      public boolean hasMember() {
        return result.hasMember();
      }
      public bnet.protocol.channel.ChannelTypes.Member getMember() {
        return result.getMember();
      }
      public Builder setMember(bnet.protocol.channel.ChannelTypes.Member value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasMember = true;
        result.member_ = value;
        return this;
      }
      public Builder setMember(bnet.protocol.channel.ChannelTypes.Member.Builder builderForValue) {
        result.hasMember = true;
        result.member_ = builderForValue.build();
        return this;
      }
      public Builder mergeMember(bnet.protocol.channel.ChannelTypes.Member value) {
        if (result.hasMember() &&
            result.member_ != bnet.protocol.channel.ChannelTypes.Member.getDefaultInstance()) {
          result.member_ =
            bnet.protocol.channel.ChannelTypes.Member.newBuilder(result.member_).mergeFrom(value).buildPartial();
        } else {
          result.member_ = value;
        }
        result.hasMember = true;
        return this;
      }
      public Builder clearMember() {
        result.hasMember = false;
        result.member_ = bnet.protocol.channel.ChannelTypes.Member.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel.JoinNotification)
    }
    
    static {
      defaultInstance = new JoinNotification(true);
      bnet.protocol.channel.Channel.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel.JoinNotification)
  }
  
  public static final class RemoveNotification extends
      com.google.protobuf.GeneratedMessage {
    // Use RemoveNotification.newBuilder() to construct.
    private RemoveNotification() {
      initFields();
    }
    private RemoveNotification(boolean noInit) {}
    
    private static final RemoveNotification defaultInstance;
    public static RemoveNotification getDefaultInstance() {
      return defaultInstance;
    }
    
    public RemoveNotification getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel.Channel.internal_static_bnet_protocol_channel_RemoveNotification_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel.Channel.internal_static_bnet_protocol_channel_RemoveNotification_fieldAccessorTable;
    }
    
    // optional .bnet.protocol.EntityId agent_id = 1;
    public static final int AGENT_ID_FIELD_NUMBER = 1;
    private boolean hasAgentId;
    private bnet.protocol.Entity.EntityId agentId_;
    public boolean hasAgentId() { return hasAgentId; }
    public bnet.protocol.Entity.EntityId getAgentId() { return agentId_; }
    
    // required .bnet.protocol.EntityId member_id = 2;
    public static final int MEMBER_ID_FIELD_NUMBER = 2;
    private boolean hasMemberId;
    private bnet.protocol.Entity.EntityId memberId_;
    public boolean hasMemberId() { return hasMemberId; }
    public bnet.protocol.Entity.EntityId getMemberId() { return memberId_; }
    
    // optional uint32 reason = 3;
    public static final int REASON_FIELD_NUMBER = 3;
    private boolean hasReason;
    private int reason_ = 0;
    public boolean hasReason() { return hasReason; }
    public int getReason() { return reason_; }
    
    private void initFields() {
      agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
      memberId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasMemberId) return false;
      if (hasAgentId()) {
        if (!getAgentId().isInitialized()) return false;
      }
      if (!getMemberId().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAgentId()) {
        output.writeMessage(1, getAgentId());
      }
      if (hasMemberId()) {
        output.writeMessage(2, getMemberId());
      }
      if (hasReason()) {
        output.writeUInt32(3, getReason());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAgentId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAgentId());
      }
      if (hasMemberId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getMemberId());
      }
      if (hasReason()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, getReason());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel.Channel.RemoveNotification parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.Channel.RemoveNotification parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.Channel.RemoveNotification parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.Channel.RemoveNotification parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.Channel.RemoveNotification parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.Channel.RemoveNotification parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.Channel.RemoveNotification parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.Channel.RemoveNotification parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.Channel.RemoveNotification parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.Channel.RemoveNotification parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel.Channel.RemoveNotification prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel.Channel.RemoveNotification result;
      
      // Construct using bnet.protocol.channel.Channel.RemoveNotification.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel.Channel.RemoveNotification();
        return builder;
      }
      
      protected bnet.protocol.channel.Channel.RemoveNotification internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel.Channel.RemoveNotification();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel.Channel.RemoveNotification.getDescriptor();
      }
      
      public bnet.protocol.channel.Channel.RemoveNotification getDefaultInstanceForType() {
        return bnet.protocol.channel.Channel.RemoveNotification.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel.Channel.RemoveNotification build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel.Channel.RemoveNotification buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel.Channel.RemoveNotification buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.channel.Channel.RemoveNotification returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel.Channel.RemoveNotification) {
          return mergeFrom((bnet.protocol.channel.Channel.RemoveNotification)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel.Channel.RemoveNotification other) {
        if (other == bnet.protocol.channel.Channel.RemoveNotification.getDefaultInstance()) return this;
        if (other.hasAgentId()) {
          mergeAgentId(other.getAgentId());
        }
        if (other.hasMemberId()) {
          mergeMemberId(other.getMemberId());
        }
        if (other.hasReason()) {
          setReason(other.getReason());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasAgentId()) {
                subBuilder.mergeFrom(getAgentId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAgentId(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasMemberId()) {
                subBuilder.mergeFrom(getMemberId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMemberId(subBuilder.buildPartial());
              break;
            }
            case 24: {
              setReason(input.readUInt32());
              break;
            }
          }
        }
      }
      
      
      // optional .bnet.protocol.EntityId agent_id = 1;
      public boolean hasAgentId() {
        return result.hasAgentId();
      }
      public bnet.protocol.Entity.EntityId getAgentId() {
        return result.getAgentId();
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasAgentId = true;
        result.agentId_ = builderForValue.build();
        return this;
      }
      public Builder mergeAgentId(bnet.protocol.Entity.EntityId value) {
        if (result.hasAgentId() &&
            result.agentId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.agentId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.agentId_).mergeFrom(value).buildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder clearAgentId() {
        result.hasAgentId = false;
        result.agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // required .bnet.protocol.EntityId member_id = 2;
      public boolean hasMemberId() {
        return result.hasMemberId();
      }
      public bnet.protocol.Entity.EntityId getMemberId() {
        return result.getMemberId();
      }
      public Builder setMemberId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasMemberId = true;
        result.memberId_ = value;
        return this;
      }
      public Builder setMemberId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasMemberId = true;
        result.memberId_ = builderForValue.build();
        return this;
      }
      public Builder mergeMemberId(bnet.protocol.Entity.EntityId value) {
        if (result.hasMemberId() &&
            result.memberId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.memberId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.memberId_).mergeFrom(value).buildPartial();
        } else {
          result.memberId_ = value;
        }
        result.hasMemberId = true;
        return this;
      }
      public Builder clearMemberId() {
        result.hasMemberId = false;
        result.memberId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // optional uint32 reason = 3;
      public boolean hasReason() {
        return result.hasReason();
      }
      public int getReason() {
        return result.getReason();
      }
      public Builder setReason(int value) {
        result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder clearReason() {
        result.hasReason = false;
        result.reason_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel.RemoveNotification)
    }
    
    static {
      defaultInstance = new RemoveNotification(true);
      bnet.protocol.channel.Channel.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel.RemoveNotification)
  }
  
  public static final class LeaveNotification extends
      com.google.protobuf.GeneratedMessage {
    // Use LeaveNotification.newBuilder() to construct.
    private LeaveNotification() {
      initFields();
    }
    private LeaveNotification(boolean noInit) {}
    
    private static final LeaveNotification defaultInstance;
    public static LeaveNotification getDefaultInstance() {
      return defaultInstance;
    }
    
    public LeaveNotification getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel.Channel.internal_static_bnet_protocol_channel_LeaveNotification_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel.Channel.internal_static_bnet_protocol_channel_LeaveNotification_fieldAccessorTable;
    }
    
    // optional .bnet.protocol.EntityId agent_id = 1;
    public static final int AGENT_ID_FIELD_NUMBER = 1;
    private boolean hasAgentId;
    private bnet.protocol.Entity.EntityId agentId_;
    public boolean hasAgentId() { return hasAgentId; }
    public bnet.protocol.Entity.EntityId getAgentId() { return agentId_; }
    
    // required .bnet.protocol.EntityId member_id = 2;
    public static final int MEMBER_ID_FIELD_NUMBER = 2;
    private boolean hasMemberId;
    private bnet.protocol.Entity.EntityId memberId_;
    public boolean hasMemberId() { return hasMemberId; }
    public bnet.protocol.Entity.EntityId getMemberId() { return memberId_; }
    
    private void initFields() {
      agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
      memberId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasMemberId) return false;
      if (hasAgentId()) {
        if (!getAgentId().isInitialized()) return false;
      }
      if (!getMemberId().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAgentId()) {
        output.writeMessage(1, getAgentId());
      }
      if (hasMemberId()) {
        output.writeMessage(2, getMemberId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAgentId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAgentId());
      }
      if (hasMemberId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getMemberId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel.Channel.LeaveNotification parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.Channel.LeaveNotification parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.Channel.LeaveNotification parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.Channel.LeaveNotification parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.Channel.LeaveNotification parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.Channel.LeaveNotification parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.Channel.LeaveNotification parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.Channel.LeaveNotification parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.Channel.LeaveNotification parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.Channel.LeaveNotification parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel.Channel.LeaveNotification prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel.Channel.LeaveNotification result;
      
      // Construct using bnet.protocol.channel.Channel.LeaveNotification.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel.Channel.LeaveNotification();
        return builder;
      }
      
      protected bnet.protocol.channel.Channel.LeaveNotification internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel.Channel.LeaveNotification();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel.Channel.LeaveNotification.getDescriptor();
      }
      
      public bnet.protocol.channel.Channel.LeaveNotification getDefaultInstanceForType() {
        return bnet.protocol.channel.Channel.LeaveNotification.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel.Channel.LeaveNotification build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel.Channel.LeaveNotification buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel.Channel.LeaveNotification buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.channel.Channel.LeaveNotification returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel.Channel.LeaveNotification) {
          return mergeFrom((bnet.protocol.channel.Channel.LeaveNotification)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel.Channel.LeaveNotification other) {
        if (other == bnet.protocol.channel.Channel.LeaveNotification.getDefaultInstance()) return this;
        if (other.hasAgentId()) {
          mergeAgentId(other.getAgentId());
        }
        if (other.hasMemberId()) {
          mergeMemberId(other.getMemberId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasAgentId()) {
                subBuilder.mergeFrom(getAgentId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAgentId(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasMemberId()) {
                subBuilder.mergeFrom(getMemberId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMemberId(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional .bnet.protocol.EntityId agent_id = 1;
      public boolean hasAgentId() {
        return result.hasAgentId();
      }
      public bnet.protocol.Entity.EntityId getAgentId() {
        return result.getAgentId();
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasAgentId = true;
        result.agentId_ = builderForValue.build();
        return this;
      }
      public Builder mergeAgentId(bnet.protocol.Entity.EntityId value) {
        if (result.hasAgentId() &&
            result.agentId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.agentId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.agentId_).mergeFrom(value).buildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder clearAgentId() {
        result.hasAgentId = false;
        result.agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // required .bnet.protocol.EntityId member_id = 2;
      public boolean hasMemberId() {
        return result.hasMemberId();
      }
      public bnet.protocol.Entity.EntityId getMemberId() {
        return result.getMemberId();
      }
      public Builder setMemberId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasMemberId = true;
        result.memberId_ = value;
        return this;
      }
      public Builder setMemberId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasMemberId = true;
        result.memberId_ = builderForValue.build();
        return this;
      }
      public Builder mergeMemberId(bnet.protocol.Entity.EntityId value) {
        if (result.hasMemberId() &&
            result.memberId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.memberId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.memberId_).mergeFrom(value).buildPartial();
        } else {
          result.memberId_ = value;
        }
        result.hasMemberId = true;
        return this;
      }
      public Builder clearMemberId() {
        result.hasMemberId = false;
        result.memberId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel.LeaveNotification)
    }
    
    static {
      defaultInstance = new LeaveNotification(true);
      bnet.protocol.channel.Channel.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel.LeaveNotification)
  }
  
  public static final class SendMessageNotification extends
      com.google.protobuf.GeneratedMessage {
    // Use SendMessageNotification.newBuilder() to construct.
    private SendMessageNotification() {
      initFields();
    }
    private SendMessageNotification(boolean noInit) {}
    
    private static final SendMessageNotification defaultInstance;
    public static SendMessageNotification getDefaultInstance() {
      return defaultInstance;
    }
    
    public SendMessageNotification getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel.Channel.internal_static_bnet_protocol_channel_SendMessageNotification_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel.Channel.internal_static_bnet_protocol_channel_SendMessageNotification_fieldAccessorTable;
    }
    
    // optional .bnet.protocol.EntityId agent_id = 1;
    public static final int AGENT_ID_FIELD_NUMBER = 1;
    private boolean hasAgentId;
    private bnet.protocol.Entity.EntityId agentId_;
    public boolean hasAgentId() { return hasAgentId; }
    public bnet.protocol.Entity.EntityId getAgentId() { return agentId_; }
    
    // required .bnet.protocol.channel.Message message = 2;
    public static final int MESSAGE_FIELD_NUMBER = 2;
    private boolean hasMessage;
    private bnet.protocol.channel.ChannelTypes.Message message_;
    public boolean hasMessage() { return hasMessage; }
    public bnet.protocol.channel.ChannelTypes.Message getMessage() { return message_; }
    
    // optional uint64 required_privileges = 3;
    public static final int REQUIRED_PRIVILEGES_FIELD_NUMBER = 3;
    private boolean hasRequiredPrivileges;
    private long requiredPrivileges_ = 0L;
    public boolean hasRequiredPrivileges() { return hasRequiredPrivileges; }
    public long getRequiredPrivileges() { return requiredPrivileges_; }
    
    private void initFields() {
      agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
      message_ = bnet.protocol.channel.ChannelTypes.Message.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasMessage) return false;
      if (hasAgentId()) {
        if (!getAgentId().isInitialized()) return false;
      }
      if (!getMessage().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAgentId()) {
        output.writeMessage(1, getAgentId());
      }
      if (hasMessage()) {
        output.writeMessage(2, getMessage());
      }
      if (hasRequiredPrivileges()) {
        output.writeUInt64(3, getRequiredPrivileges());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAgentId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAgentId());
      }
      if (hasMessage()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getMessage());
      }
      if (hasRequiredPrivileges()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, getRequiredPrivileges());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel.Channel.SendMessageNotification parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.Channel.SendMessageNotification parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.Channel.SendMessageNotification parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.Channel.SendMessageNotification parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.Channel.SendMessageNotification parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.Channel.SendMessageNotification parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.Channel.SendMessageNotification parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.Channel.SendMessageNotification parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.Channel.SendMessageNotification parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.Channel.SendMessageNotification parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel.Channel.SendMessageNotification prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel.Channel.SendMessageNotification result;
      
      // Construct using bnet.protocol.channel.Channel.SendMessageNotification.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel.Channel.SendMessageNotification();
        return builder;
      }
      
      protected bnet.protocol.channel.Channel.SendMessageNotification internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel.Channel.SendMessageNotification();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel.Channel.SendMessageNotification.getDescriptor();
      }
      
      public bnet.protocol.channel.Channel.SendMessageNotification getDefaultInstanceForType() {
        return bnet.protocol.channel.Channel.SendMessageNotification.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel.Channel.SendMessageNotification build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel.Channel.SendMessageNotification buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel.Channel.SendMessageNotification buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.channel.Channel.SendMessageNotification returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel.Channel.SendMessageNotification) {
          return mergeFrom((bnet.protocol.channel.Channel.SendMessageNotification)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel.Channel.SendMessageNotification other) {
        if (other == bnet.protocol.channel.Channel.SendMessageNotification.getDefaultInstance()) return this;
        if (other.hasAgentId()) {
          mergeAgentId(other.getAgentId());
        }
        if (other.hasMessage()) {
          mergeMessage(other.getMessage());
        }
        if (other.hasRequiredPrivileges()) {
          setRequiredPrivileges(other.getRequiredPrivileges());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasAgentId()) {
                subBuilder.mergeFrom(getAgentId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAgentId(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bnet.protocol.channel.ChannelTypes.Message.Builder subBuilder = bnet.protocol.channel.ChannelTypes.Message.newBuilder();
              if (hasMessage()) {
                subBuilder.mergeFrom(getMessage());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMessage(subBuilder.buildPartial());
              break;
            }
            case 24: {
              setRequiredPrivileges(input.readUInt64());
              break;
            }
          }
        }
      }
      
      
      // optional .bnet.protocol.EntityId agent_id = 1;
      public boolean hasAgentId() {
        return result.hasAgentId();
      }
      public bnet.protocol.Entity.EntityId getAgentId() {
        return result.getAgentId();
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasAgentId = true;
        result.agentId_ = builderForValue.build();
        return this;
      }
      public Builder mergeAgentId(bnet.protocol.Entity.EntityId value) {
        if (result.hasAgentId() &&
            result.agentId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.agentId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.agentId_).mergeFrom(value).buildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder clearAgentId() {
        result.hasAgentId = false;
        result.agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // required .bnet.protocol.channel.Message message = 2;
      public boolean hasMessage() {
        return result.hasMessage();
      }
      public bnet.protocol.channel.ChannelTypes.Message getMessage() {
        return result.getMessage();
      }
      public Builder setMessage(bnet.protocol.channel.ChannelTypes.Message value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasMessage = true;
        result.message_ = value;
        return this;
      }
      public Builder setMessage(bnet.protocol.channel.ChannelTypes.Message.Builder builderForValue) {
        result.hasMessage = true;
        result.message_ = builderForValue.build();
        return this;
      }
      public Builder mergeMessage(bnet.protocol.channel.ChannelTypes.Message value) {
        if (result.hasMessage() &&
            result.message_ != bnet.protocol.channel.ChannelTypes.Message.getDefaultInstance()) {
          result.message_ =
            bnet.protocol.channel.ChannelTypes.Message.newBuilder(result.message_).mergeFrom(value).buildPartial();
        } else {
          result.message_ = value;
        }
        result.hasMessage = true;
        return this;
      }
      public Builder clearMessage() {
        result.hasMessage = false;
        result.message_ = bnet.protocol.channel.ChannelTypes.Message.getDefaultInstance();
        return this;
      }
      
      // optional uint64 required_privileges = 3;
      public boolean hasRequiredPrivileges() {
        return result.hasRequiredPrivileges();
      }
      public long getRequiredPrivileges() {
        return result.getRequiredPrivileges();
      }
      public Builder setRequiredPrivileges(long value) {
        result.hasRequiredPrivileges = true;
        result.requiredPrivileges_ = value;
        return this;
      }
      public Builder clearRequiredPrivileges() {
        result.hasRequiredPrivileges = false;
        result.requiredPrivileges_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel.SendMessageNotification)
    }
    
    static {
      defaultInstance = new SendMessageNotification(true);
      bnet.protocol.channel.Channel.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel.SendMessageNotification)
  }
  
  public static final class UpdateChannelStateNotification extends
      com.google.protobuf.GeneratedMessage {
    // Use UpdateChannelStateNotification.newBuilder() to construct.
    private UpdateChannelStateNotification() {
      initFields();
    }
    private UpdateChannelStateNotification(boolean noInit) {}
    
    private static final UpdateChannelStateNotification defaultInstance;
    public static UpdateChannelStateNotification getDefaultInstance() {
      return defaultInstance;
    }
    
    public UpdateChannelStateNotification getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel.Channel.internal_static_bnet_protocol_channel_UpdateChannelStateNotification_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel.Channel.internal_static_bnet_protocol_channel_UpdateChannelStateNotification_fieldAccessorTable;
    }
    
    // optional .bnet.protocol.EntityId agent_id = 1;
    public static final int AGENT_ID_FIELD_NUMBER = 1;
    private boolean hasAgentId;
    private bnet.protocol.Entity.EntityId agentId_;
    public boolean hasAgentId() { return hasAgentId; }
    public bnet.protocol.Entity.EntityId getAgentId() { return agentId_; }
    
    // required .bnet.protocol.channel.ChannelState state_change = 2;
    public static final int STATE_CHANGE_FIELD_NUMBER = 2;
    private boolean hasStateChange;
    private bnet.protocol.channel.ChannelTypes.ChannelState stateChange_;
    public boolean hasStateChange() { return hasStateChange; }
    public bnet.protocol.channel.ChannelTypes.ChannelState getStateChange() { return stateChange_; }
    
    private void initFields() {
      agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
      stateChange_ = bnet.protocol.channel.ChannelTypes.ChannelState.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasStateChange) return false;
      if (hasAgentId()) {
        if (!getAgentId().isInitialized()) return false;
      }
      if (!getStateChange().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAgentId()) {
        output.writeMessage(1, getAgentId());
      }
      if (hasStateChange()) {
        output.writeMessage(2, getStateChange());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAgentId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAgentId());
      }
      if (hasStateChange()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getStateChange());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel.Channel.UpdateChannelStateNotification parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.Channel.UpdateChannelStateNotification parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.Channel.UpdateChannelStateNotification parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.Channel.UpdateChannelStateNotification parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.Channel.UpdateChannelStateNotification parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.Channel.UpdateChannelStateNotification parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.Channel.UpdateChannelStateNotification parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.Channel.UpdateChannelStateNotification parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.Channel.UpdateChannelStateNotification parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.Channel.UpdateChannelStateNotification parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel.Channel.UpdateChannelStateNotification prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel.Channel.UpdateChannelStateNotification result;
      
      // Construct using bnet.protocol.channel.Channel.UpdateChannelStateNotification.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel.Channel.UpdateChannelStateNotification();
        return builder;
      }
      
      protected bnet.protocol.channel.Channel.UpdateChannelStateNotification internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel.Channel.UpdateChannelStateNotification();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel.Channel.UpdateChannelStateNotification.getDescriptor();
      }
      
      public bnet.protocol.channel.Channel.UpdateChannelStateNotification getDefaultInstanceForType() {
        return bnet.protocol.channel.Channel.UpdateChannelStateNotification.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel.Channel.UpdateChannelStateNotification build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel.Channel.UpdateChannelStateNotification buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel.Channel.UpdateChannelStateNotification buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.channel.Channel.UpdateChannelStateNotification returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel.Channel.UpdateChannelStateNotification) {
          return mergeFrom((bnet.protocol.channel.Channel.UpdateChannelStateNotification)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel.Channel.UpdateChannelStateNotification other) {
        if (other == bnet.protocol.channel.Channel.UpdateChannelStateNotification.getDefaultInstance()) return this;
        if (other.hasAgentId()) {
          mergeAgentId(other.getAgentId());
        }
        if (other.hasStateChange()) {
          mergeStateChange(other.getStateChange());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasAgentId()) {
                subBuilder.mergeFrom(getAgentId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAgentId(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bnet.protocol.channel.ChannelTypes.ChannelState.Builder subBuilder = bnet.protocol.channel.ChannelTypes.ChannelState.newBuilder();
              if (hasStateChange()) {
                subBuilder.mergeFrom(getStateChange());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setStateChange(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional .bnet.protocol.EntityId agent_id = 1;
      public boolean hasAgentId() {
        return result.hasAgentId();
      }
      public bnet.protocol.Entity.EntityId getAgentId() {
        return result.getAgentId();
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasAgentId = true;
        result.agentId_ = builderForValue.build();
        return this;
      }
      public Builder mergeAgentId(bnet.protocol.Entity.EntityId value) {
        if (result.hasAgentId() &&
            result.agentId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.agentId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.agentId_).mergeFrom(value).buildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder clearAgentId() {
        result.hasAgentId = false;
        result.agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // required .bnet.protocol.channel.ChannelState state_change = 2;
      public boolean hasStateChange() {
        return result.hasStateChange();
      }
      public bnet.protocol.channel.ChannelTypes.ChannelState getStateChange() {
        return result.getStateChange();
      }
      public Builder setStateChange(bnet.protocol.channel.ChannelTypes.ChannelState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasStateChange = true;
        result.stateChange_ = value;
        return this;
      }
      public Builder setStateChange(bnet.protocol.channel.ChannelTypes.ChannelState.Builder builderForValue) {
        result.hasStateChange = true;
        result.stateChange_ = builderForValue.build();
        return this;
      }
      public Builder mergeStateChange(bnet.protocol.channel.ChannelTypes.ChannelState value) {
        if (result.hasStateChange() &&
            result.stateChange_ != bnet.protocol.channel.ChannelTypes.ChannelState.getDefaultInstance()) {
          result.stateChange_ =
            bnet.protocol.channel.ChannelTypes.ChannelState.newBuilder(result.stateChange_).mergeFrom(value).buildPartial();
        } else {
          result.stateChange_ = value;
        }
        result.hasStateChange = true;
        return this;
      }
      public Builder clearStateChange() {
        result.hasStateChange = false;
        result.stateChange_ = bnet.protocol.channel.ChannelTypes.ChannelState.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel.UpdateChannelStateNotification)
    }
    
    static {
      defaultInstance = new UpdateChannelStateNotification(true);
      bnet.protocol.channel.Channel.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel.UpdateChannelStateNotification)
  }
  
  public static final class UpdateMemberStateNotification extends
      com.google.protobuf.GeneratedMessage {
    // Use UpdateMemberStateNotification.newBuilder() to construct.
    private UpdateMemberStateNotification() {
      initFields();
    }
    private UpdateMemberStateNotification(boolean noInit) {}
    
    private static final UpdateMemberStateNotification defaultInstance;
    public static UpdateMemberStateNotification getDefaultInstance() {
      return defaultInstance;
    }
    
    public UpdateMemberStateNotification getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel.Channel.internal_static_bnet_protocol_channel_UpdateMemberStateNotification_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel.Channel.internal_static_bnet_protocol_channel_UpdateMemberStateNotification_fieldAccessorTable;
    }
    
    // optional .bnet.protocol.EntityId agent_id = 1;
    public static final int AGENT_ID_FIELD_NUMBER = 1;
    private boolean hasAgentId;
    private bnet.protocol.Entity.EntityId agentId_;
    public boolean hasAgentId() { return hasAgentId; }
    public bnet.protocol.Entity.EntityId getAgentId() { return agentId_; }
    
    // repeated .bnet.protocol.channel.Member state_change = 2;
    public static final int STATE_CHANGE_FIELD_NUMBER = 2;
    private java.util.List<bnet.protocol.channel.ChannelTypes.Member> stateChange_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.channel.ChannelTypes.Member> getStateChangeList() {
      return stateChange_;
    }
    public int getStateChangeCount() { return stateChange_.size(); }
    public bnet.protocol.channel.ChannelTypes.Member getStateChange(int index) {
      return stateChange_.get(index);
    }
    
    private void initFields() {
      agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (hasAgentId()) {
        if (!getAgentId().isInitialized()) return false;
      }
      for (bnet.protocol.channel.ChannelTypes.Member element : getStateChangeList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAgentId()) {
        output.writeMessage(1, getAgentId());
      }
      for (bnet.protocol.channel.ChannelTypes.Member element : getStateChangeList()) {
        output.writeMessage(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAgentId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAgentId());
      }
      for (bnet.protocol.channel.ChannelTypes.Member element : getStateChangeList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel.Channel.UpdateMemberStateNotification parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.Channel.UpdateMemberStateNotification parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.Channel.UpdateMemberStateNotification parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel.Channel.UpdateMemberStateNotification parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.Channel.UpdateMemberStateNotification parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.Channel.UpdateMemberStateNotification parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel.Channel.UpdateMemberStateNotification parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.Channel.UpdateMemberStateNotification parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel.Channel.UpdateMemberStateNotification parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel.Channel.UpdateMemberStateNotification parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel.Channel.UpdateMemberStateNotification prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel.Channel.UpdateMemberStateNotification result;
      
      // Construct using bnet.protocol.channel.Channel.UpdateMemberStateNotification.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel.Channel.UpdateMemberStateNotification();
        return builder;
      }
      
      protected bnet.protocol.channel.Channel.UpdateMemberStateNotification internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel.Channel.UpdateMemberStateNotification();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel.Channel.UpdateMemberStateNotification.getDescriptor();
      }
      
      public bnet.protocol.channel.Channel.UpdateMemberStateNotification getDefaultInstanceForType() {
        return bnet.protocol.channel.Channel.UpdateMemberStateNotification.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel.Channel.UpdateMemberStateNotification build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel.Channel.UpdateMemberStateNotification buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel.Channel.UpdateMemberStateNotification buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.stateChange_ != java.util.Collections.EMPTY_LIST) {
          result.stateChange_ =
            java.util.Collections.unmodifiableList(result.stateChange_);
        }
        bnet.protocol.channel.Channel.UpdateMemberStateNotification returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel.Channel.UpdateMemberStateNotification) {
          return mergeFrom((bnet.protocol.channel.Channel.UpdateMemberStateNotification)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel.Channel.UpdateMemberStateNotification other) {
        if (other == bnet.protocol.channel.Channel.UpdateMemberStateNotification.getDefaultInstance()) return this;
        if (other.hasAgentId()) {
          mergeAgentId(other.getAgentId());
        }
        if (!other.stateChange_.isEmpty()) {
          if (result.stateChange_.isEmpty()) {
            result.stateChange_ = new java.util.ArrayList<bnet.protocol.channel.ChannelTypes.Member>();
          }
          result.stateChange_.addAll(other.stateChange_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasAgentId()) {
                subBuilder.mergeFrom(getAgentId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAgentId(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bnet.protocol.channel.ChannelTypes.Member.Builder subBuilder = bnet.protocol.channel.ChannelTypes.Member.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addStateChange(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional .bnet.protocol.EntityId agent_id = 1;
      public boolean hasAgentId() {
        return result.hasAgentId();
      }
      public bnet.protocol.Entity.EntityId getAgentId() {
        return result.getAgentId();
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasAgentId = true;
        result.agentId_ = builderForValue.build();
        return this;
      }
      public Builder mergeAgentId(bnet.protocol.Entity.EntityId value) {
        if (result.hasAgentId() &&
            result.agentId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.agentId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.agentId_).mergeFrom(value).buildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder clearAgentId() {
        result.hasAgentId = false;
        result.agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // repeated .bnet.protocol.channel.Member state_change = 2;
      public java.util.List<bnet.protocol.channel.ChannelTypes.Member> getStateChangeList() {
        return java.util.Collections.unmodifiableList(result.stateChange_);
      }
      public int getStateChangeCount() {
        return result.getStateChangeCount();
      }
      public bnet.protocol.channel.ChannelTypes.Member getStateChange(int index) {
        return result.getStateChange(index);
      }
      public Builder setStateChange(int index, bnet.protocol.channel.ChannelTypes.Member value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.stateChange_.set(index, value);
        return this;
      }
      public Builder setStateChange(int index, bnet.protocol.channel.ChannelTypes.Member.Builder builderForValue) {
        result.stateChange_.set(index, builderForValue.build());
        return this;
      }
      public Builder addStateChange(bnet.protocol.channel.ChannelTypes.Member value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.stateChange_.isEmpty()) {
          result.stateChange_ = new java.util.ArrayList<bnet.protocol.channel.ChannelTypes.Member>();
        }
        result.stateChange_.add(value);
        return this;
      }
      public Builder addStateChange(bnet.protocol.channel.ChannelTypes.Member.Builder builderForValue) {
        if (result.stateChange_.isEmpty()) {
          result.stateChange_ = new java.util.ArrayList<bnet.protocol.channel.ChannelTypes.Member>();
        }
        result.stateChange_.add(builderForValue.build());
        return this;
      }
      public Builder addAllStateChange(
          java.lang.Iterable<? extends bnet.protocol.channel.ChannelTypes.Member> values) {
        if (result.stateChange_.isEmpty()) {
          result.stateChange_ = new java.util.ArrayList<bnet.protocol.channel.ChannelTypes.Member>();
        }
        super.addAll(values, result.stateChange_);
        return this;
      }
      public Builder clearStateChange() {
        result.stateChange_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel.UpdateMemberStateNotification)
    }
    
    static {
      defaultInstance = new UpdateMemberStateNotification(true);
      bnet.protocol.channel.Channel.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel.UpdateMemberStateNotification)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_AddMemberRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_AddMemberRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_RemoveMemberRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_RemoveMemberRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_SendMessageRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_SendMessageRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_UpdateChannelStateRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_UpdateChannelStateRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_UpdateMemberStateRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_UpdateMemberStateRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_DissolveRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_DissolveRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_SetRolesRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_SetRolesRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_AddNotification_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_AddNotification_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_JoinNotification_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_JoinNotification_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_RemoveNotification_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_RemoveNotification_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_LeaveNotification_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_LeaveNotification_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_SendMessageNotification_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_SendMessageNotification_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_UpdateChannelStateNotification_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_UpdateChannelStateNotification_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_UpdateMemberStateNotification_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_UpdateMemberStateNotification_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n(service/channel/definition/channel.pro" +
      "to\022\025bnet.protocol.channel\032\034lib/protocol/" +
      "attribute.proto\032\031lib/protocol/entity.pro" +
      "to\032\021lib/rpc/rpc.proto\032#service/channel/c" +
      "hannel_types.proto\"\265\001\n\020AddMemberRequest\022" +
      ")\n\010agent_id\030\001 \001(\0132\027.bnet.protocol.Entity" +
      "Id\0220\n\017member_identity\030\002 \002(\0132\027.bnet.proto" +
      "col.Identity\0221\n\005state\030\003 \002(\0132\".bnet.proto" +
      "col.channel.MemberState\022\021\n\tobject_id\030\004 \002" +
      "(\004\"|\n\023RemoveMemberRequest\022)\n\010agent_id\030\001 ",
      "\001(\0132\027.bnet.protocol.EntityId\022*\n\tmember_i" +
      "d\030\002 \002(\0132\027.bnet.protocol.EntityId\022\016\n\006reas" +
      "on\030\003 \001(\r\"\215\001\n\022SendMessageRequest\022)\n\010agent" +
      "_id\030\001 \001(\0132\027.bnet.protocol.EntityId\022/\n\007me" +
      "ssage\030\002 \002(\0132\036.bnet.protocol.channel.Mess" +
      "age\022\033\n\023required_privileges\030\003 \001(\004\"\201\001\n\031Upd" +
      "ateChannelStateRequest\022)\n\010agent_id\030\001 \001(\013" +
      "2\027.bnet.protocol.EntityId\0229\n\014state_chang" +
      "e\030\002 \002(\0132#.bnet.protocol.channel.ChannelS" +
      "tate\"z\n\030UpdateMemberStateRequest\022)\n\010agen",
      "t_id\030\001 \001(\0132\027.bnet.protocol.EntityId\0223\n\014s" +
      "tate_change\030\002 \003(\0132\035.bnet.protocol.channe" +
      "l.Member\"L\n\017DissolveRequest\022)\n\010agent_id\030" +
      "\001 \001(\0132\027.bnet.protocol.EntityId\022\016\n\006reason" +
      "\030\002 \001(\r\"v\n\017SetRolesRequest\022)\n\010agent_id\030\001 " +
      "\001(\0132\027.bnet.protocol.EntityId\022\014\n\004role\030\002 \003" +
      "(\r\022*\n\tmember_id\030\003 \003(\0132\027.bnet.protocol.En" +
      "tityId\"\251\001\n\017AddNotification\022+\n\004self\030\001 \001(\013" +
      "2\035.bnet.protocol.channel.Member\022-\n\006membe" +
      "r\030\002 \003(\0132\035.bnet.protocol.channel.Member\022:",
      "\n\rchannel_state\030\003 \002(\0132#.bnet.protocol.ch" +
      "annel.ChannelState\"A\n\020JoinNotification\022-" +
      "\n\006member\030\001 \002(\0132\035.bnet.protocol.channel.M" +
      "ember\"{\n\022RemoveNotification\022)\n\010agent_id\030" +
      "\001 \001(\0132\027.bnet.protocol.EntityId\022*\n\tmember" +
      "_id\030\002 \002(\0132\027.bnet.protocol.EntityId\022\016\n\006re" +
      "ason\030\003 \001(\r\"j\n\021LeaveNotification\022)\n\010agent" +
      "_id\030\001 \001(\0132\027.bnet.protocol.EntityId\022*\n\tme" +
      "mber_id\030\002 \002(\0132\027.bnet.protocol.EntityId\"\222" +
      "\001\n\027SendMessageNotification\022)\n\010agent_id\030\001",
      " \001(\0132\027.bnet.protocol.EntityId\022/\n\007message" +
      "\030\002 \002(\0132\036.bnet.protocol.channel.Message\022\033" +
      "\n\023required_privileges\030\003 \001(\004\"\206\001\n\036UpdateCh" +
      "annelStateNotification\022)\n\010agent_id\030\001 \001(\013" +
      "2\027.bnet.protocol.EntityId\0229\n\014state_chang" +
      "e\030\002 \002(\0132#.bnet.protocol.channel.ChannelS" +
      "tate\"\177\n\035UpdateMemberStateNotification\022)\n" +
      "\010agent_id\030\001 \001(\0132\027.bnet.protocol.EntityId" +
      "\0223\n\014state_change\030\002 \003(\0132\035.bnet.protocol.c" +
      "hannel.Member"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_bnet_protocol_channel_AddMemberRequest_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_bnet_protocol_channel_AddMemberRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_AddMemberRequest_descriptor,
              new java.lang.String[] { "AgentId", "MemberIdentity", "State", "ObjectId", },
              bnet.protocol.channel.Channel.AddMemberRequest.class,
              bnet.protocol.channel.Channel.AddMemberRequest.Builder.class);
          internal_static_bnet_protocol_channel_RemoveMemberRequest_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_bnet_protocol_channel_RemoveMemberRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_RemoveMemberRequest_descriptor,
              new java.lang.String[] { "AgentId", "MemberId", "Reason", },
              bnet.protocol.channel.Channel.RemoveMemberRequest.class,
              bnet.protocol.channel.Channel.RemoveMemberRequest.Builder.class);
          internal_static_bnet_protocol_channel_SendMessageRequest_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_bnet_protocol_channel_SendMessageRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_SendMessageRequest_descriptor,
              new java.lang.String[] { "AgentId", "Message", "RequiredPrivileges", },
              bnet.protocol.channel.Channel.SendMessageRequest.class,
              bnet.protocol.channel.Channel.SendMessageRequest.Builder.class);
          internal_static_bnet_protocol_channel_UpdateChannelStateRequest_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_bnet_protocol_channel_UpdateChannelStateRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_UpdateChannelStateRequest_descriptor,
              new java.lang.String[] { "AgentId", "StateChange", },
              bnet.protocol.channel.Channel.UpdateChannelStateRequest.class,
              bnet.protocol.channel.Channel.UpdateChannelStateRequest.Builder.class);
          internal_static_bnet_protocol_channel_UpdateMemberStateRequest_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_bnet_protocol_channel_UpdateMemberStateRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_UpdateMemberStateRequest_descriptor,
              new java.lang.String[] { "AgentId", "StateChange", },
              bnet.protocol.channel.Channel.UpdateMemberStateRequest.class,
              bnet.protocol.channel.Channel.UpdateMemberStateRequest.Builder.class);
          internal_static_bnet_protocol_channel_DissolveRequest_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_bnet_protocol_channel_DissolveRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_DissolveRequest_descriptor,
              new java.lang.String[] { "AgentId", "Reason", },
              bnet.protocol.channel.Channel.DissolveRequest.class,
              bnet.protocol.channel.Channel.DissolveRequest.Builder.class);
          internal_static_bnet_protocol_channel_SetRolesRequest_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_bnet_protocol_channel_SetRolesRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_SetRolesRequest_descriptor,
              new java.lang.String[] { "AgentId", "Role", "MemberId", },
              bnet.protocol.channel.Channel.SetRolesRequest.class,
              bnet.protocol.channel.Channel.SetRolesRequest.Builder.class);
          internal_static_bnet_protocol_channel_AddNotification_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_bnet_protocol_channel_AddNotification_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_AddNotification_descriptor,
              new java.lang.String[] { "Self", "Member", "ChannelState", },
              bnet.protocol.channel.Channel.AddNotification.class,
              bnet.protocol.channel.Channel.AddNotification.Builder.class);
          internal_static_bnet_protocol_channel_JoinNotification_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_bnet_protocol_channel_JoinNotification_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_JoinNotification_descriptor,
              new java.lang.String[] { "Member", },
              bnet.protocol.channel.Channel.JoinNotification.class,
              bnet.protocol.channel.Channel.JoinNotification.Builder.class);
          internal_static_bnet_protocol_channel_RemoveNotification_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_bnet_protocol_channel_RemoveNotification_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_RemoveNotification_descriptor,
              new java.lang.String[] { "AgentId", "MemberId", "Reason", },
              bnet.protocol.channel.Channel.RemoveNotification.class,
              bnet.protocol.channel.Channel.RemoveNotification.Builder.class);
          internal_static_bnet_protocol_channel_LeaveNotification_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_bnet_protocol_channel_LeaveNotification_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_LeaveNotification_descriptor,
              new java.lang.String[] { "AgentId", "MemberId", },
              bnet.protocol.channel.Channel.LeaveNotification.class,
              bnet.protocol.channel.Channel.LeaveNotification.Builder.class);
          internal_static_bnet_protocol_channel_SendMessageNotification_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_bnet_protocol_channel_SendMessageNotification_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_SendMessageNotification_descriptor,
              new java.lang.String[] { "AgentId", "Message", "RequiredPrivileges", },
              bnet.protocol.channel.Channel.SendMessageNotification.class,
              bnet.protocol.channel.Channel.SendMessageNotification.Builder.class);
          internal_static_bnet_protocol_channel_UpdateChannelStateNotification_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_bnet_protocol_channel_UpdateChannelStateNotification_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_UpdateChannelStateNotification_descriptor,
              new java.lang.String[] { "AgentId", "StateChange", },
              bnet.protocol.channel.Channel.UpdateChannelStateNotification.class,
              bnet.protocol.channel.Channel.UpdateChannelStateNotification.Builder.class);
          internal_static_bnet_protocol_channel_UpdateMemberStateNotification_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_bnet_protocol_channel_UpdateMemberStateNotification_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_UpdateMemberStateNotification_descriptor,
              new java.lang.String[] { "AgentId", "StateChange", },
              bnet.protocol.channel.Channel.UpdateMemberStateNotification.class,
              bnet.protocol.channel.Channel.UpdateMemberStateNotification.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          bnet.protocol.attribute.AttributeProto.getDescriptor(),
          bnet.protocol.Entity.getDescriptor(),
          bnet.protocol.Rpc.getDescriptor(),
          bnet.protocol.channel.ChannelTypes.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
