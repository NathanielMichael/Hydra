// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service/channel_invitation/definition/channel_invitation.proto

package bnet.protocol.channel_invitation;

public final class ChannelInvitation {
  private ChannelInvitation() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class AcceptInvitationRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use AcceptInvitationRequest.newBuilder() to construct.
    private AcceptInvitationRequest() {
      initFields();
    }
    private AcceptInvitationRequest(boolean noInit) {}
    
    private static final AcceptInvitationRequest defaultInstance;
    public static AcceptInvitationRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public AcceptInvitationRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel_invitation.ChannelInvitation.internal_static_bnet_protocol_channel_invitation_AcceptInvitationRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel_invitation.ChannelInvitation.internal_static_bnet_protocol_channel_invitation_AcceptInvitationRequest_fieldAccessorTable;
    }
    
    // optional .bnet.protocol.EntityId agent_id = 1;
    public static final int AGENT_ID_FIELD_NUMBER = 1;
    private boolean hasAgentId;
    private bnet.protocol.Entity.EntityId agentId_;
    public boolean hasAgentId() { return hasAgentId; }
    public bnet.protocol.Entity.EntityId getAgentId() { return agentId_; }
    
    // required fixed64 invitation_id = 2;
    public static final int INVITATION_ID_FIELD_NUMBER = 2;
    private boolean hasInvitationId;
    private long invitationId_ = 0L;
    public boolean hasInvitationId() { return hasInvitationId; }
    public long getInvitationId() { return invitationId_; }
    
    // required uint64 object_id = 3;
    public static final int OBJECT_ID_FIELD_NUMBER = 3;
    private boolean hasObjectId;
    private long objectId_ = 0L;
    public boolean hasObjectId() { return hasObjectId; }
    public long getObjectId() { return objectId_; }
    
    private void initFields() {
      agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasInvitationId) return false;
      if (!hasObjectId) return false;
      if (hasAgentId()) {
        if (!getAgentId().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAgentId()) {
        output.writeMessage(1, getAgentId());
      }
      if (hasInvitationId()) {
        output.writeFixed64(2, getInvitationId());
      }
      if (hasObjectId()) {
        output.writeUInt64(3, getObjectId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAgentId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAgentId());
      }
      if (hasInvitationId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, getInvitationId());
      }
      if (hasObjectId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, getObjectId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationRequest result;
      
      // Construct using bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationRequest();
        return builder;
      }
      
      protected bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationRequest.getDescriptor();
      }
      
      public bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationRequest getDefaultInstanceForType() {
        return bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationRequest) {
          return mergeFrom((bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationRequest other) {
        if (other == bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationRequest.getDefaultInstance()) return this;
        if (other.hasAgentId()) {
          mergeAgentId(other.getAgentId());
        }
        if (other.hasInvitationId()) {
          setInvitationId(other.getInvitationId());
        }
        if (other.hasObjectId()) {
          setObjectId(other.getObjectId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasAgentId()) {
                subBuilder.mergeFrom(getAgentId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAgentId(subBuilder.buildPartial());
              break;
            }
            case 17: {
              setInvitationId(input.readFixed64());
              break;
            }
            case 24: {
              setObjectId(input.readUInt64());
              break;
            }
          }
        }
      }
      
      
      // optional .bnet.protocol.EntityId agent_id = 1;
      public boolean hasAgentId() {
        return result.hasAgentId();
      }
      public bnet.protocol.Entity.EntityId getAgentId() {
        return result.getAgentId();
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasAgentId = true;
        result.agentId_ = builderForValue.build();
        return this;
      }
      public Builder mergeAgentId(bnet.protocol.Entity.EntityId value) {
        if (result.hasAgentId() &&
            result.agentId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.agentId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.agentId_).mergeFrom(value).buildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder clearAgentId() {
        result.hasAgentId = false;
        result.agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // required fixed64 invitation_id = 2;
      public boolean hasInvitationId() {
        return result.hasInvitationId();
      }
      public long getInvitationId() {
        return result.getInvitationId();
      }
      public Builder setInvitationId(long value) {
        result.hasInvitationId = true;
        result.invitationId_ = value;
        return this;
      }
      public Builder clearInvitationId() {
        result.hasInvitationId = false;
        result.invitationId_ = 0L;
        return this;
      }
      
      // required uint64 object_id = 3;
      public boolean hasObjectId() {
        return result.hasObjectId();
      }
      public long getObjectId() {
        return result.getObjectId();
      }
      public Builder setObjectId(long value) {
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder clearObjectId() {
        result.hasObjectId = false;
        result.objectId_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel_invitation.AcceptInvitationRequest)
    }
    
    static {
      defaultInstance = new AcceptInvitationRequest(true);
      bnet.protocol.channel_invitation.ChannelInvitation.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel_invitation.AcceptInvitationRequest)
  }
  
  public static final class AcceptInvitationResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use AcceptInvitationResponse.newBuilder() to construct.
    private AcceptInvitationResponse() {
      initFields();
    }
    private AcceptInvitationResponse(boolean noInit) {}
    
    private static final AcceptInvitationResponse defaultInstance;
    public static AcceptInvitationResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public AcceptInvitationResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel_invitation.ChannelInvitation.internal_static_bnet_protocol_channel_invitation_AcceptInvitationResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel_invitation.ChannelInvitation.internal_static_bnet_protocol_channel_invitation_AcceptInvitationResponse_fieldAccessorTable;
    }
    
    // required uint64 object_id = 1;
    public static final int OBJECT_ID_FIELD_NUMBER = 1;
    private boolean hasObjectId;
    private long objectId_ = 0L;
    public boolean hasObjectId() { return hasObjectId; }
    public long getObjectId() { return objectId_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasObjectId) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasObjectId()) {
        output.writeUInt64(1, getObjectId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasObjectId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, getObjectId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationResponse result;
      
      // Construct using bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationResponse();
        return builder;
      }
      
      protected bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationResponse.getDescriptor();
      }
      
      public bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationResponse getDefaultInstanceForType() {
        return bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationResponse) {
          return mergeFrom((bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationResponse other) {
        if (other == bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationResponse.getDefaultInstance()) return this;
        if (other.hasObjectId()) {
          setObjectId(other.getObjectId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setObjectId(input.readUInt64());
              break;
            }
          }
        }
      }
      
      
      // required uint64 object_id = 1;
      public boolean hasObjectId() {
        return result.hasObjectId();
      }
      public long getObjectId() {
        return result.getObjectId();
      }
      public Builder setObjectId(long value) {
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder clearObjectId() {
        result.hasObjectId = false;
        result.objectId_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel_invitation.AcceptInvitationResponse)
    }
    
    static {
      defaultInstance = new AcceptInvitationResponse(true);
      bnet.protocol.channel_invitation.ChannelInvitation.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel_invitation.AcceptInvitationResponse)
  }
  
  public static final class SubscribeRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use SubscribeRequest.newBuilder() to construct.
    private SubscribeRequest() {
      initFields();
    }
    private SubscribeRequest(boolean noInit) {}
    
    private static final SubscribeRequest defaultInstance;
    public static SubscribeRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public SubscribeRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel_invitation.ChannelInvitation.internal_static_bnet_protocol_channel_invitation_SubscribeRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel_invitation.ChannelInvitation.internal_static_bnet_protocol_channel_invitation_SubscribeRequest_fieldAccessorTable;
    }
    
    // optional .bnet.protocol.EntityId agent_id = 1;
    public static final int AGENT_ID_FIELD_NUMBER = 1;
    private boolean hasAgentId;
    private bnet.protocol.Entity.EntityId agentId_;
    public boolean hasAgentId() { return hasAgentId; }
    public bnet.protocol.Entity.EntityId getAgentId() { return agentId_; }
    
    // required uint64 object_id = 2;
    public static final int OBJECT_ID_FIELD_NUMBER = 2;
    private boolean hasObjectId;
    private long objectId_ = 0L;
    public boolean hasObjectId() { return hasObjectId; }
    public long getObjectId() { return objectId_; }
    
    private void initFields() {
      agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasObjectId) return false;
      if (hasAgentId()) {
        if (!getAgentId().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAgentId()) {
        output.writeMessage(1, getAgentId());
      }
      if (hasObjectId()) {
        output.writeUInt64(2, getObjectId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAgentId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAgentId());
      }
      if (hasObjectId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, getObjectId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel_invitation.ChannelInvitation.SubscribeRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.SubscribeRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.SubscribeRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.SubscribeRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.SubscribeRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.SubscribeRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.SubscribeRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.SubscribeRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.SubscribeRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.SubscribeRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel_invitation.ChannelInvitation.SubscribeRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel_invitation.ChannelInvitation.SubscribeRequest result;
      
      // Construct using bnet.protocol.channel_invitation.ChannelInvitation.SubscribeRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel_invitation.ChannelInvitation.SubscribeRequest();
        return builder;
      }
      
      protected bnet.protocol.channel_invitation.ChannelInvitation.SubscribeRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel_invitation.ChannelInvitation.SubscribeRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel_invitation.ChannelInvitation.SubscribeRequest.getDescriptor();
      }
      
      public bnet.protocol.channel_invitation.ChannelInvitation.SubscribeRequest getDefaultInstanceForType() {
        return bnet.protocol.channel_invitation.ChannelInvitation.SubscribeRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel_invitation.ChannelInvitation.SubscribeRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel_invitation.ChannelInvitation.SubscribeRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel_invitation.ChannelInvitation.SubscribeRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.channel_invitation.ChannelInvitation.SubscribeRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel_invitation.ChannelInvitation.SubscribeRequest) {
          return mergeFrom((bnet.protocol.channel_invitation.ChannelInvitation.SubscribeRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel_invitation.ChannelInvitation.SubscribeRequest other) {
        if (other == bnet.protocol.channel_invitation.ChannelInvitation.SubscribeRequest.getDefaultInstance()) return this;
        if (other.hasAgentId()) {
          mergeAgentId(other.getAgentId());
        }
        if (other.hasObjectId()) {
          setObjectId(other.getObjectId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasAgentId()) {
                subBuilder.mergeFrom(getAgentId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAgentId(subBuilder.buildPartial());
              break;
            }
            case 16: {
              setObjectId(input.readUInt64());
              break;
            }
          }
        }
      }
      
      
      // optional .bnet.protocol.EntityId agent_id = 1;
      public boolean hasAgentId() {
        return result.hasAgentId();
      }
      public bnet.protocol.Entity.EntityId getAgentId() {
        return result.getAgentId();
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasAgentId = true;
        result.agentId_ = builderForValue.build();
        return this;
      }
      public Builder mergeAgentId(bnet.protocol.Entity.EntityId value) {
        if (result.hasAgentId() &&
            result.agentId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.agentId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.agentId_).mergeFrom(value).buildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder clearAgentId() {
        result.hasAgentId = false;
        result.agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // required uint64 object_id = 2;
      public boolean hasObjectId() {
        return result.hasObjectId();
      }
      public long getObjectId() {
        return result.getObjectId();
      }
      public Builder setObjectId(long value) {
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder clearObjectId() {
        result.hasObjectId = false;
        result.objectId_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel_invitation.SubscribeRequest)
    }
    
    static {
      defaultInstance = new SubscribeRequest(true);
      bnet.protocol.channel_invitation.ChannelInvitation.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel_invitation.SubscribeRequest)
  }
  
  public static final class SubscribeResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use SubscribeResponse.newBuilder() to construct.
    private SubscribeResponse() {
      initFields();
    }
    private SubscribeResponse(boolean noInit) {}
    
    private static final SubscribeResponse defaultInstance;
    public static SubscribeResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public SubscribeResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel_invitation.ChannelInvitation.internal_static_bnet_protocol_channel_invitation_SubscribeResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel_invitation.ChannelInvitation.internal_static_bnet_protocol_channel_invitation_SubscribeResponse_fieldAccessorTable;
    }
    
    // repeated .bnet.protocol.channel_invitation.InvitationCollection collection = 1;
    public static final int COLLECTION_FIELD_NUMBER = 1;
    private java.util.List<bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection> collection_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection> getCollectionList() {
      return collection_;
    }
    public int getCollectionCount() { return collection_.size(); }
    public bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection getCollection(int index) {
      return collection_.get(index);
    }
    
    // repeated .bnet.protocol.invitation.Invitation received_invitation = 2;
    public static final int RECEIVED_INVITATION_FIELD_NUMBER = 2;
    private java.util.List<bnet.protocol.invitation.InvitationProto.Invitation> receivedInvitation_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.invitation.InvitationProto.Invitation> getReceivedInvitationList() {
      return receivedInvitation_;
    }
    public int getReceivedInvitationCount() { return receivedInvitation_.size(); }
    public bnet.protocol.invitation.InvitationProto.Invitation getReceivedInvitation(int index) {
      return receivedInvitation_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection element : getCollectionList()) {
        if (!element.isInitialized()) return false;
      }
      for (bnet.protocol.invitation.InvitationProto.Invitation element : getReceivedInvitationList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection element : getCollectionList()) {
        output.writeMessage(1, element);
      }
      for (bnet.protocol.invitation.InvitationProto.Invitation element : getReceivedInvitationList()) {
        output.writeMessage(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection element : getCollectionList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      for (bnet.protocol.invitation.InvitationProto.Invitation element : getReceivedInvitationList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel_invitation.ChannelInvitation.SubscribeResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.SubscribeResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.SubscribeResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.SubscribeResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.SubscribeResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.SubscribeResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.SubscribeResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.SubscribeResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.SubscribeResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.SubscribeResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel_invitation.ChannelInvitation.SubscribeResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel_invitation.ChannelInvitation.SubscribeResponse result;
      
      // Construct using bnet.protocol.channel_invitation.ChannelInvitation.SubscribeResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel_invitation.ChannelInvitation.SubscribeResponse();
        return builder;
      }
      
      protected bnet.protocol.channel_invitation.ChannelInvitation.SubscribeResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel_invitation.ChannelInvitation.SubscribeResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel_invitation.ChannelInvitation.SubscribeResponse.getDescriptor();
      }
      
      public bnet.protocol.channel_invitation.ChannelInvitation.SubscribeResponse getDefaultInstanceForType() {
        return bnet.protocol.channel_invitation.ChannelInvitation.SubscribeResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel_invitation.ChannelInvitation.SubscribeResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel_invitation.ChannelInvitation.SubscribeResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel_invitation.ChannelInvitation.SubscribeResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.collection_ != java.util.Collections.EMPTY_LIST) {
          result.collection_ =
            java.util.Collections.unmodifiableList(result.collection_);
        }
        if (result.receivedInvitation_ != java.util.Collections.EMPTY_LIST) {
          result.receivedInvitation_ =
            java.util.Collections.unmodifiableList(result.receivedInvitation_);
        }
        bnet.protocol.channel_invitation.ChannelInvitation.SubscribeResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel_invitation.ChannelInvitation.SubscribeResponse) {
          return mergeFrom((bnet.protocol.channel_invitation.ChannelInvitation.SubscribeResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel_invitation.ChannelInvitation.SubscribeResponse other) {
        if (other == bnet.protocol.channel_invitation.ChannelInvitation.SubscribeResponse.getDefaultInstance()) return this;
        if (!other.collection_.isEmpty()) {
          if (result.collection_.isEmpty()) {
            result.collection_ = new java.util.ArrayList<bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection>();
          }
          result.collection_.addAll(other.collection_);
        }
        if (!other.receivedInvitation_.isEmpty()) {
          if (result.receivedInvitation_.isEmpty()) {
            result.receivedInvitation_ = new java.util.ArrayList<bnet.protocol.invitation.InvitationProto.Invitation>();
          }
          result.receivedInvitation_.addAll(other.receivedInvitation_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection.Builder subBuilder = bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addCollection(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bnet.protocol.invitation.InvitationProto.Invitation.Builder subBuilder = bnet.protocol.invitation.InvitationProto.Invitation.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addReceivedInvitation(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .bnet.protocol.channel_invitation.InvitationCollection collection = 1;
      public java.util.List<bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection> getCollectionList() {
        return java.util.Collections.unmodifiableList(result.collection_);
      }
      public int getCollectionCount() {
        return result.getCollectionCount();
      }
      public bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection getCollection(int index) {
        return result.getCollection(index);
      }
      public Builder setCollection(int index, bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.collection_.set(index, value);
        return this;
      }
      public Builder setCollection(int index, bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection.Builder builderForValue) {
        result.collection_.set(index, builderForValue.build());
        return this;
      }
      public Builder addCollection(bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.collection_.isEmpty()) {
          result.collection_ = new java.util.ArrayList<bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection>();
        }
        result.collection_.add(value);
        return this;
      }
      public Builder addCollection(bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection.Builder builderForValue) {
        if (result.collection_.isEmpty()) {
          result.collection_ = new java.util.ArrayList<bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection>();
        }
        result.collection_.add(builderForValue.build());
        return this;
      }
      public Builder addAllCollection(
          java.lang.Iterable<? extends bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection> values) {
        if (result.collection_.isEmpty()) {
          result.collection_ = new java.util.ArrayList<bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection>();
        }
        super.addAll(values, result.collection_);
        return this;
      }
      public Builder clearCollection() {
        result.collection_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .bnet.protocol.invitation.Invitation received_invitation = 2;
      public java.util.List<bnet.protocol.invitation.InvitationProto.Invitation> getReceivedInvitationList() {
        return java.util.Collections.unmodifiableList(result.receivedInvitation_);
      }
      public int getReceivedInvitationCount() {
        return result.getReceivedInvitationCount();
      }
      public bnet.protocol.invitation.InvitationProto.Invitation getReceivedInvitation(int index) {
        return result.getReceivedInvitation(index);
      }
      public Builder setReceivedInvitation(int index, bnet.protocol.invitation.InvitationProto.Invitation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.receivedInvitation_.set(index, value);
        return this;
      }
      public Builder setReceivedInvitation(int index, bnet.protocol.invitation.InvitationProto.Invitation.Builder builderForValue) {
        result.receivedInvitation_.set(index, builderForValue.build());
        return this;
      }
      public Builder addReceivedInvitation(bnet.protocol.invitation.InvitationProto.Invitation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.receivedInvitation_.isEmpty()) {
          result.receivedInvitation_ = new java.util.ArrayList<bnet.protocol.invitation.InvitationProto.Invitation>();
        }
        result.receivedInvitation_.add(value);
        return this;
      }
      public Builder addReceivedInvitation(bnet.protocol.invitation.InvitationProto.Invitation.Builder builderForValue) {
        if (result.receivedInvitation_.isEmpty()) {
          result.receivedInvitation_ = new java.util.ArrayList<bnet.protocol.invitation.InvitationProto.Invitation>();
        }
        result.receivedInvitation_.add(builderForValue.build());
        return this;
      }
      public Builder addAllReceivedInvitation(
          java.lang.Iterable<? extends bnet.protocol.invitation.InvitationProto.Invitation> values) {
        if (result.receivedInvitation_.isEmpty()) {
          result.receivedInvitation_ = new java.util.ArrayList<bnet.protocol.invitation.InvitationProto.Invitation>();
        }
        super.addAll(values, result.receivedInvitation_);
        return this;
      }
      public Builder clearReceivedInvitation() {
        result.receivedInvitation_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel_invitation.SubscribeResponse)
    }
    
    static {
      defaultInstance = new SubscribeResponse(true);
      bnet.protocol.channel_invitation.ChannelInvitation.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel_invitation.SubscribeResponse)
  }
  
  public static final class UnsubscribeRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use UnsubscribeRequest.newBuilder() to construct.
    private UnsubscribeRequest() {
      initFields();
    }
    private UnsubscribeRequest(boolean noInit) {}
    
    private static final UnsubscribeRequest defaultInstance;
    public static UnsubscribeRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public UnsubscribeRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel_invitation.ChannelInvitation.internal_static_bnet_protocol_channel_invitation_UnsubscribeRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel_invitation.ChannelInvitation.internal_static_bnet_protocol_channel_invitation_UnsubscribeRequest_fieldAccessorTable;
    }
    
    // optional .bnet.protocol.EntityId agent_id = 1;
    public static final int AGENT_ID_FIELD_NUMBER = 1;
    private boolean hasAgentId;
    private bnet.protocol.Entity.EntityId agentId_;
    public boolean hasAgentId() { return hasAgentId; }
    public bnet.protocol.Entity.EntityId getAgentId() { return agentId_; }
    
    private void initFields() {
      agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (hasAgentId()) {
        if (!getAgentId().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAgentId()) {
        output.writeMessage(1, getAgentId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAgentId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAgentId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel_invitation.ChannelInvitation.UnsubscribeRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.UnsubscribeRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.UnsubscribeRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.UnsubscribeRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.UnsubscribeRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.UnsubscribeRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.UnsubscribeRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.UnsubscribeRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.UnsubscribeRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.UnsubscribeRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel_invitation.ChannelInvitation.UnsubscribeRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel_invitation.ChannelInvitation.UnsubscribeRequest result;
      
      // Construct using bnet.protocol.channel_invitation.ChannelInvitation.UnsubscribeRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel_invitation.ChannelInvitation.UnsubscribeRequest();
        return builder;
      }
      
      protected bnet.protocol.channel_invitation.ChannelInvitation.UnsubscribeRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel_invitation.ChannelInvitation.UnsubscribeRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel_invitation.ChannelInvitation.UnsubscribeRequest.getDescriptor();
      }
      
      public bnet.protocol.channel_invitation.ChannelInvitation.UnsubscribeRequest getDefaultInstanceForType() {
        return bnet.protocol.channel_invitation.ChannelInvitation.UnsubscribeRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel_invitation.ChannelInvitation.UnsubscribeRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel_invitation.ChannelInvitation.UnsubscribeRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel_invitation.ChannelInvitation.UnsubscribeRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.channel_invitation.ChannelInvitation.UnsubscribeRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel_invitation.ChannelInvitation.UnsubscribeRequest) {
          return mergeFrom((bnet.protocol.channel_invitation.ChannelInvitation.UnsubscribeRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel_invitation.ChannelInvitation.UnsubscribeRequest other) {
        if (other == bnet.protocol.channel_invitation.ChannelInvitation.UnsubscribeRequest.getDefaultInstance()) return this;
        if (other.hasAgentId()) {
          mergeAgentId(other.getAgentId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasAgentId()) {
                subBuilder.mergeFrom(getAgentId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAgentId(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional .bnet.protocol.EntityId agent_id = 1;
      public boolean hasAgentId() {
        return result.hasAgentId();
      }
      public bnet.protocol.Entity.EntityId getAgentId() {
        return result.getAgentId();
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasAgentId = true;
        result.agentId_ = builderForValue.build();
        return this;
      }
      public Builder mergeAgentId(bnet.protocol.Entity.EntityId value) {
        if (result.hasAgentId() &&
            result.agentId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.agentId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.agentId_).mergeFrom(value).buildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder clearAgentId() {
        result.hasAgentId = false;
        result.agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel_invitation.UnsubscribeRequest)
    }
    
    static {
      defaultInstance = new UnsubscribeRequest(true);
      bnet.protocol.channel_invitation.ChannelInvitation.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel_invitation.UnsubscribeRequest)
  }
  
  public static final class SuggestInvitationRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use SuggestInvitationRequest.newBuilder() to construct.
    private SuggestInvitationRequest() {
      initFields();
    }
    private SuggestInvitationRequest(boolean noInit) {}
    
    private static final SuggestInvitationRequest defaultInstance;
    public static SuggestInvitationRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public SuggestInvitationRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel_invitation.ChannelInvitation.internal_static_bnet_protocol_channel_invitation_SuggestInvitationRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel_invitation.ChannelInvitation.internal_static_bnet_protocol_channel_invitation_SuggestInvitationRequest_fieldAccessorTable;
    }
    
    // optional .bnet.protocol.EntityId agent_id = 1;
    public static final int AGENT_ID_FIELD_NUMBER = 1;
    private boolean hasAgentId;
    private bnet.protocol.Entity.EntityId agentId_;
    public boolean hasAgentId() { return hasAgentId; }
    public bnet.protocol.Entity.EntityId getAgentId() { return agentId_; }
    
    // required .bnet.protocol.EntityId channel_id = 2;
    public static final int CHANNEL_ID_FIELD_NUMBER = 2;
    private boolean hasChannelId;
    private bnet.protocol.Entity.EntityId channelId_;
    public boolean hasChannelId() { return hasChannelId; }
    public bnet.protocol.Entity.EntityId getChannelId() { return channelId_; }
    
    // required .bnet.protocol.EntityId target_id = 3;
    public static final int TARGET_ID_FIELD_NUMBER = 3;
    private boolean hasTargetId;
    private bnet.protocol.Entity.EntityId targetId_;
    public boolean hasTargetId() { return hasTargetId; }
    public bnet.protocol.Entity.EntityId getTargetId() { return targetId_; }
    
    // optional .bnet.protocol.EntityId approval_id = 4;
    public static final int APPROVAL_ID_FIELD_NUMBER = 4;
    private boolean hasApprovalId;
    private bnet.protocol.Entity.EntityId approvalId_;
    public boolean hasApprovalId() { return hasApprovalId; }
    public bnet.protocol.Entity.EntityId getApprovalId() { return approvalId_; }
    
    private void initFields() {
      agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
      channelId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
      targetId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
      approvalId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasChannelId) return false;
      if (!hasTargetId) return false;
      if (hasAgentId()) {
        if (!getAgentId().isInitialized()) return false;
      }
      if (!getChannelId().isInitialized()) return false;
      if (!getTargetId().isInitialized()) return false;
      if (hasApprovalId()) {
        if (!getApprovalId().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAgentId()) {
        output.writeMessage(1, getAgentId());
      }
      if (hasChannelId()) {
        output.writeMessage(2, getChannelId());
      }
      if (hasTargetId()) {
        output.writeMessage(3, getTargetId());
      }
      if (hasApprovalId()) {
        output.writeMessage(4, getApprovalId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAgentId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAgentId());
      }
      if (hasChannelId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getChannelId());
      }
      if (hasTargetId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getTargetId());
      }
      if (hasApprovalId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getApprovalId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel_invitation.ChannelInvitation.SuggestInvitationRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.SuggestInvitationRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.SuggestInvitationRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.SuggestInvitationRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.SuggestInvitationRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.SuggestInvitationRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.SuggestInvitationRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.SuggestInvitationRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.SuggestInvitationRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.SuggestInvitationRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel_invitation.ChannelInvitation.SuggestInvitationRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel_invitation.ChannelInvitation.SuggestInvitationRequest result;
      
      // Construct using bnet.protocol.channel_invitation.ChannelInvitation.SuggestInvitationRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel_invitation.ChannelInvitation.SuggestInvitationRequest();
        return builder;
      }
      
      protected bnet.protocol.channel_invitation.ChannelInvitation.SuggestInvitationRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel_invitation.ChannelInvitation.SuggestInvitationRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel_invitation.ChannelInvitation.SuggestInvitationRequest.getDescriptor();
      }
      
      public bnet.protocol.channel_invitation.ChannelInvitation.SuggestInvitationRequest getDefaultInstanceForType() {
        return bnet.protocol.channel_invitation.ChannelInvitation.SuggestInvitationRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel_invitation.ChannelInvitation.SuggestInvitationRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel_invitation.ChannelInvitation.SuggestInvitationRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel_invitation.ChannelInvitation.SuggestInvitationRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.channel_invitation.ChannelInvitation.SuggestInvitationRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel_invitation.ChannelInvitation.SuggestInvitationRequest) {
          return mergeFrom((bnet.protocol.channel_invitation.ChannelInvitation.SuggestInvitationRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel_invitation.ChannelInvitation.SuggestInvitationRequest other) {
        if (other == bnet.protocol.channel_invitation.ChannelInvitation.SuggestInvitationRequest.getDefaultInstance()) return this;
        if (other.hasAgentId()) {
          mergeAgentId(other.getAgentId());
        }
        if (other.hasChannelId()) {
          mergeChannelId(other.getChannelId());
        }
        if (other.hasTargetId()) {
          mergeTargetId(other.getTargetId());
        }
        if (other.hasApprovalId()) {
          mergeApprovalId(other.getApprovalId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasAgentId()) {
                subBuilder.mergeFrom(getAgentId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAgentId(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasChannelId()) {
                subBuilder.mergeFrom(getChannelId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setChannelId(subBuilder.buildPartial());
              break;
            }
            case 26: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasTargetId()) {
                subBuilder.mergeFrom(getTargetId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setTargetId(subBuilder.buildPartial());
              break;
            }
            case 34: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasApprovalId()) {
                subBuilder.mergeFrom(getApprovalId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setApprovalId(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional .bnet.protocol.EntityId agent_id = 1;
      public boolean hasAgentId() {
        return result.hasAgentId();
      }
      public bnet.protocol.Entity.EntityId getAgentId() {
        return result.getAgentId();
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasAgentId = true;
        result.agentId_ = builderForValue.build();
        return this;
      }
      public Builder mergeAgentId(bnet.protocol.Entity.EntityId value) {
        if (result.hasAgentId() &&
            result.agentId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.agentId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.agentId_).mergeFrom(value).buildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder clearAgentId() {
        result.hasAgentId = false;
        result.agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // required .bnet.protocol.EntityId channel_id = 2;
      public boolean hasChannelId() {
        return result.hasChannelId();
      }
      public bnet.protocol.Entity.EntityId getChannelId() {
        return result.getChannelId();
      }
      public Builder setChannelId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder setChannelId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasChannelId = true;
        result.channelId_ = builderForValue.build();
        return this;
      }
      public Builder mergeChannelId(bnet.protocol.Entity.EntityId value) {
        if (result.hasChannelId() &&
            result.channelId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.channelId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.channelId_).mergeFrom(value).buildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder clearChannelId() {
        result.hasChannelId = false;
        result.channelId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // required .bnet.protocol.EntityId target_id = 3;
      public boolean hasTargetId() {
        return result.hasTargetId();
      }
      public bnet.protocol.Entity.EntityId getTargetId() {
        return result.getTargetId();
      }
      public Builder setTargetId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasTargetId = true;
        result.targetId_ = value;
        return this;
      }
      public Builder setTargetId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasTargetId = true;
        result.targetId_ = builderForValue.build();
        return this;
      }
      public Builder mergeTargetId(bnet.protocol.Entity.EntityId value) {
        if (result.hasTargetId() &&
            result.targetId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.targetId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.targetId_).mergeFrom(value).buildPartial();
        } else {
          result.targetId_ = value;
        }
        result.hasTargetId = true;
        return this;
      }
      public Builder clearTargetId() {
        result.hasTargetId = false;
        result.targetId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // optional .bnet.protocol.EntityId approval_id = 4;
      public boolean hasApprovalId() {
        return result.hasApprovalId();
      }
      public bnet.protocol.Entity.EntityId getApprovalId() {
        return result.getApprovalId();
      }
      public Builder setApprovalId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasApprovalId = true;
        result.approvalId_ = value;
        return this;
      }
      public Builder setApprovalId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasApprovalId = true;
        result.approvalId_ = builderForValue.build();
        return this;
      }
      public Builder mergeApprovalId(bnet.protocol.Entity.EntityId value) {
        if (result.hasApprovalId() &&
            result.approvalId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.approvalId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.approvalId_).mergeFrom(value).buildPartial();
        } else {
          result.approvalId_ = value;
        }
        result.hasApprovalId = true;
        return this;
      }
      public Builder clearApprovalId() {
        result.hasApprovalId = false;
        result.approvalId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel_invitation.SuggestInvitationRequest)
    }
    
    static {
      defaultInstance = new SuggestInvitationRequest(true);
      bnet.protocol.channel_invitation.ChannelInvitation.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel_invitation.SuggestInvitationRequest)
  }
  
  public static final class RevokeInvitationRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use RevokeInvitationRequest.newBuilder() to construct.
    private RevokeInvitationRequest() {
      initFields();
    }
    private RevokeInvitationRequest(boolean noInit) {}
    
    private static final RevokeInvitationRequest defaultInstance;
    public static RevokeInvitationRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public RevokeInvitationRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel_invitation.ChannelInvitation.internal_static_bnet_protocol_channel_invitation_RevokeInvitationRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel_invitation.ChannelInvitation.internal_static_bnet_protocol_channel_invitation_RevokeInvitationRequest_fieldAccessorTable;
    }
    
    // optional .bnet.protocol.EntityId agent_id = 1;
    public static final int AGENT_ID_FIELD_NUMBER = 1;
    private boolean hasAgentId;
    private bnet.protocol.Entity.EntityId agentId_;
    public boolean hasAgentId() { return hasAgentId; }
    public bnet.protocol.Entity.EntityId getAgentId() { return agentId_; }
    
    // optional .bnet.protocol.EntityId target_id = 2;
    public static final int TARGET_ID_FIELD_NUMBER = 2;
    private boolean hasTargetId;
    private bnet.protocol.Entity.EntityId targetId_;
    public boolean hasTargetId() { return hasTargetId; }
    public bnet.protocol.Entity.EntityId getTargetId() { return targetId_; }
    
    // required fixed64 invitation_id = 3;
    public static final int INVITATION_ID_FIELD_NUMBER = 3;
    private boolean hasInvitationId;
    private long invitationId_ = 0L;
    public boolean hasInvitationId() { return hasInvitationId; }
    public long getInvitationId() { return invitationId_; }
    
    // required .bnet.protocol.EntityId channel_id = 4;
    public static final int CHANNEL_ID_FIELD_NUMBER = 4;
    private boolean hasChannelId;
    private bnet.protocol.Entity.EntityId channelId_;
    public boolean hasChannelId() { return hasChannelId; }
    public bnet.protocol.Entity.EntityId getChannelId() { return channelId_; }
    
    private void initFields() {
      agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
      targetId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
      channelId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasInvitationId) return false;
      if (!hasChannelId) return false;
      if (hasAgentId()) {
        if (!getAgentId().isInitialized()) return false;
      }
      if (hasTargetId()) {
        if (!getTargetId().isInitialized()) return false;
      }
      if (!getChannelId().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAgentId()) {
        output.writeMessage(1, getAgentId());
      }
      if (hasTargetId()) {
        output.writeMessage(2, getTargetId());
      }
      if (hasInvitationId()) {
        output.writeFixed64(3, getInvitationId());
      }
      if (hasChannelId()) {
        output.writeMessage(4, getChannelId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAgentId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAgentId());
      }
      if (hasTargetId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getTargetId());
      }
      if (hasInvitationId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(3, getInvitationId());
      }
      if (hasChannelId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getChannelId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel_invitation.ChannelInvitation.RevokeInvitationRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.RevokeInvitationRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.RevokeInvitationRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.RevokeInvitationRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.RevokeInvitationRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.RevokeInvitationRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.RevokeInvitationRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.RevokeInvitationRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.RevokeInvitationRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.RevokeInvitationRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel_invitation.ChannelInvitation.RevokeInvitationRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel_invitation.ChannelInvitation.RevokeInvitationRequest result;
      
      // Construct using bnet.protocol.channel_invitation.ChannelInvitation.RevokeInvitationRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel_invitation.ChannelInvitation.RevokeInvitationRequest();
        return builder;
      }
      
      protected bnet.protocol.channel_invitation.ChannelInvitation.RevokeInvitationRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel_invitation.ChannelInvitation.RevokeInvitationRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel_invitation.ChannelInvitation.RevokeInvitationRequest.getDescriptor();
      }
      
      public bnet.protocol.channel_invitation.ChannelInvitation.RevokeInvitationRequest getDefaultInstanceForType() {
        return bnet.protocol.channel_invitation.ChannelInvitation.RevokeInvitationRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel_invitation.ChannelInvitation.RevokeInvitationRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel_invitation.ChannelInvitation.RevokeInvitationRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel_invitation.ChannelInvitation.RevokeInvitationRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.channel_invitation.ChannelInvitation.RevokeInvitationRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel_invitation.ChannelInvitation.RevokeInvitationRequest) {
          return mergeFrom((bnet.protocol.channel_invitation.ChannelInvitation.RevokeInvitationRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel_invitation.ChannelInvitation.RevokeInvitationRequest other) {
        if (other == bnet.protocol.channel_invitation.ChannelInvitation.RevokeInvitationRequest.getDefaultInstance()) return this;
        if (other.hasAgentId()) {
          mergeAgentId(other.getAgentId());
        }
        if (other.hasTargetId()) {
          mergeTargetId(other.getTargetId());
        }
        if (other.hasInvitationId()) {
          setInvitationId(other.getInvitationId());
        }
        if (other.hasChannelId()) {
          mergeChannelId(other.getChannelId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasAgentId()) {
                subBuilder.mergeFrom(getAgentId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAgentId(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasTargetId()) {
                subBuilder.mergeFrom(getTargetId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setTargetId(subBuilder.buildPartial());
              break;
            }
            case 25: {
              setInvitationId(input.readFixed64());
              break;
            }
            case 34: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasChannelId()) {
                subBuilder.mergeFrom(getChannelId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setChannelId(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional .bnet.protocol.EntityId agent_id = 1;
      public boolean hasAgentId() {
        return result.hasAgentId();
      }
      public bnet.protocol.Entity.EntityId getAgentId() {
        return result.getAgentId();
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasAgentId = true;
        result.agentId_ = builderForValue.build();
        return this;
      }
      public Builder mergeAgentId(bnet.protocol.Entity.EntityId value) {
        if (result.hasAgentId() &&
            result.agentId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.agentId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.agentId_).mergeFrom(value).buildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder clearAgentId() {
        result.hasAgentId = false;
        result.agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // optional .bnet.protocol.EntityId target_id = 2;
      public boolean hasTargetId() {
        return result.hasTargetId();
      }
      public bnet.protocol.Entity.EntityId getTargetId() {
        return result.getTargetId();
      }
      public Builder setTargetId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasTargetId = true;
        result.targetId_ = value;
        return this;
      }
      public Builder setTargetId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasTargetId = true;
        result.targetId_ = builderForValue.build();
        return this;
      }
      public Builder mergeTargetId(bnet.protocol.Entity.EntityId value) {
        if (result.hasTargetId() &&
            result.targetId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.targetId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.targetId_).mergeFrom(value).buildPartial();
        } else {
          result.targetId_ = value;
        }
        result.hasTargetId = true;
        return this;
      }
      public Builder clearTargetId() {
        result.hasTargetId = false;
        result.targetId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // required fixed64 invitation_id = 3;
      public boolean hasInvitationId() {
        return result.hasInvitationId();
      }
      public long getInvitationId() {
        return result.getInvitationId();
      }
      public Builder setInvitationId(long value) {
        result.hasInvitationId = true;
        result.invitationId_ = value;
        return this;
      }
      public Builder clearInvitationId() {
        result.hasInvitationId = false;
        result.invitationId_ = 0L;
        return this;
      }
      
      // required .bnet.protocol.EntityId channel_id = 4;
      public boolean hasChannelId() {
        return result.hasChannelId();
      }
      public bnet.protocol.Entity.EntityId getChannelId() {
        return result.getChannelId();
      }
      public Builder setChannelId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder setChannelId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasChannelId = true;
        result.channelId_ = builderForValue.build();
        return this;
      }
      public Builder mergeChannelId(bnet.protocol.Entity.EntityId value) {
        if (result.hasChannelId() &&
            result.channelId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.channelId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.channelId_).mergeFrom(value).buildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder clearChannelId() {
        result.hasChannelId = false;
        result.channelId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel_invitation.RevokeInvitationRequest)
    }
    
    static {
      defaultInstance = new RevokeInvitationRequest(true);
      bnet.protocol.channel_invitation.ChannelInvitation.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel_invitation.RevokeInvitationRequest)
  }
  
  public static final class HasRoomForInvitationRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use HasRoomForInvitationRequest.newBuilder() to construct.
    private HasRoomForInvitationRequest() {
      initFields();
    }
    private HasRoomForInvitationRequest(boolean noInit) {}
    
    private static final HasRoomForInvitationRequest defaultInstance;
    public static HasRoomForInvitationRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public HasRoomForInvitationRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel_invitation.ChannelInvitation.internal_static_bnet_protocol_channel_invitation_HasRoomForInvitationRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel_invitation.ChannelInvitation.internal_static_bnet_protocol_channel_invitation_HasRoomForInvitationRequest_fieldAccessorTable;
    }
    
    // required uint32 service_type = 1;
    public static final int SERVICE_TYPE_FIELD_NUMBER = 1;
    private boolean hasServiceType;
    private int serviceType_ = 0;
    public boolean hasServiceType() { return hasServiceType; }
    public int getServiceType() { return serviceType_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasServiceType) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasServiceType()) {
        output.writeUInt32(1, getServiceType());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasServiceType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getServiceType());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel_invitation.ChannelInvitation.HasRoomForInvitationRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.HasRoomForInvitationRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.HasRoomForInvitationRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.HasRoomForInvitationRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.HasRoomForInvitationRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.HasRoomForInvitationRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.HasRoomForInvitationRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.HasRoomForInvitationRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.HasRoomForInvitationRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.HasRoomForInvitationRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel_invitation.ChannelInvitation.HasRoomForInvitationRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel_invitation.ChannelInvitation.HasRoomForInvitationRequest result;
      
      // Construct using bnet.protocol.channel_invitation.ChannelInvitation.HasRoomForInvitationRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel_invitation.ChannelInvitation.HasRoomForInvitationRequest();
        return builder;
      }
      
      protected bnet.protocol.channel_invitation.ChannelInvitation.HasRoomForInvitationRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel_invitation.ChannelInvitation.HasRoomForInvitationRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel_invitation.ChannelInvitation.HasRoomForInvitationRequest.getDescriptor();
      }
      
      public bnet.protocol.channel_invitation.ChannelInvitation.HasRoomForInvitationRequest getDefaultInstanceForType() {
        return bnet.protocol.channel_invitation.ChannelInvitation.HasRoomForInvitationRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel_invitation.ChannelInvitation.HasRoomForInvitationRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel_invitation.ChannelInvitation.HasRoomForInvitationRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel_invitation.ChannelInvitation.HasRoomForInvitationRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.channel_invitation.ChannelInvitation.HasRoomForInvitationRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel_invitation.ChannelInvitation.HasRoomForInvitationRequest) {
          return mergeFrom((bnet.protocol.channel_invitation.ChannelInvitation.HasRoomForInvitationRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel_invitation.ChannelInvitation.HasRoomForInvitationRequest other) {
        if (other == bnet.protocol.channel_invitation.ChannelInvitation.HasRoomForInvitationRequest.getDefaultInstance()) return this;
        if (other.hasServiceType()) {
          setServiceType(other.getServiceType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setServiceType(input.readUInt32());
              break;
            }
          }
        }
      }
      
      
      // required uint32 service_type = 1;
      public boolean hasServiceType() {
        return result.hasServiceType();
      }
      public int getServiceType() {
        return result.getServiceType();
      }
      public Builder setServiceType(int value) {
        result.hasServiceType = true;
        result.serviceType_ = value;
        return this;
      }
      public Builder clearServiceType() {
        result.hasServiceType = false;
        result.serviceType_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel_invitation.HasRoomForInvitationRequest)
    }
    
    static {
      defaultInstance = new HasRoomForInvitationRequest(true);
      bnet.protocol.channel_invitation.ChannelInvitation.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel_invitation.HasRoomForInvitationRequest)
  }
  
  public static final class InvitationAddedNotification extends
      com.google.protobuf.GeneratedMessage {
    // Use InvitationAddedNotification.newBuilder() to construct.
    private InvitationAddedNotification() {
      initFields();
    }
    private InvitationAddedNotification(boolean noInit) {}
    
    private static final InvitationAddedNotification defaultInstance;
    public static InvitationAddedNotification getDefaultInstance() {
      return defaultInstance;
    }
    
    public InvitationAddedNotification getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel_invitation.ChannelInvitation.internal_static_bnet_protocol_channel_invitation_InvitationAddedNotification_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel_invitation.ChannelInvitation.internal_static_bnet_protocol_channel_invitation_InvitationAddedNotification_fieldAccessorTable;
    }
    
    // required .bnet.protocol.invitation.Invitation invitation = 1;
    public static final int INVITATION_FIELD_NUMBER = 1;
    private boolean hasInvitation;
    private bnet.protocol.invitation.InvitationProto.Invitation invitation_;
    public boolean hasInvitation() { return hasInvitation; }
    public bnet.protocol.invitation.InvitationProto.Invitation getInvitation() { return invitation_; }
    
    private void initFields() {
      invitation_ = bnet.protocol.invitation.InvitationProto.Invitation.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasInvitation) return false;
      if (!getInvitation().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasInvitation()) {
        output.writeMessage(1, getInvitation());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasInvitation()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getInvitation());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel_invitation.ChannelInvitation.InvitationAddedNotification parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.InvitationAddedNotification parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.InvitationAddedNotification parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.InvitationAddedNotification parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.InvitationAddedNotification parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.InvitationAddedNotification parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.InvitationAddedNotification parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.InvitationAddedNotification parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.InvitationAddedNotification parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.InvitationAddedNotification parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel_invitation.ChannelInvitation.InvitationAddedNotification prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel_invitation.ChannelInvitation.InvitationAddedNotification result;
      
      // Construct using bnet.protocol.channel_invitation.ChannelInvitation.InvitationAddedNotification.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel_invitation.ChannelInvitation.InvitationAddedNotification();
        return builder;
      }
      
      protected bnet.protocol.channel_invitation.ChannelInvitation.InvitationAddedNotification internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel_invitation.ChannelInvitation.InvitationAddedNotification();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel_invitation.ChannelInvitation.InvitationAddedNotification.getDescriptor();
      }
      
      public bnet.protocol.channel_invitation.ChannelInvitation.InvitationAddedNotification getDefaultInstanceForType() {
        return bnet.protocol.channel_invitation.ChannelInvitation.InvitationAddedNotification.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel_invitation.ChannelInvitation.InvitationAddedNotification build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel_invitation.ChannelInvitation.InvitationAddedNotification buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel_invitation.ChannelInvitation.InvitationAddedNotification buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.channel_invitation.ChannelInvitation.InvitationAddedNotification returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel_invitation.ChannelInvitation.InvitationAddedNotification) {
          return mergeFrom((bnet.protocol.channel_invitation.ChannelInvitation.InvitationAddedNotification)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel_invitation.ChannelInvitation.InvitationAddedNotification other) {
        if (other == bnet.protocol.channel_invitation.ChannelInvitation.InvitationAddedNotification.getDefaultInstance()) return this;
        if (other.hasInvitation()) {
          mergeInvitation(other.getInvitation());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.invitation.InvitationProto.Invitation.Builder subBuilder = bnet.protocol.invitation.InvitationProto.Invitation.newBuilder();
              if (hasInvitation()) {
                subBuilder.mergeFrom(getInvitation());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setInvitation(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .bnet.protocol.invitation.Invitation invitation = 1;
      public boolean hasInvitation() {
        return result.hasInvitation();
      }
      public bnet.protocol.invitation.InvitationProto.Invitation getInvitation() {
        return result.getInvitation();
      }
      public Builder setInvitation(bnet.protocol.invitation.InvitationProto.Invitation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasInvitation = true;
        result.invitation_ = value;
        return this;
      }
      public Builder setInvitation(bnet.protocol.invitation.InvitationProto.Invitation.Builder builderForValue) {
        result.hasInvitation = true;
        result.invitation_ = builderForValue.build();
        return this;
      }
      public Builder mergeInvitation(bnet.protocol.invitation.InvitationProto.Invitation value) {
        if (result.hasInvitation() &&
            result.invitation_ != bnet.protocol.invitation.InvitationProto.Invitation.getDefaultInstance()) {
          result.invitation_ =
            bnet.protocol.invitation.InvitationProto.Invitation.newBuilder(result.invitation_).mergeFrom(value).buildPartial();
        } else {
          result.invitation_ = value;
        }
        result.hasInvitation = true;
        return this;
      }
      public Builder clearInvitation() {
        result.hasInvitation = false;
        result.invitation_ = bnet.protocol.invitation.InvitationProto.Invitation.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel_invitation.InvitationAddedNotification)
    }
    
    static {
      defaultInstance = new InvitationAddedNotification(true);
      bnet.protocol.channel_invitation.ChannelInvitation.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel_invitation.InvitationAddedNotification)
  }
  
  public static final class InvitationRemovedNotification extends
      com.google.protobuf.GeneratedMessage {
    // Use InvitationRemovedNotification.newBuilder() to construct.
    private InvitationRemovedNotification() {
      initFields();
    }
    private InvitationRemovedNotification(boolean noInit) {}
    
    private static final InvitationRemovedNotification defaultInstance;
    public static InvitationRemovedNotification getDefaultInstance() {
      return defaultInstance;
    }
    
    public InvitationRemovedNotification getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel_invitation.ChannelInvitation.internal_static_bnet_protocol_channel_invitation_InvitationRemovedNotification_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel_invitation.ChannelInvitation.internal_static_bnet_protocol_channel_invitation_InvitationRemovedNotification_fieldAccessorTable;
    }
    
    // required .bnet.protocol.invitation.Invitation invitation = 1;
    public static final int INVITATION_FIELD_NUMBER = 1;
    private boolean hasInvitation;
    private bnet.protocol.invitation.InvitationProto.Invitation invitation_;
    public boolean hasInvitation() { return hasInvitation; }
    public bnet.protocol.invitation.InvitationProto.Invitation getInvitation() { return invitation_; }
    
    // optional uint32 reason = 2;
    public static final int REASON_FIELD_NUMBER = 2;
    private boolean hasReason;
    private int reason_ = 0;
    public boolean hasReason() { return hasReason; }
    public int getReason() { return reason_; }
    
    private void initFields() {
      invitation_ = bnet.protocol.invitation.InvitationProto.Invitation.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasInvitation) return false;
      if (!getInvitation().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasInvitation()) {
        output.writeMessage(1, getInvitation());
      }
      if (hasReason()) {
        output.writeUInt32(2, getReason());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasInvitation()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getInvitation());
      }
      if (hasReason()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getReason());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel_invitation.ChannelInvitation.InvitationRemovedNotification parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.InvitationRemovedNotification parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.InvitationRemovedNotification parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.InvitationRemovedNotification parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.InvitationRemovedNotification parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.InvitationRemovedNotification parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.InvitationRemovedNotification parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.InvitationRemovedNotification parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.InvitationRemovedNotification parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.InvitationRemovedNotification parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel_invitation.ChannelInvitation.InvitationRemovedNotification prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel_invitation.ChannelInvitation.InvitationRemovedNotification result;
      
      // Construct using bnet.protocol.channel_invitation.ChannelInvitation.InvitationRemovedNotification.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel_invitation.ChannelInvitation.InvitationRemovedNotification();
        return builder;
      }
      
      protected bnet.protocol.channel_invitation.ChannelInvitation.InvitationRemovedNotification internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel_invitation.ChannelInvitation.InvitationRemovedNotification();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel_invitation.ChannelInvitation.InvitationRemovedNotification.getDescriptor();
      }
      
      public bnet.protocol.channel_invitation.ChannelInvitation.InvitationRemovedNotification getDefaultInstanceForType() {
        return bnet.protocol.channel_invitation.ChannelInvitation.InvitationRemovedNotification.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel_invitation.ChannelInvitation.InvitationRemovedNotification build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel_invitation.ChannelInvitation.InvitationRemovedNotification buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel_invitation.ChannelInvitation.InvitationRemovedNotification buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.channel_invitation.ChannelInvitation.InvitationRemovedNotification returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel_invitation.ChannelInvitation.InvitationRemovedNotification) {
          return mergeFrom((bnet.protocol.channel_invitation.ChannelInvitation.InvitationRemovedNotification)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel_invitation.ChannelInvitation.InvitationRemovedNotification other) {
        if (other == bnet.protocol.channel_invitation.ChannelInvitation.InvitationRemovedNotification.getDefaultInstance()) return this;
        if (other.hasInvitation()) {
          mergeInvitation(other.getInvitation());
        }
        if (other.hasReason()) {
          setReason(other.getReason());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.invitation.InvitationProto.Invitation.Builder subBuilder = bnet.protocol.invitation.InvitationProto.Invitation.newBuilder();
              if (hasInvitation()) {
                subBuilder.mergeFrom(getInvitation());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setInvitation(subBuilder.buildPartial());
              break;
            }
            case 16: {
              setReason(input.readUInt32());
              break;
            }
          }
        }
      }
      
      
      // required .bnet.protocol.invitation.Invitation invitation = 1;
      public boolean hasInvitation() {
        return result.hasInvitation();
      }
      public bnet.protocol.invitation.InvitationProto.Invitation getInvitation() {
        return result.getInvitation();
      }
      public Builder setInvitation(bnet.protocol.invitation.InvitationProto.Invitation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasInvitation = true;
        result.invitation_ = value;
        return this;
      }
      public Builder setInvitation(bnet.protocol.invitation.InvitationProto.Invitation.Builder builderForValue) {
        result.hasInvitation = true;
        result.invitation_ = builderForValue.build();
        return this;
      }
      public Builder mergeInvitation(bnet.protocol.invitation.InvitationProto.Invitation value) {
        if (result.hasInvitation() &&
            result.invitation_ != bnet.protocol.invitation.InvitationProto.Invitation.getDefaultInstance()) {
          result.invitation_ =
            bnet.protocol.invitation.InvitationProto.Invitation.newBuilder(result.invitation_).mergeFrom(value).buildPartial();
        } else {
          result.invitation_ = value;
        }
        result.hasInvitation = true;
        return this;
      }
      public Builder clearInvitation() {
        result.hasInvitation = false;
        result.invitation_ = bnet.protocol.invitation.InvitationProto.Invitation.getDefaultInstance();
        return this;
      }
      
      // optional uint32 reason = 2;
      public boolean hasReason() {
        return result.hasReason();
      }
      public int getReason() {
        return result.getReason();
      }
      public Builder setReason(int value) {
        result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder clearReason() {
        result.hasReason = false;
        result.reason_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel_invitation.InvitationRemovedNotification)
    }
    
    static {
      defaultInstance = new InvitationRemovedNotification(true);
      bnet.protocol.channel_invitation.ChannelInvitation.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel_invitation.InvitationRemovedNotification)
  }
  
  public static final class SuggestionAddedNotification extends
      com.google.protobuf.GeneratedMessage {
    // Use SuggestionAddedNotification.newBuilder() to construct.
    private SuggestionAddedNotification() {
      initFields();
    }
    private SuggestionAddedNotification(boolean noInit) {}
    
    private static final SuggestionAddedNotification defaultInstance;
    public static SuggestionAddedNotification getDefaultInstance() {
      return defaultInstance;
    }
    
    public SuggestionAddedNotification getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel_invitation.ChannelInvitation.internal_static_bnet_protocol_channel_invitation_SuggestionAddedNotification_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel_invitation.ChannelInvitation.internal_static_bnet_protocol_channel_invitation_SuggestionAddedNotification_fieldAccessorTable;
    }
    
    // required .bnet.protocol.invitation.Suggestion suggestion = 1;
    public static final int SUGGESTION_FIELD_NUMBER = 1;
    private boolean hasSuggestion;
    private bnet.protocol.invitation.InvitationProto.Suggestion suggestion_;
    public boolean hasSuggestion() { return hasSuggestion; }
    public bnet.protocol.invitation.InvitationProto.Suggestion getSuggestion() { return suggestion_; }
    
    private void initFields() {
      suggestion_ = bnet.protocol.invitation.InvitationProto.Suggestion.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasSuggestion) return false;
      if (!getSuggestion().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSuggestion()) {
        output.writeMessage(1, getSuggestion());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSuggestion()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSuggestion());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel_invitation.ChannelInvitation.SuggestionAddedNotification parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.SuggestionAddedNotification parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.SuggestionAddedNotification parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.SuggestionAddedNotification parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.SuggestionAddedNotification parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.SuggestionAddedNotification parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.SuggestionAddedNotification parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.SuggestionAddedNotification parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.SuggestionAddedNotification parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitation.SuggestionAddedNotification parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel_invitation.ChannelInvitation.SuggestionAddedNotification prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel_invitation.ChannelInvitation.SuggestionAddedNotification result;
      
      // Construct using bnet.protocol.channel_invitation.ChannelInvitation.SuggestionAddedNotification.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel_invitation.ChannelInvitation.SuggestionAddedNotification();
        return builder;
      }
      
      protected bnet.protocol.channel_invitation.ChannelInvitation.SuggestionAddedNotification internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel_invitation.ChannelInvitation.SuggestionAddedNotification();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel_invitation.ChannelInvitation.SuggestionAddedNotification.getDescriptor();
      }
      
      public bnet.protocol.channel_invitation.ChannelInvitation.SuggestionAddedNotification getDefaultInstanceForType() {
        return bnet.protocol.channel_invitation.ChannelInvitation.SuggestionAddedNotification.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel_invitation.ChannelInvitation.SuggestionAddedNotification build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel_invitation.ChannelInvitation.SuggestionAddedNotification buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel_invitation.ChannelInvitation.SuggestionAddedNotification buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.channel_invitation.ChannelInvitation.SuggestionAddedNotification returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel_invitation.ChannelInvitation.SuggestionAddedNotification) {
          return mergeFrom((bnet.protocol.channel_invitation.ChannelInvitation.SuggestionAddedNotification)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel_invitation.ChannelInvitation.SuggestionAddedNotification other) {
        if (other == bnet.protocol.channel_invitation.ChannelInvitation.SuggestionAddedNotification.getDefaultInstance()) return this;
        if (other.hasSuggestion()) {
          mergeSuggestion(other.getSuggestion());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.invitation.InvitationProto.Suggestion.Builder subBuilder = bnet.protocol.invitation.InvitationProto.Suggestion.newBuilder();
              if (hasSuggestion()) {
                subBuilder.mergeFrom(getSuggestion());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSuggestion(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .bnet.protocol.invitation.Suggestion suggestion = 1;
      public boolean hasSuggestion() {
        return result.hasSuggestion();
      }
      public bnet.protocol.invitation.InvitationProto.Suggestion getSuggestion() {
        return result.getSuggestion();
      }
      public Builder setSuggestion(bnet.protocol.invitation.InvitationProto.Suggestion value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSuggestion = true;
        result.suggestion_ = value;
        return this;
      }
      public Builder setSuggestion(bnet.protocol.invitation.InvitationProto.Suggestion.Builder builderForValue) {
        result.hasSuggestion = true;
        result.suggestion_ = builderForValue.build();
        return this;
      }
      public Builder mergeSuggestion(bnet.protocol.invitation.InvitationProto.Suggestion value) {
        if (result.hasSuggestion() &&
            result.suggestion_ != bnet.protocol.invitation.InvitationProto.Suggestion.getDefaultInstance()) {
          result.suggestion_ =
            bnet.protocol.invitation.InvitationProto.Suggestion.newBuilder(result.suggestion_).mergeFrom(value).buildPartial();
        } else {
          result.suggestion_ = value;
        }
        result.hasSuggestion = true;
        return this;
      }
      public Builder clearSuggestion() {
        result.hasSuggestion = false;
        result.suggestion_ = bnet.protocol.invitation.InvitationProto.Suggestion.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel_invitation.SuggestionAddedNotification)
    }
    
    static {
      defaultInstance = new SuggestionAddedNotification(true);
      bnet.protocol.channel_invitation.ChannelInvitation.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel_invitation.SuggestionAddedNotification)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_invitation_AcceptInvitationRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_invitation_AcceptInvitationRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_invitation_AcceptInvitationResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_invitation_AcceptInvitationResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_invitation_SubscribeRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_invitation_SubscribeRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_invitation_SubscribeResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_invitation_SubscribeResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_invitation_UnsubscribeRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_invitation_UnsubscribeRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_invitation_SuggestInvitationRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_invitation_SuggestInvitationRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_invitation_RevokeInvitationRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_invitation_RevokeInvitationRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_invitation_HasRoomForInvitationRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_invitation_HasRoomForInvitationRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_invitation_InvitationAddedNotification_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_invitation_InvitationAddedNotification_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_invitation_InvitationRemovedNotification_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_invitation_InvitationRemovedNotification_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_invitation_SuggestionAddedNotification_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_invitation_SuggestionAddedNotification_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n>service/channel_invitation/definition/" +
      "channel_invitation.proto\022 bnet.protocol." +
      "channel_invitation\032\031lib/protocol/entity." +
      "proto\032\035lib/protocol/invitation.proto\032\021li" +
      "b/rpc/rpc.proto\032(service/channel/definit" +
      "ion/channel.proto\0329service/channel_invit" +
      "ation/channel_invitation_types.proto\"n\n\027" +
      "AcceptInvitationRequest\022)\n\010agent_id\030\001 \001(" +
      "\0132\027.bnet.protocol.EntityId\022\025\n\rinvitation" +
      "_id\030\002 \002(\006\022\021\n\tobject_id\030\003 \002(\004\"-\n\030AcceptIn",
      "vitationResponse\022\021\n\tobject_id\030\001 \002(\004\"P\n\020S" +
      "ubscribeRequest\022)\n\010agent_id\030\001 \001(\0132\027.bnet" +
      ".protocol.EntityId\022\021\n\tobject_id\030\002 \002(\004\"\242\001" +
      "\n\021SubscribeResponse\022J\n\ncollection\030\001 \003(\0132" +
      "6.bnet.protocol.channel_invitation.Invit" +
      "ationCollection\022A\n\023received_invitation\030\002" +
      " \003(\0132$.bnet.protocol.invitation.Invitati" +
      "on\"?\n\022UnsubscribeRequest\022)\n\010agent_id\030\001 \001" +
      "(\0132\027.bnet.protocol.EntityId\"\314\001\n\030SuggestI" +
      "nvitationRequest\022)\n\010agent_id\030\001 \001(\0132\027.bne",
      "t.protocol.EntityId\022+\n\nchannel_id\030\002 \002(\0132" +
      "\027.bnet.protocol.EntityId\022*\n\ttarget_id\030\003 " +
      "\002(\0132\027.bnet.protocol.EntityId\022,\n\013approval" +
      "_id\030\004 \001(\0132\027.bnet.protocol.EntityId\"\264\001\n\027R" +
      "evokeInvitationRequest\022)\n\010agent_id\030\001 \001(\013" +
      "2\027.bnet.protocol.EntityId\022*\n\ttarget_id\030\002" +
      " \001(\0132\027.bnet.protocol.EntityId\022\025\n\rinvitat" +
      "ion_id\030\003 \002(\006\022+\n\nchannel_id\030\004 \002(\0132\027.bnet." +
      "protocol.EntityId\"3\n\033HasRoomForInvitatio" +
      "nRequest\022\024\n\014service_type\030\001 \002(\r\"W\n\033Invita",
      "tionAddedNotification\0228\n\ninvitation\030\001 \002(" +
      "\0132$.bnet.protocol.invitation.Invitation\"" +
      "i\n\035InvitationRemovedNotification\0228\n\ninvi" +
      "tation\030\001 \002(\0132$.bnet.protocol.invitation." +
      "Invitation\022\016\n\006reason\030\002 \001(\r\"W\n\033Suggestion" +
      "AddedNotification\0228\n\nsuggestion\030\001 \002(\0132$." +
      "bnet.protocol.invitation.Suggestion"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_bnet_protocol_channel_invitation_AcceptInvitationRequest_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_bnet_protocol_channel_invitation_AcceptInvitationRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_invitation_AcceptInvitationRequest_descriptor,
              new java.lang.String[] { "AgentId", "InvitationId", "ObjectId", },
              bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationRequest.class,
              bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationRequest.Builder.class);
          internal_static_bnet_protocol_channel_invitation_AcceptInvitationResponse_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_bnet_protocol_channel_invitation_AcceptInvitationResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_invitation_AcceptInvitationResponse_descriptor,
              new java.lang.String[] { "ObjectId", },
              bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationResponse.class,
              bnet.protocol.channel_invitation.ChannelInvitation.AcceptInvitationResponse.Builder.class);
          internal_static_bnet_protocol_channel_invitation_SubscribeRequest_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_bnet_protocol_channel_invitation_SubscribeRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_invitation_SubscribeRequest_descriptor,
              new java.lang.String[] { "AgentId", "ObjectId", },
              bnet.protocol.channel_invitation.ChannelInvitation.SubscribeRequest.class,
              bnet.protocol.channel_invitation.ChannelInvitation.SubscribeRequest.Builder.class);
          internal_static_bnet_protocol_channel_invitation_SubscribeResponse_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_bnet_protocol_channel_invitation_SubscribeResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_invitation_SubscribeResponse_descriptor,
              new java.lang.String[] { "Collection", "ReceivedInvitation", },
              bnet.protocol.channel_invitation.ChannelInvitation.SubscribeResponse.class,
              bnet.protocol.channel_invitation.ChannelInvitation.SubscribeResponse.Builder.class);
          internal_static_bnet_protocol_channel_invitation_UnsubscribeRequest_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_bnet_protocol_channel_invitation_UnsubscribeRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_invitation_UnsubscribeRequest_descriptor,
              new java.lang.String[] { "AgentId", },
              bnet.protocol.channel_invitation.ChannelInvitation.UnsubscribeRequest.class,
              bnet.protocol.channel_invitation.ChannelInvitation.UnsubscribeRequest.Builder.class);
          internal_static_bnet_protocol_channel_invitation_SuggestInvitationRequest_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_bnet_protocol_channel_invitation_SuggestInvitationRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_invitation_SuggestInvitationRequest_descriptor,
              new java.lang.String[] { "AgentId", "ChannelId", "TargetId", "ApprovalId", },
              bnet.protocol.channel_invitation.ChannelInvitation.SuggestInvitationRequest.class,
              bnet.protocol.channel_invitation.ChannelInvitation.SuggestInvitationRequest.Builder.class);
          internal_static_bnet_protocol_channel_invitation_RevokeInvitationRequest_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_bnet_protocol_channel_invitation_RevokeInvitationRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_invitation_RevokeInvitationRequest_descriptor,
              new java.lang.String[] { "AgentId", "TargetId", "InvitationId", "ChannelId", },
              bnet.protocol.channel_invitation.ChannelInvitation.RevokeInvitationRequest.class,
              bnet.protocol.channel_invitation.ChannelInvitation.RevokeInvitationRequest.Builder.class);
          internal_static_bnet_protocol_channel_invitation_HasRoomForInvitationRequest_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_bnet_protocol_channel_invitation_HasRoomForInvitationRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_invitation_HasRoomForInvitationRequest_descriptor,
              new java.lang.String[] { "ServiceType", },
              bnet.protocol.channel_invitation.ChannelInvitation.HasRoomForInvitationRequest.class,
              bnet.protocol.channel_invitation.ChannelInvitation.HasRoomForInvitationRequest.Builder.class);
          internal_static_bnet_protocol_channel_invitation_InvitationAddedNotification_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_bnet_protocol_channel_invitation_InvitationAddedNotification_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_invitation_InvitationAddedNotification_descriptor,
              new java.lang.String[] { "Invitation", },
              bnet.protocol.channel_invitation.ChannelInvitation.InvitationAddedNotification.class,
              bnet.protocol.channel_invitation.ChannelInvitation.InvitationAddedNotification.Builder.class);
          internal_static_bnet_protocol_channel_invitation_InvitationRemovedNotification_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_bnet_protocol_channel_invitation_InvitationRemovedNotification_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_invitation_InvitationRemovedNotification_descriptor,
              new java.lang.String[] { "Invitation", "Reason", },
              bnet.protocol.channel_invitation.ChannelInvitation.InvitationRemovedNotification.class,
              bnet.protocol.channel_invitation.ChannelInvitation.InvitationRemovedNotification.Builder.class);
          internal_static_bnet_protocol_channel_invitation_SuggestionAddedNotification_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_bnet_protocol_channel_invitation_SuggestionAddedNotification_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_invitation_SuggestionAddedNotification_descriptor,
              new java.lang.String[] { "Suggestion", },
              bnet.protocol.channel_invitation.ChannelInvitation.SuggestionAddedNotification.class,
              bnet.protocol.channel_invitation.ChannelInvitation.SuggestionAddedNotification.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          bnet.protocol.Entity.getDescriptor(),
          bnet.protocol.invitation.InvitationProto.getDescriptor(),
          bnet.protocol.Rpc.getDescriptor(),
          bnet.protocol.channel.Channel.getDescriptor(),
          bnet.protocol.channel_invitation.ChannelInvitationTypes.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
