// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service/channel_invitation/channel_invitation_types.proto

package bnet.protocol.channel_invitation;

public final class ChannelInvitationTypes {
  private ChannelInvitationTypes() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class Invitation extends
      com.google.protobuf.GeneratedMessage {
    // Use Invitation.newBuilder() to construct.
    private Invitation() {
      initFields();
    }
    private Invitation(boolean noInit) {}
    
    private static final Invitation defaultInstance;
    public static Invitation getDefaultInstance() {
      return defaultInstance;
    }
    
    public Invitation getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel_invitation.ChannelInvitationTypes.internal_static_bnet_protocol_channel_invitation_Invitation_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel_invitation.ChannelInvitationTypes.internal_static_bnet_protocol_channel_invitation_Invitation_fieldAccessorTable;
    }
    
    // required .bnet.protocol.channel.ChannelDescription channel_description = 1;
    public static final int CHANNEL_DESCRIPTION_FIELD_NUMBER = 1;
    private boolean hasChannelDescription;
    private bnet.protocol.channel.ChannelTypes.ChannelDescription channelDescription_;
    public boolean hasChannelDescription() { return hasChannelDescription; }
    public bnet.protocol.channel.ChannelTypes.ChannelDescription getChannelDescription() { return channelDescription_; }
    
    // optional bool reserved = 2;
    public static final int RESERVED_FIELD_NUMBER = 2;
    private boolean hasReserved;
    private boolean reserved_ = false;
    public boolean hasReserved() { return hasReserved; }
    public boolean getReserved() { return reserved_; }
    
    // optional bool rejoin = 3;
    public static final int REJOIN_FIELD_NUMBER = 3;
    private boolean hasRejoin;
    private boolean rejoin_ = false;
    public boolean hasRejoin() { return hasRejoin; }
    public boolean getRejoin() { return rejoin_; }
    
    // optional uint32 service_type = 4;
    public static final int SERVICE_TYPE_FIELD_NUMBER = 4;
    private boolean hasServiceType;
    private int serviceType_ = 0;
    public boolean hasServiceType() { return hasServiceType; }
    public int getServiceType() { return serviceType_; }
    
    private void initFields() {
      channelDescription_ = bnet.protocol.channel.ChannelTypes.ChannelDescription.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasChannelDescription) return false;
      if (!getChannelDescription().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasChannelDescription()) {
        output.writeMessage(1, getChannelDescription());
      }
      if (hasReserved()) {
        output.writeBool(2, getReserved());
      }
      if (hasRejoin()) {
        output.writeBool(3, getRejoin());
      }
      if (hasServiceType()) {
        output.writeUInt32(4, getServiceType());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasChannelDescription()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getChannelDescription());
      }
      if (hasReserved()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, getReserved());
      }
      if (hasRejoin()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, getRejoin());
      }
      if (hasServiceType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, getServiceType());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel_invitation.ChannelInvitationTypes.Invitation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitationTypes.Invitation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitationTypes.Invitation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitationTypes.Invitation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitationTypes.Invitation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitationTypes.Invitation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitationTypes.Invitation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel_invitation.ChannelInvitationTypes.Invitation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel_invitation.ChannelInvitationTypes.Invitation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitationTypes.Invitation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel_invitation.ChannelInvitationTypes.Invitation prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel_invitation.ChannelInvitationTypes.Invitation result;
      
      // Construct using bnet.protocol.channel_invitation.ChannelInvitationTypes.Invitation.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel_invitation.ChannelInvitationTypes.Invitation();
        return builder;
      }
      
      protected bnet.protocol.channel_invitation.ChannelInvitationTypes.Invitation internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel_invitation.ChannelInvitationTypes.Invitation();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel_invitation.ChannelInvitationTypes.Invitation.getDescriptor();
      }
      
      public bnet.protocol.channel_invitation.ChannelInvitationTypes.Invitation getDefaultInstanceForType() {
        return bnet.protocol.channel_invitation.ChannelInvitationTypes.Invitation.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel_invitation.ChannelInvitationTypes.Invitation build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel_invitation.ChannelInvitationTypes.Invitation buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel_invitation.ChannelInvitationTypes.Invitation buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.channel_invitation.ChannelInvitationTypes.Invitation returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel_invitation.ChannelInvitationTypes.Invitation) {
          return mergeFrom((bnet.protocol.channel_invitation.ChannelInvitationTypes.Invitation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel_invitation.ChannelInvitationTypes.Invitation other) {
        if (other == bnet.protocol.channel_invitation.ChannelInvitationTypes.Invitation.getDefaultInstance()) return this;
        if (other.hasChannelDescription()) {
          mergeChannelDescription(other.getChannelDescription());
        }
        if (other.hasReserved()) {
          setReserved(other.getReserved());
        }
        if (other.hasRejoin()) {
          setRejoin(other.getRejoin());
        }
        if (other.hasServiceType()) {
          setServiceType(other.getServiceType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.channel.ChannelTypes.ChannelDescription.Builder subBuilder = bnet.protocol.channel.ChannelTypes.ChannelDescription.newBuilder();
              if (hasChannelDescription()) {
                subBuilder.mergeFrom(getChannelDescription());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setChannelDescription(subBuilder.buildPartial());
              break;
            }
            case 16: {
              setReserved(input.readBool());
              break;
            }
            case 24: {
              setRejoin(input.readBool());
              break;
            }
            case 32: {
              setServiceType(input.readUInt32());
              break;
            }
          }
        }
      }
      
      
      // required .bnet.protocol.channel.ChannelDescription channel_description = 1;
      public boolean hasChannelDescription() {
        return result.hasChannelDescription();
      }
      public bnet.protocol.channel.ChannelTypes.ChannelDescription getChannelDescription() {
        return result.getChannelDescription();
      }
      public Builder setChannelDescription(bnet.protocol.channel.ChannelTypes.ChannelDescription value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasChannelDescription = true;
        result.channelDescription_ = value;
        return this;
      }
      public Builder setChannelDescription(bnet.protocol.channel.ChannelTypes.ChannelDescription.Builder builderForValue) {
        result.hasChannelDescription = true;
        result.channelDescription_ = builderForValue.build();
        return this;
      }
      public Builder mergeChannelDescription(bnet.protocol.channel.ChannelTypes.ChannelDescription value) {
        if (result.hasChannelDescription() &&
            result.channelDescription_ != bnet.protocol.channel.ChannelTypes.ChannelDescription.getDefaultInstance()) {
          result.channelDescription_ =
            bnet.protocol.channel.ChannelTypes.ChannelDescription.newBuilder(result.channelDescription_).mergeFrom(value).buildPartial();
        } else {
          result.channelDescription_ = value;
        }
        result.hasChannelDescription = true;
        return this;
      }
      public Builder clearChannelDescription() {
        result.hasChannelDescription = false;
        result.channelDescription_ = bnet.protocol.channel.ChannelTypes.ChannelDescription.getDefaultInstance();
        return this;
      }
      
      // optional bool reserved = 2;
      public boolean hasReserved() {
        return result.hasReserved();
      }
      public boolean getReserved() {
        return result.getReserved();
      }
      public Builder setReserved(boolean value) {
        result.hasReserved = true;
        result.reserved_ = value;
        return this;
      }
      public Builder clearReserved() {
        result.hasReserved = false;
        result.reserved_ = false;
        return this;
      }
      
      // optional bool rejoin = 3;
      public boolean hasRejoin() {
        return result.hasRejoin();
      }
      public boolean getRejoin() {
        return result.getRejoin();
      }
      public Builder setRejoin(boolean value) {
        result.hasRejoin = true;
        result.rejoin_ = value;
        return this;
      }
      public Builder clearRejoin() {
        result.hasRejoin = false;
        result.rejoin_ = false;
        return this;
      }
      
      // optional uint32 service_type = 4;
      public boolean hasServiceType() {
        return result.hasServiceType();
      }
      public int getServiceType() {
        return result.getServiceType();
      }
      public Builder setServiceType(int value) {
        result.hasServiceType = true;
        result.serviceType_ = value;
        return this;
      }
      public Builder clearServiceType() {
        result.hasServiceType = false;
        result.serviceType_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel_invitation.Invitation)
    }
    
    static {
      defaultInstance = new Invitation(true);
      bnet.protocol.channel_invitation.ChannelInvitationTypes.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel_invitation.Invitation)
  }
  
  public static final class SendInvitationRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use SendInvitationRequest.newBuilder() to construct.
    private SendInvitationRequest() {
      initFields();
    }
    private SendInvitationRequest(boolean noInit) {}
    
    private static final SendInvitationRequest defaultInstance;
    public static SendInvitationRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public SendInvitationRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel_invitation.ChannelInvitationTypes.internal_static_bnet_protocol_channel_invitation_SendInvitationRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel_invitation.ChannelInvitationTypes.internal_static_bnet_protocol_channel_invitation_SendInvitationRequest_fieldAccessorTable;
    }
    
    // optional .bnet.protocol.EntityId channel_id = 1;
    public static final int CHANNEL_ID_FIELD_NUMBER = 1;
    private boolean hasChannelId;
    private bnet.protocol.Entity.EntityId channelId_;
    public boolean hasChannelId() { return hasChannelId; }
    public bnet.protocol.Entity.EntityId getChannelId() { return channelId_; }
    
    // optional bool reserved = 2;
    public static final int RESERVED_FIELD_NUMBER = 2;
    private boolean hasReserved;
    private boolean reserved_ = false;
    public boolean hasReserved() { return hasReserved; }
    public boolean getReserved() { return reserved_; }
    
    // optional bool rejoin = 3;
    public static final int REJOIN_FIELD_NUMBER = 3;
    private boolean hasRejoin;
    private boolean rejoin_ = false;
    public boolean hasRejoin() { return hasRejoin; }
    public boolean getRejoin() { return rejoin_; }
    
    // optional uint32 service_type = 4;
    public static final int SERVICE_TYPE_FIELD_NUMBER = 4;
    private boolean hasServiceType;
    private int serviceType_ = 0;
    public boolean hasServiceType() { return hasServiceType; }
    public int getServiceType() { return serviceType_; }
    
    private void initFields() {
      channelId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (hasChannelId()) {
        if (!getChannelId().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasChannelId()) {
        output.writeMessage(1, getChannelId());
      }
      if (hasReserved()) {
        output.writeBool(2, getReserved());
      }
      if (hasRejoin()) {
        output.writeBool(3, getRejoin());
      }
      if (hasServiceType()) {
        output.writeUInt32(4, getServiceType());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasChannelId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getChannelId());
      }
      if (hasReserved()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, getReserved());
      }
      if (hasRejoin()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, getRejoin());
      }
      if (hasServiceType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, getServiceType());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel_invitation.ChannelInvitationTypes.SendInvitationRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitationTypes.SendInvitationRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitationTypes.SendInvitationRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitationTypes.SendInvitationRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitationTypes.SendInvitationRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitationTypes.SendInvitationRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitationTypes.SendInvitationRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel_invitation.ChannelInvitationTypes.SendInvitationRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel_invitation.ChannelInvitationTypes.SendInvitationRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitationTypes.SendInvitationRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel_invitation.ChannelInvitationTypes.SendInvitationRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel_invitation.ChannelInvitationTypes.SendInvitationRequest result;
      
      // Construct using bnet.protocol.channel_invitation.ChannelInvitationTypes.SendInvitationRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel_invitation.ChannelInvitationTypes.SendInvitationRequest();
        return builder;
      }
      
      protected bnet.protocol.channel_invitation.ChannelInvitationTypes.SendInvitationRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel_invitation.ChannelInvitationTypes.SendInvitationRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel_invitation.ChannelInvitationTypes.SendInvitationRequest.getDescriptor();
      }
      
      public bnet.protocol.channel_invitation.ChannelInvitationTypes.SendInvitationRequest getDefaultInstanceForType() {
        return bnet.protocol.channel_invitation.ChannelInvitationTypes.SendInvitationRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel_invitation.ChannelInvitationTypes.SendInvitationRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel_invitation.ChannelInvitationTypes.SendInvitationRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel_invitation.ChannelInvitationTypes.SendInvitationRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.channel_invitation.ChannelInvitationTypes.SendInvitationRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel_invitation.ChannelInvitationTypes.SendInvitationRequest) {
          return mergeFrom((bnet.protocol.channel_invitation.ChannelInvitationTypes.SendInvitationRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel_invitation.ChannelInvitationTypes.SendInvitationRequest other) {
        if (other == bnet.protocol.channel_invitation.ChannelInvitationTypes.SendInvitationRequest.getDefaultInstance()) return this;
        if (other.hasChannelId()) {
          mergeChannelId(other.getChannelId());
        }
        if (other.hasReserved()) {
          setReserved(other.getReserved());
        }
        if (other.hasRejoin()) {
          setRejoin(other.getRejoin());
        }
        if (other.hasServiceType()) {
          setServiceType(other.getServiceType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasChannelId()) {
                subBuilder.mergeFrom(getChannelId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setChannelId(subBuilder.buildPartial());
              break;
            }
            case 16: {
              setReserved(input.readBool());
              break;
            }
            case 24: {
              setRejoin(input.readBool());
              break;
            }
            case 32: {
              setServiceType(input.readUInt32());
              break;
            }
          }
        }
      }
      
      
      // optional .bnet.protocol.EntityId channel_id = 1;
      public boolean hasChannelId() {
        return result.hasChannelId();
      }
      public bnet.protocol.Entity.EntityId getChannelId() {
        return result.getChannelId();
      }
      public Builder setChannelId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder setChannelId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasChannelId = true;
        result.channelId_ = builderForValue.build();
        return this;
      }
      public Builder mergeChannelId(bnet.protocol.Entity.EntityId value) {
        if (result.hasChannelId() &&
            result.channelId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.channelId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.channelId_).mergeFrom(value).buildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder clearChannelId() {
        result.hasChannelId = false;
        result.channelId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // optional bool reserved = 2;
      public boolean hasReserved() {
        return result.hasReserved();
      }
      public boolean getReserved() {
        return result.getReserved();
      }
      public Builder setReserved(boolean value) {
        result.hasReserved = true;
        result.reserved_ = value;
        return this;
      }
      public Builder clearReserved() {
        result.hasReserved = false;
        result.reserved_ = false;
        return this;
      }
      
      // optional bool rejoin = 3;
      public boolean hasRejoin() {
        return result.hasRejoin();
      }
      public boolean getRejoin() {
        return result.getRejoin();
      }
      public Builder setRejoin(boolean value) {
        result.hasRejoin = true;
        result.rejoin_ = value;
        return this;
      }
      public Builder clearRejoin() {
        result.hasRejoin = false;
        result.rejoin_ = false;
        return this;
      }
      
      // optional uint32 service_type = 4;
      public boolean hasServiceType() {
        return result.hasServiceType();
      }
      public int getServiceType() {
        return result.getServiceType();
      }
      public Builder setServiceType(int value) {
        result.hasServiceType = true;
        result.serviceType_ = value;
        return this;
      }
      public Builder clearServiceType() {
        result.hasServiceType = false;
        result.serviceType_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel_invitation.SendInvitationRequest)
    }
    
    static {
      defaultInstance = new SendInvitationRequest(true);
      bnet.protocol.channel_invitation.ChannelInvitationTypes.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel_invitation.SendInvitationRequest)
  }
  
  public static final class InvitationCollection extends
      com.google.protobuf.GeneratedMessage {
    // Use InvitationCollection.newBuilder() to construct.
    private InvitationCollection() {
      initFields();
    }
    private InvitationCollection(boolean noInit) {}
    
    private static final InvitationCollection defaultInstance;
    public static InvitationCollection getDefaultInstance() {
      return defaultInstance;
    }
    
    public InvitationCollection getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.channel_invitation.ChannelInvitationTypes.internal_static_bnet_protocol_channel_invitation_InvitationCollection_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.channel_invitation.ChannelInvitationTypes.internal_static_bnet_protocol_channel_invitation_InvitationCollection_fieldAccessorTable;
    }
    
    // optional uint32 service_type = 1;
    public static final int SERVICE_TYPE_FIELD_NUMBER = 1;
    private boolean hasServiceType;
    private int serviceType_ = 0;
    public boolean hasServiceType() { return hasServiceType; }
    public int getServiceType() { return serviceType_; }
    
    // optional uint32 max_received_invitations = 2;
    public static final int MAX_RECEIVED_INVITATIONS_FIELD_NUMBER = 2;
    private boolean hasMaxReceivedInvitations;
    private int maxReceivedInvitations_ = 0;
    public boolean hasMaxReceivedInvitations() { return hasMaxReceivedInvitations; }
    public int getMaxReceivedInvitations() { return maxReceivedInvitations_; }
    
    // optional uint64 object_id = 3;
    public static final int OBJECT_ID_FIELD_NUMBER = 3;
    private boolean hasObjectId;
    private long objectId_ = 0L;
    public boolean hasObjectId() { return hasObjectId; }
    public long getObjectId() { return objectId_; }
    
    // repeated .bnet.protocol.invitation.Invitation received_invitation = 4;
    public static final int RECEIVED_INVITATION_FIELD_NUMBER = 4;
    private java.util.List<bnet.protocol.invitation.InvitationProto.Invitation> receivedInvitation_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.invitation.InvitationProto.Invitation> getReceivedInvitationList() {
      return receivedInvitation_;
    }
    public int getReceivedInvitationCount() { return receivedInvitation_.size(); }
    public bnet.protocol.invitation.InvitationProto.Invitation getReceivedInvitation(int index) {
      return receivedInvitation_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (bnet.protocol.invitation.InvitationProto.Invitation element : getReceivedInvitationList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasServiceType()) {
        output.writeUInt32(1, getServiceType());
      }
      if (hasMaxReceivedInvitations()) {
        output.writeUInt32(2, getMaxReceivedInvitations());
      }
      if (hasObjectId()) {
        output.writeUInt64(3, getObjectId());
      }
      for (bnet.protocol.invitation.InvitationProto.Invitation element : getReceivedInvitationList()) {
        output.writeMessage(4, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasServiceType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getServiceType());
      }
      if (hasMaxReceivedInvitations()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getMaxReceivedInvitations());
      }
      if (hasObjectId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, getObjectId());
      }
      for (bnet.protocol.invitation.InvitationProto.Invitation element : getReceivedInvitationList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection result;
      
      // Construct using bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection();
        return builder;
      }
      
      protected bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection.getDescriptor();
      }
      
      public bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection getDefaultInstanceForType() {
        return bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.receivedInvitation_ != java.util.Collections.EMPTY_LIST) {
          result.receivedInvitation_ =
            java.util.Collections.unmodifiableList(result.receivedInvitation_);
        }
        bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection) {
          return mergeFrom((bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection other) {
        if (other == bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection.getDefaultInstance()) return this;
        if (other.hasServiceType()) {
          setServiceType(other.getServiceType());
        }
        if (other.hasMaxReceivedInvitations()) {
          setMaxReceivedInvitations(other.getMaxReceivedInvitations());
        }
        if (other.hasObjectId()) {
          setObjectId(other.getObjectId());
        }
        if (!other.receivedInvitation_.isEmpty()) {
          if (result.receivedInvitation_.isEmpty()) {
            result.receivedInvitation_ = new java.util.ArrayList<bnet.protocol.invitation.InvitationProto.Invitation>();
          }
          result.receivedInvitation_.addAll(other.receivedInvitation_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setServiceType(input.readUInt32());
              break;
            }
            case 16: {
              setMaxReceivedInvitations(input.readUInt32());
              break;
            }
            case 24: {
              setObjectId(input.readUInt64());
              break;
            }
            case 34: {
              bnet.protocol.invitation.InvitationProto.Invitation.Builder subBuilder = bnet.protocol.invitation.InvitationProto.Invitation.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addReceivedInvitation(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 service_type = 1;
      public boolean hasServiceType() {
        return result.hasServiceType();
      }
      public int getServiceType() {
        return result.getServiceType();
      }
      public Builder setServiceType(int value) {
        result.hasServiceType = true;
        result.serviceType_ = value;
        return this;
      }
      public Builder clearServiceType() {
        result.hasServiceType = false;
        result.serviceType_ = 0;
        return this;
      }
      
      // optional uint32 max_received_invitations = 2;
      public boolean hasMaxReceivedInvitations() {
        return result.hasMaxReceivedInvitations();
      }
      public int getMaxReceivedInvitations() {
        return result.getMaxReceivedInvitations();
      }
      public Builder setMaxReceivedInvitations(int value) {
        result.hasMaxReceivedInvitations = true;
        result.maxReceivedInvitations_ = value;
        return this;
      }
      public Builder clearMaxReceivedInvitations() {
        result.hasMaxReceivedInvitations = false;
        result.maxReceivedInvitations_ = 0;
        return this;
      }
      
      // optional uint64 object_id = 3;
      public boolean hasObjectId() {
        return result.hasObjectId();
      }
      public long getObjectId() {
        return result.getObjectId();
      }
      public Builder setObjectId(long value) {
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder clearObjectId() {
        result.hasObjectId = false;
        result.objectId_ = 0L;
        return this;
      }
      
      // repeated .bnet.protocol.invitation.Invitation received_invitation = 4;
      public java.util.List<bnet.protocol.invitation.InvitationProto.Invitation> getReceivedInvitationList() {
        return java.util.Collections.unmodifiableList(result.receivedInvitation_);
      }
      public int getReceivedInvitationCount() {
        return result.getReceivedInvitationCount();
      }
      public bnet.protocol.invitation.InvitationProto.Invitation getReceivedInvitation(int index) {
        return result.getReceivedInvitation(index);
      }
      public Builder setReceivedInvitation(int index, bnet.protocol.invitation.InvitationProto.Invitation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.receivedInvitation_.set(index, value);
        return this;
      }
      public Builder setReceivedInvitation(int index, bnet.protocol.invitation.InvitationProto.Invitation.Builder builderForValue) {
        result.receivedInvitation_.set(index, builderForValue.build());
        return this;
      }
      public Builder addReceivedInvitation(bnet.protocol.invitation.InvitationProto.Invitation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.receivedInvitation_.isEmpty()) {
          result.receivedInvitation_ = new java.util.ArrayList<bnet.protocol.invitation.InvitationProto.Invitation>();
        }
        result.receivedInvitation_.add(value);
        return this;
      }
      public Builder addReceivedInvitation(bnet.protocol.invitation.InvitationProto.Invitation.Builder builderForValue) {
        if (result.receivedInvitation_.isEmpty()) {
          result.receivedInvitation_ = new java.util.ArrayList<bnet.protocol.invitation.InvitationProto.Invitation>();
        }
        result.receivedInvitation_.add(builderForValue.build());
        return this;
      }
      public Builder addAllReceivedInvitation(
          java.lang.Iterable<? extends bnet.protocol.invitation.InvitationProto.Invitation> values) {
        if (result.receivedInvitation_.isEmpty()) {
          result.receivedInvitation_ = new java.util.ArrayList<bnet.protocol.invitation.InvitationProto.Invitation>();
        }
        super.addAll(values, result.receivedInvitation_);
        return this;
      }
      public Builder clearReceivedInvitation() {
        result.receivedInvitation_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.channel_invitation.InvitationCollection)
    }
    
    static {
      defaultInstance = new InvitationCollection(true);
      bnet.protocol.channel_invitation.ChannelInvitationTypes.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.channel_invitation.InvitationCollection)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_invitation_Invitation_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_invitation_Invitation_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_invitation_SendInvitationRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_invitation_SendInvitationRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_channel_invitation_InvitationCollection_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_channel_invitation_InvitationCollection_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n9service/channel_invitation/channel_inv" +
      "itation_types.proto\022 bnet.protocol.chann" +
      "el_invitation\032\035lib/protocol/invitation.p" +
      "roto\032\031lib/protocol/entity.proto\032#service" +
      "/channel/channel_types.proto\"\214\001\n\nInvitat" +
      "ion\022F\n\023channel_description\030\001 \002(\0132).bnet." +
      "protocol.channel.ChannelDescription\022\020\n\010r" +
      "eserved\030\002 \001(\010\022\016\n\006rejoin\030\003 \001(\010\022\024\n\014service" +
      "_type\030\004 \001(\r\"|\n\025SendInvitationRequest\022+\n\n" +
      "channel_id\030\001 \001(\0132\027.bnet.protocol.EntityI",
      "d\022\020\n\010reserved\030\002 \001(\010\022\016\n\006rejoin\030\003 \001(\010\022\024\n\014s" +
      "ervice_type\030\004 \001(\r\"\244\001\n\024InvitationCollecti" +
      "on\022\024\n\014service_type\030\001 \001(\r\022 \n\030max_received" +
      "_invitations\030\002 \001(\r\022\021\n\tobject_id\030\003 \001(\004\022A\n" +
      "\023received_invitation\030\004 \003(\0132$.bnet.protoc" +
      "ol.invitation.Invitation"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_bnet_protocol_channel_invitation_Invitation_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_bnet_protocol_channel_invitation_Invitation_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_invitation_Invitation_descriptor,
              new java.lang.String[] { "ChannelDescription", "Reserved", "Rejoin", "ServiceType", },
              bnet.protocol.channel_invitation.ChannelInvitationTypes.Invitation.class,
              bnet.protocol.channel_invitation.ChannelInvitationTypes.Invitation.Builder.class);
          internal_static_bnet_protocol_channel_invitation_SendInvitationRequest_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_bnet_protocol_channel_invitation_SendInvitationRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_invitation_SendInvitationRequest_descriptor,
              new java.lang.String[] { "ChannelId", "Reserved", "Rejoin", "ServiceType", },
              bnet.protocol.channel_invitation.ChannelInvitationTypes.SendInvitationRequest.class,
              bnet.protocol.channel_invitation.ChannelInvitationTypes.SendInvitationRequest.Builder.class);
          internal_static_bnet_protocol_channel_invitation_InvitationCollection_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_bnet_protocol_channel_invitation_InvitationCollection_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_channel_invitation_InvitationCollection_descriptor,
              new java.lang.String[] { "ServiceType", "MaxReceivedInvitations", "ObjectId", "ReceivedInvitation", },
              bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection.class,
              bnet.protocol.channel_invitation.ChannelInvitationTypes.InvitationCollection.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          bnet.protocol.invitation.InvitationProto.getDescriptor(),
          bnet.protocol.Entity.getDescriptor(),
          bnet.protocol.channel.ChannelTypes.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
