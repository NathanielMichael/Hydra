// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lib/config/process_config.proto

package bnet.protocol.config;

public final class Process_ConfigProto {
  private Process_ConfigProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class Var extends
      com.google.protobuf.GeneratedMessage {
    // Use Var.newBuilder() to construct.
    private Var() {
      initFields();
    }
    private Var(boolean noInit) {}
    
    private static final Var defaultInstance;
    public static Var getDefaultInstance() {
      return defaultInstance;
    }
    
    public Var getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.config.Process_ConfigProto.internal_static_bnet_protocol_config_Var_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.config.Process_ConfigProto.internal_static_bnet_protocol_config_Var_fieldAccessorTable;
    }
    
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // required string value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private boolean hasValue;
    private java.lang.String value_ = "";
    public boolean hasValue() { return hasValue; }
    public java.lang.String getValue() { return value_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasName) return false;
      if (!hasValue) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasName()) {
        output.writeString(1, getName());
      }
      if (hasValue()) {
        output.writeString(2, getValue());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      if (hasValue()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getValue());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.config.Process_ConfigProto.Var parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.Var parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.Var parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.Var parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.Var parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.Var parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.Var parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.config.Process_ConfigProto.Var parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.config.Process_ConfigProto.Var parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.Var parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.config.Process_ConfigProto.Var prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.config.Process_ConfigProto.Var result;
      
      // Construct using bnet.protocol.config.Process_ConfigProto.Var.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.config.Process_ConfigProto.Var();
        return builder;
      }
      
      protected bnet.protocol.config.Process_ConfigProto.Var internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.config.Process_ConfigProto.Var();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.config.Process_ConfigProto.Var.getDescriptor();
      }
      
      public bnet.protocol.config.Process_ConfigProto.Var getDefaultInstanceForType() {
        return bnet.protocol.config.Process_ConfigProto.Var.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.config.Process_ConfigProto.Var build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.config.Process_ConfigProto.Var buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.config.Process_ConfigProto.Var buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.config.Process_ConfigProto.Var returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.config.Process_ConfigProto.Var) {
          return mergeFrom((bnet.protocol.config.Process_ConfigProto.Var)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.config.Process_ConfigProto.Var other) {
        if (other == bnet.protocol.config.Process_ConfigProto.Var.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setName(input.readString());
              break;
            }
            case 18: {
              setValue(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // required string value = 2;
      public boolean hasValue() {
        return result.hasValue();
      }
      public java.lang.String getValue() {
        return result.getValue();
      }
      public Builder setValue(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder clearValue() {
        result.hasValue = false;
        result.value_ = getDefaultInstance().getValue();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.config.Var)
    }
    
    static {
      defaultInstance = new Var(true);
      bnet.protocol.config.Process_ConfigProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.config.Var)
  }
  
  public static final class Resource extends
      com.google.protobuf.GeneratedMessage {
    // Use Resource.newBuilder() to construct.
    private Resource() {
      initFields();
    }
    private Resource(boolean noInit) {}
    
    private static final Resource defaultInstance;
    public static Resource getDefaultInstance() {
      return defaultInstance;
    }
    
    public Resource getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.config.Process_ConfigProto.internal_static_bnet_protocol_config_Resource_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.config.Process_ConfigProto.internal_static_bnet_protocol_config_Resource_fieldAccessorTable;
    }
    
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // required string url = 2;
    public static final int URL_FIELD_NUMBER = 2;
    private boolean hasUrl;
    private java.lang.String url_ = "";
    public boolean hasUrl() { return hasUrl; }
    public java.lang.String getUrl() { return url_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasName) return false;
      if (!hasUrl) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasName()) {
        output.writeString(1, getName());
      }
      if (hasUrl()) {
        output.writeString(2, getUrl());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      if (hasUrl()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getUrl());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.config.Process_ConfigProto.Resource parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.Resource parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.Resource parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.Resource parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.Resource parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.Resource parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.Resource parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.config.Process_ConfigProto.Resource parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.config.Process_ConfigProto.Resource parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.Resource parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.config.Process_ConfigProto.Resource prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.config.Process_ConfigProto.Resource result;
      
      // Construct using bnet.protocol.config.Process_ConfigProto.Resource.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.config.Process_ConfigProto.Resource();
        return builder;
      }
      
      protected bnet.protocol.config.Process_ConfigProto.Resource internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.config.Process_ConfigProto.Resource();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.config.Process_ConfigProto.Resource.getDescriptor();
      }
      
      public bnet.protocol.config.Process_ConfigProto.Resource getDefaultInstanceForType() {
        return bnet.protocol.config.Process_ConfigProto.Resource.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.config.Process_ConfigProto.Resource build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.config.Process_ConfigProto.Resource buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.config.Process_ConfigProto.Resource buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.config.Process_ConfigProto.Resource returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.config.Process_ConfigProto.Resource) {
          return mergeFrom((bnet.protocol.config.Process_ConfigProto.Resource)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.config.Process_ConfigProto.Resource other) {
        if (other == bnet.protocol.config.Process_ConfigProto.Resource.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasUrl()) {
          setUrl(other.getUrl());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setName(input.readString());
              break;
            }
            case 18: {
              setUrl(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // required string url = 2;
      public boolean hasUrl() {
        return result.hasUrl();
      }
      public java.lang.String getUrl() {
        return result.getUrl();
      }
      public Builder setUrl(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasUrl = true;
        result.url_ = value;
        return this;
      }
      public Builder clearUrl() {
        result.hasUrl = false;
        result.url_ = getDefaultInstance().getUrl();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.config.Resource)
    }
    
    static {
      defaultInstance = new Resource(true);
      bnet.protocol.config.Process_ConfigProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.config.Resource)
  }
  
  public static final class ProgramResources extends
      com.google.protobuf.GeneratedMessage {
    // Use ProgramResources.newBuilder() to construct.
    private ProgramResources() {
      initFields();
    }
    private ProgramResources(boolean noInit) {}
    
    private static final ProgramResources defaultInstance;
    public static ProgramResources getDefaultInstance() {
      return defaultInstance;
    }
    
    public ProgramResources getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.config.Process_ConfigProto.internal_static_bnet_protocol_config_ProgramResources_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.config.Process_ConfigProto.internal_static_bnet_protocol_config_ProgramResources_fieldAccessorTable;
    }
    
    // repeated .bnet.protocol.config.Resource program = 1;
    public static final int PROGRAM_FIELD_NUMBER = 1;
    private java.util.List<bnet.protocol.config.Process_ConfigProto.Resource> program_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.config.Process_ConfigProto.Resource> getProgramList() {
      return program_;
    }
    public int getProgramCount() { return program_.size(); }
    public bnet.protocol.config.Process_ConfigProto.Resource getProgram(int index) {
      return program_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (bnet.protocol.config.Process_ConfigProto.Resource element : getProgramList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (bnet.protocol.config.Process_ConfigProto.Resource element : getProgramList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (bnet.protocol.config.Process_ConfigProto.Resource element : getProgramList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.config.Process_ConfigProto.ProgramResources parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ProgramResources parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ProgramResources parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ProgramResources parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ProgramResources parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ProgramResources parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ProgramResources parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.config.Process_ConfigProto.ProgramResources parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.config.Process_ConfigProto.ProgramResources parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ProgramResources parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.config.Process_ConfigProto.ProgramResources prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.config.Process_ConfigProto.ProgramResources result;
      
      // Construct using bnet.protocol.config.Process_ConfigProto.ProgramResources.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.config.Process_ConfigProto.ProgramResources();
        return builder;
      }
      
      protected bnet.protocol.config.Process_ConfigProto.ProgramResources internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.config.Process_ConfigProto.ProgramResources();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.config.Process_ConfigProto.ProgramResources.getDescriptor();
      }
      
      public bnet.protocol.config.Process_ConfigProto.ProgramResources getDefaultInstanceForType() {
        return bnet.protocol.config.Process_ConfigProto.ProgramResources.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.config.Process_ConfigProto.ProgramResources build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.config.Process_ConfigProto.ProgramResources buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.config.Process_ConfigProto.ProgramResources buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.program_ != java.util.Collections.EMPTY_LIST) {
          result.program_ =
            java.util.Collections.unmodifiableList(result.program_);
        }
        bnet.protocol.config.Process_ConfigProto.ProgramResources returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.config.Process_ConfigProto.ProgramResources) {
          return mergeFrom((bnet.protocol.config.Process_ConfigProto.ProgramResources)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.config.Process_ConfigProto.ProgramResources other) {
        if (other == bnet.protocol.config.Process_ConfigProto.ProgramResources.getDefaultInstance()) return this;
        if (!other.program_.isEmpty()) {
          if (result.program_.isEmpty()) {
            result.program_ = new java.util.ArrayList<bnet.protocol.config.Process_ConfigProto.Resource>();
          }
          result.program_.addAll(other.program_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.config.Process_ConfigProto.Resource.Builder subBuilder = bnet.protocol.config.Process_ConfigProto.Resource.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addProgram(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .bnet.protocol.config.Resource program = 1;
      public java.util.List<bnet.protocol.config.Process_ConfigProto.Resource> getProgramList() {
        return java.util.Collections.unmodifiableList(result.program_);
      }
      public int getProgramCount() {
        return result.getProgramCount();
      }
      public bnet.protocol.config.Process_ConfigProto.Resource getProgram(int index) {
        return result.getProgram(index);
      }
      public Builder setProgram(int index, bnet.protocol.config.Process_ConfigProto.Resource value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.program_.set(index, value);
        return this;
      }
      public Builder setProgram(int index, bnet.protocol.config.Process_ConfigProto.Resource.Builder builderForValue) {
        result.program_.set(index, builderForValue.build());
        return this;
      }
      public Builder addProgram(bnet.protocol.config.Process_ConfigProto.Resource value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.program_.isEmpty()) {
          result.program_ = new java.util.ArrayList<bnet.protocol.config.Process_ConfigProto.Resource>();
        }
        result.program_.add(value);
        return this;
      }
      public Builder addProgram(bnet.protocol.config.Process_ConfigProto.Resource.Builder builderForValue) {
        if (result.program_.isEmpty()) {
          result.program_ = new java.util.ArrayList<bnet.protocol.config.Process_ConfigProto.Resource>();
        }
        result.program_.add(builderForValue.build());
        return this;
      }
      public Builder addAllProgram(
          java.lang.Iterable<? extends bnet.protocol.config.Process_ConfigProto.Resource> values) {
        if (result.program_.isEmpty()) {
          result.program_ = new java.util.ArrayList<bnet.protocol.config.Process_ConfigProto.Resource>();
        }
        super.addAll(values, result.program_);
        return this;
      }
      public Builder clearProgram() {
        result.program_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.config.ProgramResources)
    }
    
    static {
      defaultInstance = new ProgramResources(true);
      bnet.protocol.config.Process_ConfigProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.config.ProgramResources)
  }
  
  public static final class ServerAddress extends
      com.google.protobuf.GeneratedMessage {
    // Use ServerAddress.newBuilder() to construct.
    private ServerAddress() {
      initFields();
    }
    private ServerAddress(boolean noInit) {}
    
    private static final ServerAddress defaultInstance;
    public static ServerAddress getDefaultInstance() {
      return defaultInstance;
    }
    
    public ServerAddress getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.config.Process_ConfigProto.internal_static_bnet_protocol_config_ServerAddress_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.config.Process_ConfigProto.internal_static_bnet_protocol_config_ServerAddress_fieldAccessorTable;
    }
    
    // required .bnet.protocol.Address address = 1;
    public static final int ADDRESS_FIELD_NUMBER = 1;
    private boolean hasAddress;
    private bnet.protocol.Rpc.Address address_;
    public boolean hasAddress() { return hasAddress; }
    public bnet.protocol.Rpc.Address getAddress() { return address_; }
    
    // required string process_name = 2;
    public static final int PROCESS_NAME_FIELD_NUMBER = 2;
    private boolean hasProcessName;
    private java.lang.String processName_ = "";
    public boolean hasProcessName() { return hasProcessName; }
    public java.lang.String getProcessName() { return processName_; }
    
    // optional string server_name = 3;
    public static final int SERVER_NAME_FIELD_NUMBER = 3;
    private boolean hasServerName;
    private java.lang.String serverName_ = "";
    public boolean hasServerName() { return hasServerName; }
    public java.lang.String getServerName() { return serverName_; }
    
    private void initFields() {
      address_ = bnet.protocol.Rpc.Address.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasAddress) return false;
      if (!hasProcessName) return false;
      if (!getAddress().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAddress()) {
        output.writeMessage(1, getAddress());
      }
      if (hasProcessName()) {
        output.writeString(2, getProcessName());
      }
      if (hasServerName()) {
        output.writeString(3, getServerName());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAddress()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAddress());
      }
      if (hasProcessName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getProcessName());
      }
      if (hasServerName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getServerName());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.config.Process_ConfigProto.ServerAddress parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ServerAddress parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ServerAddress parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ServerAddress parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ServerAddress parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ServerAddress parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ServerAddress parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.config.Process_ConfigProto.ServerAddress parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.config.Process_ConfigProto.ServerAddress parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ServerAddress parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.config.Process_ConfigProto.ServerAddress prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.config.Process_ConfigProto.ServerAddress result;
      
      // Construct using bnet.protocol.config.Process_ConfigProto.ServerAddress.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.config.Process_ConfigProto.ServerAddress();
        return builder;
      }
      
      protected bnet.protocol.config.Process_ConfigProto.ServerAddress internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.config.Process_ConfigProto.ServerAddress();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.config.Process_ConfigProto.ServerAddress.getDescriptor();
      }
      
      public bnet.protocol.config.Process_ConfigProto.ServerAddress getDefaultInstanceForType() {
        return bnet.protocol.config.Process_ConfigProto.ServerAddress.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.config.Process_ConfigProto.ServerAddress build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.config.Process_ConfigProto.ServerAddress buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.config.Process_ConfigProto.ServerAddress buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.config.Process_ConfigProto.ServerAddress returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.config.Process_ConfigProto.ServerAddress) {
          return mergeFrom((bnet.protocol.config.Process_ConfigProto.ServerAddress)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.config.Process_ConfigProto.ServerAddress other) {
        if (other == bnet.protocol.config.Process_ConfigProto.ServerAddress.getDefaultInstance()) return this;
        if (other.hasAddress()) {
          mergeAddress(other.getAddress());
        }
        if (other.hasProcessName()) {
          setProcessName(other.getProcessName());
        }
        if (other.hasServerName()) {
          setServerName(other.getServerName());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Rpc.Address.Builder subBuilder = bnet.protocol.Rpc.Address.newBuilder();
              if (hasAddress()) {
                subBuilder.mergeFrom(getAddress());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAddress(subBuilder.buildPartial());
              break;
            }
            case 18: {
              setProcessName(input.readString());
              break;
            }
            case 26: {
              setServerName(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required .bnet.protocol.Address address = 1;
      public boolean hasAddress() {
        return result.hasAddress();
      }
      public bnet.protocol.Rpc.Address getAddress() {
        return result.getAddress();
      }
      public Builder setAddress(bnet.protocol.Rpc.Address value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasAddress = true;
        result.address_ = value;
        return this;
      }
      public Builder setAddress(bnet.protocol.Rpc.Address.Builder builderForValue) {
        result.hasAddress = true;
        result.address_ = builderForValue.build();
        return this;
      }
      public Builder mergeAddress(bnet.protocol.Rpc.Address value) {
        if (result.hasAddress() &&
            result.address_ != bnet.protocol.Rpc.Address.getDefaultInstance()) {
          result.address_ =
            bnet.protocol.Rpc.Address.newBuilder(result.address_).mergeFrom(value).buildPartial();
        } else {
          result.address_ = value;
        }
        result.hasAddress = true;
        return this;
      }
      public Builder clearAddress() {
        result.hasAddress = false;
        result.address_ = bnet.protocol.Rpc.Address.getDefaultInstance();
        return this;
      }
      
      // required string process_name = 2;
      public boolean hasProcessName() {
        return result.hasProcessName();
      }
      public java.lang.String getProcessName() {
        return result.getProcessName();
      }
      public Builder setProcessName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasProcessName = true;
        result.processName_ = value;
        return this;
      }
      public Builder clearProcessName() {
        result.hasProcessName = false;
        result.processName_ = getDefaultInstance().getProcessName();
        return this;
      }
      
      // optional string server_name = 3;
      public boolean hasServerName() {
        return result.hasServerName();
      }
      public java.lang.String getServerName() {
        return result.getServerName();
      }
      public Builder setServerName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasServerName = true;
        result.serverName_ = value;
        return this;
      }
      public Builder clearServerName() {
        result.hasServerName = false;
        result.serverName_ = getDefaultInstance().getServerName();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.config.ServerAddress)
    }
    
    static {
      defaultInstance = new ServerAddress(true);
      bnet.protocol.config.Process_ConfigProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.config.ServerAddress)
  }
  
  public static final class ServerSet extends
      com.google.protobuf.GeneratedMessage {
    // Use ServerSet.newBuilder() to construct.
    private ServerSet() {
      initFields();
    }
    private ServerSet(boolean noInit) {}
    
    private static final ServerSet defaultInstance;
    public static ServerSet getDefaultInstance() {
      return defaultInstance;
    }
    
    public ServerSet getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.config.Process_ConfigProto.internal_static_bnet_protocol_config_ServerSet_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.config.Process_ConfigProto.internal_static_bnet_protocol_config_ServerSet_fieldAccessorTable;
    }
    
    // repeated .bnet.protocol.config.ServerAddress server_address = 1;
    public static final int SERVER_ADDRESS_FIELD_NUMBER = 1;
    private java.util.List<bnet.protocol.config.Process_ConfigProto.ServerAddress> serverAddress_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.config.Process_ConfigProto.ServerAddress> getServerAddressList() {
      return serverAddress_;
    }
    public int getServerAddressCount() { return serverAddress_.size(); }
    public bnet.protocol.config.Process_ConfigProto.ServerAddress getServerAddress(int index) {
      return serverAddress_.get(index);
    }
    
    // repeated string exported_service = 2;
    public static final int EXPORTED_SERVICE_FIELD_NUMBER = 2;
    private java.util.List<java.lang.String> exportedService_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getExportedServiceList() {
      return exportedService_;
    }
    public int getExportedServiceCount() { return exportedService_.size(); }
    public java.lang.String getExportedService(int index) {
      return exportedService_.get(index);
    }
    
    // repeated string imported_service = 3;
    public static final int IMPORTED_SERVICE_FIELD_NUMBER = 3;
    private java.util.List<java.lang.String> importedService_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getImportedServiceList() {
      return importedService_;
    }
    public int getImportedServiceCount() { return importedService_.size(); }
    public java.lang.String getImportedService(int index) {
      return importedService_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (bnet.protocol.config.Process_ConfigProto.ServerAddress element : getServerAddressList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (bnet.protocol.config.Process_ConfigProto.ServerAddress element : getServerAddressList()) {
        output.writeMessage(1, element);
      }
      for (java.lang.String element : getExportedServiceList()) {
        output.writeString(2, element);
      }
      for (java.lang.String element : getImportedServiceList()) {
        output.writeString(3, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (bnet.protocol.config.Process_ConfigProto.ServerAddress element : getServerAddressList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getExportedServiceList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getExportedServiceList().size();
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getImportedServiceList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getImportedServiceList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.config.Process_ConfigProto.ServerSet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ServerSet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ServerSet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ServerSet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ServerSet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ServerSet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ServerSet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.config.Process_ConfigProto.ServerSet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.config.Process_ConfigProto.ServerSet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ServerSet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.config.Process_ConfigProto.ServerSet prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.config.Process_ConfigProto.ServerSet result;
      
      // Construct using bnet.protocol.config.Process_ConfigProto.ServerSet.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.config.Process_ConfigProto.ServerSet();
        return builder;
      }
      
      protected bnet.protocol.config.Process_ConfigProto.ServerSet internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.config.Process_ConfigProto.ServerSet();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.config.Process_ConfigProto.ServerSet.getDescriptor();
      }
      
      public bnet.protocol.config.Process_ConfigProto.ServerSet getDefaultInstanceForType() {
        return bnet.protocol.config.Process_ConfigProto.ServerSet.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.config.Process_ConfigProto.ServerSet build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.config.Process_ConfigProto.ServerSet buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.config.Process_ConfigProto.ServerSet buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.serverAddress_ != java.util.Collections.EMPTY_LIST) {
          result.serverAddress_ =
            java.util.Collections.unmodifiableList(result.serverAddress_);
        }
        if (result.exportedService_ != java.util.Collections.EMPTY_LIST) {
          result.exportedService_ =
            java.util.Collections.unmodifiableList(result.exportedService_);
        }
        if (result.importedService_ != java.util.Collections.EMPTY_LIST) {
          result.importedService_ =
            java.util.Collections.unmodifiableList(result.importedService_);
        }
        bnet.protocol.config.Process_ConfigProto.ServerSet returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.config.Process_ConfigProto.ServerSet) {
          return mergeFrom((bnet.protocol.config.Process_ConfigProto.ServerSet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.config.Process_ConfigProto.ServerSet other) {
        if (other == bnet.protocol.config.Process_ConfigProto.ServerSet.getDefaultInstance()) return this;
        if (!other.serverAddress_.isEmpty()) {
          if (result.serverAddress_.isEmpty()) {
            result.serverAddress_ = new java.util.ArrayList<bnet.protocol.config.Process_ConfigProto.ServerAddress>();
          }
          result.serverAddress_.addAll(other.serverAddress_);
        }
        if (!other.exportedService_.isEmpty()) {
          if (result.exportedService_.isEmpty()) {
            result.exportedService_ = new java.util.ArrayList<java.lang.String>();
          }
          result.exportedService_.addAll(other.exportedService_);
        }
        if (!other.importedService_.isEmpty()) {
          if (result.importedService_.isEmpty()) {
            result.importedService_ = new java.util.ArrayList<java.lang.String>();
          }
          result.importedService_.addAll(other.importedService_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.config.Process_ConfigProto.ServerAddress.Builder subBuilder = bnet.protocol.config.Process_ConfigProto.ServerAddress.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addServerAddress(subBuilder.buildPartial());
              break;
            }
            case 18: {
              addExportedService(input.readString());
              break;
            }
            case 26: {
              addImportedService(input.readString());
              break;
            }
          }
        }
      }
      
      
      // repeated .bnet.protocol.config.ServerAddress server_address = 1;
      public java.util.List<bnet.protocol.config.Process_ConfigProto.ServerAddress> getServerAddressList() {
        return java.util.Collections.unmodifiableList(result.serverAddress_);
      }
      public int getServerAddressCount() {
        return result.getServerAddressCount();
      }
      public bnet.protocol.config.Process_ConfigProto.ServerAddress getServerAddress(int index) {
        return result.getServerAddress(index);
      }
      public Builder setServerAddress(int index, bnet.protocol.config.Process_ConfigProto.ServerAddress value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.serverAddress_.set(index, value);
        return this;
      }
      public Builder setServerAddress(int index, bnet.protocol.config.Process_ConfigProto.ServerAddress.Builder builderForValue) {
        result.serverAddress_.set(index, builderForValue.build());
        return this;
      }
      public Builder addServerAddress(bnet.protocol.config.Process_ConfigProto.ServerAddress value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.serverAddress_.isEmpty()) {
          result.serverAddress_ = new java.util.ArrayList<bnet.protocol.config.Process_ConfigProto.ServerAddress>();
        }
        result.serverAddress_.add(value);
        return this;
      }
      public Builder addServerAddress(bnet.protocol.config.Process_ConfigProto.ServerAddress.Builder builderForValue) {
        if (result.serverAddress_.isEmpty()) {
          result.serverAddress_ = new java.util.ArrayList<bnet.protocol.config.Process_ConfigProto.ServerAddress>();
        }
        result.serverAddress_.add(builderForValue.build());
        return this;
      }
      public Builder addAllServerAddress(
          java.lang.Iterable<? extends bnet.protocol.config.Process_ConfigProto.ServerAddress> values) {
        if (result.serverAddress_.isEmpty()) {
          result.serverAddress_ = new java.util.ArrayList<bnet.protocol.config.Process_ConfigProto.ServerAddress>();
        }
        super.addAll(values, result.serverAddress_);
        return this;
      }
      public Builder clearServerAddress() {
        result.serverAddress_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated string exported_service = 2;
      public java.util.List<java.lang.String> getExportedServiceList() {
        return java.util.Collections.unmodifiableList(result.exportedService_);
      }
      public int getExportedServiceCount() {
        return result.getExportedServiceCount();
      }
      public java.lang.String getExportedService(int index) {
        return result.getExportedService(index);
      }
      public Builder setExportedService(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.exportedService_.set(index, value);
        return this;
      }
      public Builder addExportedService(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.exportedService_.isEmpty()) {
          result.exportedService_ = new java.util.ArrayList<java.lang.String>();
        }
        result.exportedService_.add(value);
        return this;
      }
      public Builder addAllExportedService(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.exportedService_.isEmpty()) {
          result.exportedService_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.exportedService_);
        return this;
      }
      public Builder clearExportedService() {
        result.exportedService_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated string imported_service = 3;
      public java.util.List<java.lang.String> getImportedServiceList() {
        return java.util.Collections.unmodifiableList(result.importedService_);
      }
      public int getImportedServiceCount() {
        return result.getImportedServiceCount();
      }
      public java.lang.String getImportedService(int index) {
        return result.getImportedService(index);
      }
      public Builder setImportedService(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.importedService_.set(index, value);
        return this;
      }
      public Builder addImportedService(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.importedService_.isEmpty()) {
          result.importedService_ = new java.util.ArrayList<java.lang.String>();
        }
        result.importedService_.add(value);
        return this;
      }
      public Builder addAllImportedService(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.importedService_.isEmpty()) {
          result.importedService_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.importedService_);
        return this;
      }
      public Builder clearImportedService() {
        result.importedService_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.config.ServerSet)
    }
    
    static {
      defaultInstance = new ServerSet(true);
      bnet.protocol.config.Process_ConfigProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.config.ServerSet)
  }
  
  public static final class SupplementalService extends
      com.google.protobuf.GeneratedMessage {
    // Use SupplementalService.newBuilder() to construct.
    private SupplementalService() {
      initFields();
    }
    private SupplementalService(boolean noInit) {}
    
    private static final SupplementalService defaultInstance;
    public static SupplementalService getDefaultInstance() {
      return defaultInstance;
    }
    
    public SupplementalService getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.config.Process_ConfigProto.internal_static_bnet_protocol_config_SupplementalService_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.config.Process_ConfigProto.internal_static_bnet_protocol_config_SupplementalService_fieldAccessorTable;
    }
    
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // required uint32 port = 2;
    public static final int PORT_FIELD_NUMBER = 2;
    private boolean hasPort;
    private int port_ = 0;
    public boolean hasPort() { return hasPort; }
    public int getPort() { return port_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasName) return false;
      if (!hasPort) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasName()) {
        output.writeString(1, getName());
      }
      if (hasPort()) {
        output.writeUInt32(2, getPort());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      if (hasPort()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getPort());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.config.Process_ConfigProto.SupplementalService parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.SupplementalService parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.SupplementalService parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.SupplementalService parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.SupplementalService parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.SupplementalService parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.SupplementalService parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.config.Process_ConfigProto.SupplementalService parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.config.Process_ConfigProto.SupplementalService parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.SupplementalService parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.config.Process_ConfigProto.SupplementalService prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.config.Process_ConfigProto.SupplementalService result;
      
      // Construct using bnet.protocol.config.Process_ConfigProto.SupplementalService.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.config.Process_ConfigProto.SupplementalService();
        return builder;
      }
      
      protected bnet.protocol.config.Process_ConfigProto.SupplementalService internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.config.Process_ConfigProto.SupplementalService();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.config.Process_ConfigProto.SupplementalService.getDescriptor();
      }
      
      public bnet.protocol.config.Process_ConfigProto.SupplementalService getDefaultInstanceForType() {
        return bnet.protocol.config.Process_ConfigProto.SupplementalService.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.config.Process_ConfigProto.SupplementalService build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.config.Process_ConfigProto.SupplementalService buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.config.Process_ConfigProto.SupplementalService buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.config.Process_ConfigProto.SupplementalService returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.config.Process_ConfigProto.SupplementalService) {
          return mergeFrom((bnet.protocol.config.Process_ConfigProto.SupplementalService)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.config.Process_ConfigProto.SupplementalService other) {
        if (other == bnet.protocol.config.Process_ConfigProto.SupplementalService.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasPort()) {
          setPort(other.getPort());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setName(input.readString());
              break;
            }
            case 16: {
              setPort(input.readUInt32());
              break;
            }
          }
        }
      }
      
      
      // required string name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // required uint32 port = 2;
      public boolean hasPort() {
        return result.hasPort();
      }
      public int getPort() {
        return result.getPort();
      }
      public Builder setPort(int value) {
        result.hasPort = true;
        result.port_ = value;
        return this;
      }
      public Builder clearPort() {
        result.hasPort = false;
        result.port_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.config.SupplementalService)
    }
    
    static {
      defaultInstance = new SupplementalService(true);
      bnet.protocol.config.Process_ConfigProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.config.SupplementalService)
  }
  
  public static final class ListenPoint extends
      com.google.protobuf.GeneratedMessage {
    // Use ListenPoint.newBuilder() to construct.
    private ListenPoint() {
      initFields();
    }
    private ListenPoint(boolean noInit) {}
    
    private static final ListenPoint defaultInstance;
    public static ListenPoint getDefaultInstance() {
      return defaultInstance;
    }
    
    public ListenPoint getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.config.Process_ConfigProto.internal_static_bnet_protocol_config_ListenPoint_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.config.Process_ConfigProto.internal_static_bnet_protocol_config_ListenPoint_fieldAccessorTable;
    }
    
    // required uint32 port = 1;
    public static final int PORT_FIELD_NUMBER = 1;
    private boolean hasPort;
    private int port_ = 0;
    public boolean hasPort() { return hasPort; }
    public int getPort() { return port_; }
    
    // optional string address = 2;
    public static final int ADDRESS_FIELD_NUMBER = 2;
    private boolean hasAddress;
    private java.lang.String address_ = "";
    public boolean hasAddress() { return hasAddress; }
    public java.lang.String getAddress() { return address_; }
    
    // repeated .bnet.protocol.config.ServerSet accept = 3;
    public static final int ACCEPT_FIELD_NUMBER = 3;
    private java.util.List<bnet.protocol.config.Process_ConfigProto.ServerSet> accept_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.config.Process_ConfigProto.ServerSet> getAcceptList() {
      return accept_;
    }
    public int getAcceptCount() { return accept_.size(); }
    public bnet.protocol.config.Process_ConfigProto.ServerSet getAccept(int index) {
      return accept_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasPort) return false;
      for (bnet.protocol.config.Process_ConfigProto.ServerSet element : getAcceptList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasPort()) {
        output.writeUInt32(1, getPort());
      }
      if (hasAddress()) {
        output.writeString(2, getAddress());
      }
      for (bnet.protocol.config.Process_ConfigProto.ServerSet element : getAcceptList()) {
        output.writeMessage(3, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasPort()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getPort());
      }
      if (hasAddress()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getAddress());
      }
      for (bnet.protocol.config.Process_ConfigProto.ServerSet element : getAcceptList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.config.Process_ConfigProto.ListenPoint parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ListenPoint parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ListenPoint parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ListenPoint parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ListenPoint parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ListenPoint parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ListenPoint parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.config.Process_ConfigProto.ListenPoint parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.config.Process_ConfigProto.ListenPoint parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ListenPoint parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.config.Process_ConfigProto.ListenPoint prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.config.Process_ConfigProto.ListenPoint result;
      
      // Construct using bnet.protocol.config.Process_ConfigProto.ListenPoint.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.config.Process_ConfigProto.ListenPoint();
        return builder;
      }
      
      protected bnet.protocol.config.Process_ConfigProto.ListenPoint internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.config.Process_ConfigProto.ListenPoint();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.config.Process_ConfigProto.ListenPoint.getDescriptor();
      }
      
      public bnet.protocol.config.Process_ConfigProto.ListenPoint getDefaultInstanceForType() {
        return bnet.protocol.config.Process_ConfigProto.ListenPoint.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.config.Process_ConfigProto.ListenPoint build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.config.Process_ConfigProto.ListenPoint buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.config.Process_ConfigProto.ListenPoint buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.accept_ != java.util.Collections.EMPTY_LIST) {
          result.accept_ =
            java.util.Collections.unmodifiableList(result.accept_);
        }
        bnet.protocol.config.Process_ConfigProto.ListenPoint returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.config.Process_ConfigProto.ListenPoint) {
          return mergeFrom((bnet.protocol.config.Process_ConfigProto.ListenPoint)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.config.Process_ConfigProto.ListenPoint other) {
        if (other == bnet.protocol.config.Process_ConfigProto.ListenPoint.getDefaultInstance()) return this;
        if (other.hasPort()) {
          setPort(other.getPort());
        }
        if (other.hasAddress()) {
          setAddress(other.getAddress());
        }
        if (!other.accept_.isEmpty()) {
          if (result.accept_.isEmpty()) {
            result.accept_ = new java.util.ArrayList<bnet.protocol.config.Process_ConfigProto.ServerSet>();
          }
          result.accept_.addAll(other.accept_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setPort(input.readUInt32());
              break;
            }
            case 18: {
              setAddress(input.readString());
              break;
            }
            case 26: {
              bnet.protocol.config.Process_ConfigProto.ServerSet.Builder subBuilder = bnet.protocol.config.Process_ConfigProto.ServerSet.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAccept(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required uint32 port = 1;
      public boolean hasPort() {
        return result.hasPort();
      }
      public int getPort() {
        return result.getPort();
      }
      public Builder setPort(int value) {
        result.hasPort = true;
        result.port_ = value;
        return this;
      }
      public Builder clearPort() {
        result.hasPort = false;
        result.port_ = 0;
        return this;
      }
      
      // optional string address = 2;
      public boolean hasAddress() {
        return result.hasAddress();
      }
      public java.lang.String getAddress() {
        return result.getAddress();
      }
      public Builder setAddress(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasAddress = true;
        result.address_ = value;
        return this;
      }
      public Builder clearAddress() {
        result.hasAddress = false;
        result.address_ = getDefaultInstance().getAddress();
        return this;
      }
      
      // repeated .bnet.protocol.config.ServerSet accept = 3;
      public java.util.List<bnet.protocol.config.Process_ConfigProto.ServerSet> getAcceptList() {
        return java.util.Collections.unmodifiableList(result.accept_);
      }
      public int getAcceptCount() {
        return result.getAcceptCount();
      }
      public bnet.protocol.config.Process_ConfigProto.ServerSet getAccept(int index) {
        return result.getAccept(index);
      }
      public Builder setAccept(int index, bnet.protocol.config.Process_ConfigProto.ServerSet value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.accept_.set(index, value);
        return this;
      }
      public Builder setAccept(int index, bnet.protocol.config.Process_ConfigProto.ServerSet.Builder builderForValue) {
        result.accept_.set(index, builderForValue.build());
        return this;
      }
      public Builder addAccept(bnet.protocol.config.Process_ConfigProto.ServerSet value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.accept_.isEmpty()) {
          result.accept_ = new java.util.ArrayList<bnet.protocol.config.Process_ConfigProto.ServerSet>();
        }
        result.accept_.add(value);
        return this;
      }
      public Builder addAccept(bnet.protocol.config.Process_ConfigProto.ServerSet.Builder builderForValue) {
        if (result.accept_.isEmpty()) {
          result.accept_ = new java.util.ArrayList<bnet.protocol.config.Process_ConfigProto.ServerSet>();
        }
        result.accept_.add(builderForValue.build());
        return this;
      }
      public Builder addAllAccept(
          java.lang.Iterable<? extends bnet.protocol.config.Process_ConfigProto.ServerSet> values) {
        if (result.accept_.isEmpty()) {
          result.accept_ = new java.util.ArrayList<bnet.protocol.config.Process_ConfigProto.ServerSet>();
        }
        super.addAll(values, result.accept_);
        return this;
      }
      public Builder clearAccept() {
        result.accept_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.config.ListenPoint)
    }
    
    static {
      defaultInstance = new ListenPoint(true);
      bnet.protocol.config.Process_ConfigProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.config.ListenPoint)
  }
  
  public static final class ServiceShard extends
      com.google.protobuf.GeneratedMessage {
    // Use ServiceShard.newBuilder() to construct.
    private ServiceShard() {
      initFields();
    }
    private ServiceShard(boolean noInit) {}
    
    private static final ServiceShard defaultInstance;
    public static ServiceShard getDefaultInstance() {
      return defaultInstance;
    }
    
    public ServiceShard getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.config.Process_ConfigProto.internal_static_bnet_protocol_config_ServiceShard_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.config.Process_ConfigProto.internal_static_bnet_protocol_config_ServiceShard_fieldAccessorTable;
    }
    
    // required string process_name = 1;
    public static final int PROCESS_NAME_FIELD_NUMBER = 1;
    private boolean hasProcessName;
    private java.lang.String processName_ = "";
    public boolean hasProcessName() { return hasProcessName; }
    public java.lang.String getProcessName() { return processName_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasProcessName) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasProcessName()) {
        output.writeString(1, getProcessName());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasProcessName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getProcessName());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.config.Process_ConfigProto.ServiceShard parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ServiceShard parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ServiceShard parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ServiceShard parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ServiceShard parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ServiceShard parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ServiceShard parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.config.Process_ConfigProto.ServiceShard parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.config.Process_ConfigProto.ServiceShard parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ServiceShard parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.config.Process_ConfigProto.ServiceShard prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.config.Process_ConfigProto.ServiceShard result;
      
      // Construct using bnet.protocol.config.Process_ConfigProto.ServiceShard.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.config.Process_ConfigProto.ServiceShard();
        return builder;
      }
      
      protected bnet.protocol.config.Process_ConfigProto.ServiceShard internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.config.Process_ConfigProto.ServiceShard();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.config.Process_ConfigProto.ServiceShard.getDescriptor();
      }
      
      public bnet.protocol.config.Process_ConfigProto.ServiceShard getDefaultInstanceForType() {
        return bnet.protocol.config.Process_ConfigProto.ServiceShard.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.config.Process_ConfigProto.ServiceShard build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.config.Process_ConfigProto.ServiceShard buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.config.Process_ConfigProto.ServiceShard buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.config.Process_ConfigProto.ServiceShard returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.config.Process_ConfigProto.ServiceShard) {
          return mergeFrom((bnet.protocol.config.Process_ConfigProto.ServiceShard)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.config.Process_ConfigProto.ServiceShard other) {
        if (other == bnet.protocol.config.Process_ConfigProto.ServiceShard.getDefaultInstance()) return this;
        if (other.hasProcessName()) {
          setProcessName(other.getProcessName());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setProcessName(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string process_name = 1;
      public boolean hasProcessName() {
        return result.hasProcessName();
      }
      public java.lang.String getProcessName() {
        return result.getProcessName();
      }
      public Builder setProcessName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasProcessName = true;
        result.processName_ = value;
        return this;
      }
      public Builder clearProcessName() {
        result.hasProcessName = false;
        result.processName_ = getDefaultInstance().getProcessName();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.config.ServiceShard)
    }
    
    static {
      defaultInstance = new ServiceShard(true);
      bnet.protocol.config.Process_ConfigProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.config.ServiceShard)
  }
  
  public static final class ServiceConfig extends
      com.google.protobuf.GeneratedMessage {
    // Use ServiceConfig.newBuilder() to construct.
    private ServiceConfig() {
      initFields();
    }
    private ServiceConfig(boolean noInit) {}
    
    private static final ServiceConfig defaultInstance;
    public static ServiceConfig getDefaultInstance() {
      return defaultInstance;
    }
    
    public ServiceConfig getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.config.Process_ConfigProto.internal_static_bnet_protocol_config_ServiceConfig_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.config.Process_ConfigProto.internal_static_bnet_protocol_config_ServiceConfig_fieldAccessorTable;
    }
    
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // required string url = 2;
    public static final int URL_FIELD_NUMBER = 2;
    private boolean hasUrl;
    private java.lang.String url_ = "";
    public boolean hasUrl() { return hasUrl; }
    public java.lang.String getUrl() { return url_; }
    
    // repeated .bnet.protocol.config.ServiceShard shard = 3;
    public static final int SHARD_FIELD_NUMBER = 3;
    private java.util.List<bnet.protocol.config.Process_ConfigProto.ServiceShard> shard_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.config.Process_ConfigProto.ServiceShard> getShardList() {
      return shard_;
    }
    public int getShardCount() { return shard_.size(); }
    public bnet.protocol.config.Process_ConfigProto.ServiceShard getShard(int index) {
      return shard_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasName) return false;
      if (!hasUrl) return false;
      for (bnet.protocol.config.Process_ConfigProto.ServiceShard element : getShardList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasName()) {
        output.writeString(1, getName());
      }
      if (hasUrl()) {
        output.writeString(2, getUrl());
      }
      for (bnet.protocol.config.Process_ConfigProto.ServiceShard element : getShardList()) {
        output.writeMessage(3, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      if (hasUrl()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getUrl());
      }
      for (bnet.protocol.config.Process_ConfigProto.ServiceShard element : getShardList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.config.Process_ConfigProto.ServiceConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ServiceConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ServiceConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ServiceConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ServiceConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ServiceConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ServiceConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.config.Process_ConfigProto.ServiceConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.config.Process_ConfigProto.ServiceConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ServiceConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.config.Process_ConfigProto.ServiceConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.config.Process_ConfigProto.ServiceConfig result;
      
      // Construct using bnet.protocol.config.Process_ConfigProto.ServiceConfig.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.config.Process_ConfigProto.ServiceConfig();
        return builder;
      }
      
      protected bnet.protocol.config.Process_ConfigProto.ServiceConfig internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.config.Process_ConfigProto.ServiceConfig();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.config.Process_ConfigProto.ServiceConfig.getDescriptor();
      }
      
      public bnet.protocol.config.Process_ConfigProto.ServiceConfig getDefaultInstanceForType() {
        return bnet.protocol.config.Process_ConfigProto.ServiceConfig.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.config.Process_ConfigProto.ServiceConfig build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.config.Process_ConfigProto.ServiceConfig buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.config.Process_ConfigProto.ServiceConfig buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.shard_ != java.util.Collections.EMPTY_LIST) {
          result.shard_ =
            java.util.Collections.unmodifiableList(result.shard_);
        }
        bnet.protocol.config.Process_ConfigProto.ServiceConfig returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.config.Process_ConfigProto.ServiceConfig) {
          return mergeFrom((bnet.protocol.config.Process_ConfigProto.ServiceConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.config.Process_ConfigProto.ServiceConfig other) {
        if (other == bnet.protocol.config.Process_ConfigProto.ServiceConfig.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasUrl()) {
          setUrl(other.getUrl());
        }
        if (!other.shard_.isEmpty()) {
          if (result.shard_.isEmpty()) {
            result.shard_ = new java.util.ArrayList<bnet.protocol.config.Process_ConfigProto.ServiceShard>();
          }
          result.shard_.addAll(other.shard_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setName(input.readString());
              break;
            }
            case 18: {
              setUrl(input.readString());
              break;
            }
            case 26: {
              bnet.protocol.config.Process_ConfigProto.ServiceShard.Builder subBuilder = bnet.protocol.config.Process_ConfigProto.ServiceShard.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addShard(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // required string url = 2;
      public boolean hasUrl() {
        return result.hasUrl();
      }
      public java.lang.String getUrl() {
        return result.getUrl();
      }
      public Builder setUrl(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasUrl = true;
        result.url_ = value;
        return this;
      }
      public Builder clearUrl() {
        result.hasUrl = false;
        result.url_ = getDefaultInstance().getUrl();
        return this;
      }
      
      // repeated .bnet.protocol.config.ServiceShard shard = 3;
      public java.util.List<bnet.protocol.config.Process_ConfigProto.ServiceShard> getShardList() {
        return java.util.Collections.unmodifiableList(result.shard_);
      }
      public int getShardCount() {
        return result.getShardCount();
      }
      public bnet.protocol.config.Process_ConfigProto.ServiceShard getShard(int index) {
        return result.getShard(index);
      }
      public Builder setShard(int index, bnet.protocol.config.Process_ConfigProto.ServiceShard value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.shard_.set(index, value);
        return this;
      }
      public Builder setShard(int index, bnet.protocol.config.Process_ConfigProto.ServiceShard.Builder builderForValue) {
        result.shard_.set(index, builderForValue.build());
        return this;
      }
      public Builder addShard(bnet.protocol.config.Process_ConfigProto.ServiceShard value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.shard_.isEmpty()) {
          result.shard_ = new java.util.ArrayList<bnet.protocol.config.Process_ConfigProto.ServiceShard>();
        }
        result.shard_.add(value);
        return this;
      }
      public Builder addShard(bnet.protocol.config.Process_ConfigProto.ServiceShard.Builder builderForValue) {
        if (result.shard_.isEmpty()) {
          result.shard_ = new java.util.ArrayList<bnet.protocol.config.Process_ConfigProto.ServiceShard>();
        }
        result.shard_.add(builderForValue.build());
        return this;
      }
      public Builder addAllShard(
          java.lang.Iterable<? extends bnet.protocol.config.Process_ConfigProto.ServiceShard> values) {
        if (result.shard_.isEmpty()) {
          result.shard_ = new java.util.ArrayList<bnet.protocol.config.Process_ConfigProto.ServiceShard>();
        }
        super.addAll(values, result.shard_);
        return this;
      }
      public Builder clearShard() {
        result.shard_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.config.ServiceConfig)
    }
    
    static {
      defaultInstance = new ServiceConfig(true);
      bnet.protocol.config.Process_ConfigProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.config.ServiceConfig)
  }
  
  public static final class RPCServerConfig extends
      com.google.protobuf.GeneratedMessage {
    // Use RPCServerConfig.newBuilder() to construct.
    private RPCServerConfig() {
      initFields();
    }
    private RPCServerConfig(boolean noInit) {}
    
    private static final RPCServerConfig defaultInstance;
    public static RPCServerConfig getDefaultInstance() {
      return defaultInstance;
    }
    
    public RPCServerConfig getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.config.Process_ConfigProto.internal_static_bnet_protocol_config_RPCServerConfig_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.config.Process_ConfigProto.internal_static_bnet_protocol_config_RPCServerConfig_fieldAccessorTable;
    }
    
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // optional .bnet.protocol.config.ListenPoint listen = 2;
    public static final int LISTEN_FIELD_NUMBER = 2;
    private boolean hasListen;
    private bnet.protocol.config.Process_ConfigProto.ListenPoint listen_;
    public boolean hasListen() { return hasListen; }
    public bnet.protocol.config.Process_ConfigProto.ListenPoint getListen() { return listen_; }
    
    // repeated .bnet.protocol.config.ServerSet connect = 3;
    public static final int CONNECT_FIELD_NUMBER = 3;
    private java.util.List<bnet.protocol.config.Process_ConfigProto.ServerSet> connect_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.config.Process_ConfigProto.ServerSet> getConnectList() {
      return connect_;
    }
    public int getConnectCount() { return connect_.size(); }
    public bnet.protocol.config.Process_ConfigProto.ServerSet getConnect(int index) {
      return connect_.get(index);
    }
    
    private void initFields() {
      listen_ = bnet.protocol.config.Process_ConfigProto.ListenPoint.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasName) return false;
      if (hasListen()) {
        if (!getListen().isInitialized()) return false;
      }
      for (bnet.protocol.config.Process_ConfigProto.ServerSet element : getConnectList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasName()) {
        output.writeString(1, getName());
      }
      if (hasListen()) {
        output.writeMessage(2, getListen());
      }
      for (bnet.protocol.config.Process_ConfigProto.ServerSet element : getConnectList()) {
        output.writeMessage(3, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      if (hasListen()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getListen());
      }
      for (bnet.protocol.config.Process_ConfigProto.ServerSet element : getConnectList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.config.Process_ConfigProto.RPCServerConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.RPCServerConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.RPCServerConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.RPCServerConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.RPCServerConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.RPCServerConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.RPCServerConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.config.Process_ConfigProto.RPCServerConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.config.Process_ConfigProto.RPCServerConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.RPCServerConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.config.Process_ConfigProto.RPCServerConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.config.Process_ConfigProto.RPCServerConfig result;
      
      // Construct using bnet.protocol.config.Process_ConfigProto.RPCServerConfig.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.config.Process_ConfigProto.RPCServerConfig();
        return builder;
      }
      
      protected bnet.protocol.config.Process_ConfigProto.RPCServerConfig internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.config.Process_ConfigProto.RPCServerConfig();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.config.Process_ConfigProto.RPCServerConfig.getDescriptor();
      }
      
      public bnet.protocol.config.Process_ConfigProto.RPCServerConfig getDefaultInstanceForType() {
        return bnet.protocol.config.Process_ConfigProto.RPCServerConfig.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.config.Process_ConfigProto.RPCServerConfig build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.config.Process_ConfigProto.RPCServerConfig buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.config.Process_ConfigProto.RPCServerConfig buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.connect_ != java.util.Collections.EMPTY_LIST) {
          result.connect_ =
            java.util.Collections.unmodifiableList(result.connect_);
        }
        bnet.protocol.config.Process_ConfigProto.RPCServerConfig returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.config.Process_ConfigProto.RPCServerConfig) {
          return mergeFrom((bnet.protocol.config.Process_ConfigProto.RPCServerConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.config.Process_ConfigProto.RPCServerConfig other) {
        if (other == bnet.protocol.config.Process_ConfigProto.RPCServerConfig.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasListen()) {
          mergeListen(other.getListen());
        }
        if (!other.connect_.isEmpty()) {
          if (result.connect_.isEmpty()) {
            result.connect_ = new java.util.ArrayList<bnet.protocol.config.Process_ConfigProto.ServerSet>();
          }
          result.connect_.addAll(other.connect_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setName(input.readString());
              break;
            }
            case 18: {
              bnet.protocol.config.Process_ConfigProto.ListenPoint.Builder subBuilder = bnet.protocol.config.Process_ConfigProto.ListenPoint.newBuilder();
              if (hasListen()) {
                subBuilder.mergeFrom(getListen());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setListen(subBuilder.buildPartial());
              break;
            }
            case 26: {
              bnet.protocol.config.Process_ConfigProto.ServerSet.Builder subBuilder = bnet.protocol.config.Process_ConfigProto.ServerSet.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addConnect(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // optional .bnet.protocol.config.ListenPoint listen = 2;
      public boolean hasListen() {
        return result.hasListen();
      }
      public bnet.protocol.config.Process_ConfigProto.ListenPoint getListen() {
        return result.getListen();
      }
      public Builder setListen(bnet.protocol.config.Process_ConfigProto.ListenPoint value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasListen = true;
        result.listen_ = value;
        return this;
      }
      public Builder setListen(bnet.protocol.config.Process_ConfigProto.ListenPoint.Builder builderForValue) {
        result.hasListen = true;
        result.listen_ = builderForValue.build();
        return this;
      }
      public Builder mergeListen(bnet.protocol.config.Process_ConfigProto.ListenPoint value) {
        if (result.hasListen() &&
            result.listen_ != bnet.protocol.config.Process_ConfigProto.ListenPoint.getDefaultInstance()) {
          result.listen_ =
            bnet.protocol.config.Process_ConfigProto.ListenPoint.newBuilder(result.listen_).mergeFrom(value).buildPartial();
        } else {
          result.listen_ = value;
        }
        result.hasListen = true;
        return this;
      }
      public Builder clearListen() {
        result.hasListen = false;
        result.listen_ = bnet.protocol.config.Process_ConfigProto.ListenPoint.getDefaultInstance();
        return this;
      }
      
      // repeated .bnet.protocol.config.ServerSet connect = 3;
      public java.util.List<bnet.protocol.config.Process_ConfigProto.ServerSet> getConnectList() {
        return java.util.Collections.unmodifiableList(result.connect_);
      }
      public int getConnectCount() {
        return result.getConnectCount();
      }
      public bnet.protocol.config.Process_ConfigProto.ServerSet getConnect(int index) {
        return result.getConnect(index);
      }
      public Builder setConnect(int index, bnet.protocol.config.Process_ConfigProto.ServerSet value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.connect_.set(index, value);
        return this;
      }
      public Builder setConnect(int index, bnet.protocol.config.Process_ConfigProto.ServerSet.Builder builderForValue) {
        result.connect_.set(index, builderForValue.build());
        return this;
      }
      public Builder addConnect(bnet.protocol.config.Process_ConfigProto.ServerSet value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.connect_.isEmpty()) {
          result.connect_ = new java.util.ArrayList<bnet.protocol.config.Process_ConfigProto.ServerSet>();
        }
        result.connect_.add(value);
        return this;
      }
      public Builder addConnect(bnet.protocol.config.Process_ConfigProto.ServerSet.Builder builderForValue) {
        if (result.connect_.isEmpty()) {
          result.connect_ = new java.util.ArrayList<bnet.protocol.config.Process_ConfigProto.ServerSet>();
        }
        result.connect_.add(builderForValue.build());
        return this;
      }
      public Builder addAllConnect(
          java.lang.Iterable<? extends bnet.protocol.config.Process_ConfigProto.ServerSet> values) {
        if (result.connect_.isEmpty()) {
          result.connect_ = new java.util.ArrayList<bnet.protocol.config.Process_ConfigProto.ServerSet>();
        }
        super.addAll(values, result.connect_);
        return this;
      }
      public Builder clearConnect() {
        result.connect_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.config.RPCServerConfig)
    }
    
    static {
      defaultInstance = new RPCServerConfig(true);
      bnet.protocol.config.Process_ConfigProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.config.RPCServerConfig)
  }
  
  public static final class ProcessConfig extends
      com.google.protobuf.GeneratedMessage {
    // Use ProcessConfig.newBuilder() to construct.
    private ProcessConfig() {
      initFields();
    }
    private ProcessConfig(boolean noInit) {}
    
    private static final ProcessConfig defaultInstance;
    public static ProcessConfig getDefaultInstance() {
      return defaultInstance;
    }
    
    public ProcessConfig getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.config.Process_ConfigProto.internal_static_bnet_protocol_config_ProcessConfig_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.config.Process_ConfigProto.internal_static_bnet_protocol_config_ProcessConfig_fieldAccessorTable;
    }
    
    // required string process_name = 1;
    public static final int PROCESS_NAME_FIELD_NUMBER = 1;
    private boolean hasProcessName;
    private java.lang.String processName_ = "";
    public boolean hasProcessName() { return hasProcessName; }
    public java.lang.String getProcessName() { return processName_; }
    
    // repeated .bnet.protocol.config.RPCServerConfig server = 2;
    public static final int SERVER_FIELD_NUMBER = 2;
    private java.util.List<bnet.protocol.config.Process_ConfigProto.RPCServerConfig> server_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.config.Process_ConfigProto.RPCServerConfig> getServerList() {
      return server_;
    }
    public int getServerCount() { return server_.size(); }
    public bnet.protocol.config.Process_ConfigProto.RPCServerConfig getServer(int index) {
      return server_.get(index);
    }
    
    // repeated .bnet.protocol.config.Resource resource = 3;
    public static final int RESOURCE_FIELD_NUMBER = 3;
    private java.util.List<bnet.protocol.config.Process_ConfigProto.Resource> resource_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.config.Process_ConfigProto.Resource> getResourceList() {
      return resource_;
    }
    public int getResourceCount() { return resource_.size(); }
    public bnet.protocol.config.Process_ConfigProto.Resource getResource(int index) {
      return resource_.get(index);
    }
    
    // repeated .bnet.protocol.config.ServiceConfig service = 4;
    public static final int SERVICE_FIELD_NUMBER = 4;
    private java.util.List<bnet.protocol.config.Process_ConfigProto.ServiceConfig> service_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.config.Process_ConfigProto.ServiceConfig> getServiceList() {
      return service_;
    }
    public int getServiceCount() { return service_.size(); }
    public bnet.protocol.config.Process_ConfigProto.ServiceConfig getService(int index) {
      return service_.get(index);
    }
    
    // repeated .bnet.protocol.config.Var var = 5;
    public static final int VAR_FIELD_NUMBER = 5;
    private java.util.List<bnet.protocol.config.Process_ConfigProto.Var> var_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.config.Process_ConfigProto.Var> getVarList() {
      return var_;
    }
    public int getVarCount() { return var_.size(); }
    public bnet.protocol.config.Process_ConfigProto.Var getVar(int index) {
      return var_.get(index);
    }
    
    // repeated .bnet.protocol.config.SupplementalService supplemental_service = 6;
    public static final int SUPPLEMENTAL_SERVICE_FIELD_NUMBER = 6;
    private java.util.List<bnet.protocol.config.Process_ConfigProto.SupplementalService> supplementalService_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.config.Process_ConfigProto.SupplementalService> getSupplementalServiceList() {
      return supplementalService_;
    }
    public int getSupplementalServiceCount() { return supplementalService_.size(); }
    public bnet.protocol.config.Process_ConfigProto.SupplementalService getSupplementalService(int index) {
      return supplementalService_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasProcessName) return false;
      for (bnet.protocol.config.Process_ConfigProto.RPCServerConfig element : getServerList()) {
        if (!element.isInitialized()) return false;
      }
      for (bnet.protocol.config.Process_ConfigProto.Resource element : getResourceList()) {
        if (!element.isInitialized()) return false;
      }
      for (bnet.protocol.config.Process_ConfigProto.ServiceConfig element : getServiceList()) {
        if (!element.isInitialized()) return false;
      }
      for (bnet.protocol.config.Process_ConfigProto.Var element : getVarList()) {
        if (!element.isInitialized()) return false;
      }
      for (bnet.protocol.config.Process_ConfigProto.SupplementalService element : getSupplementalServiceList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasProcessName()) {
        output.writeString(1, getProcessName());
      }
      for (bnet.protocol.config.Process_ConfigProto.RPCServerConfig element : getServerList()) {
        output.writeMessage(2, element);
      }
      for (bnet.protocol.config.Process_ConfigProto.Resource element : getResourceList()) {
        output.writeMessage(3, element);
      }
      for (bnet.protocol.config.Process_ConfigProto.ServiceConfig element : getServiceList()) {
        output.writeMessage(4, element);
      }
      for (bnet.protocol.config.Process_ConfigProto.Var element : getVarList()) {
        output.writeMessage(5, element);
      }
      for (bnet.protocol.config.Process_ConfigProto.SupplementalService element : getSupplementalServiceList()) {
        output.writeMessage(6, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasProcessName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getProcessName());
      }
      for (bnet.protocol.config.Process_ConfigProto.RPCServerConfig element : getServerList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      for (bnet.protocol.config.Process_ConfigProto.Resource element : getResourceList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, element);
      }
      for (bnet.protocol.config.Process_ConfigProto.ServiceConfig element : getServiceList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, element);
      }
      for (bnet.protocol.config.Process_ConfigProto.Var element : getVarList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, element);
      }
      for (bnet.protocol.config.Process_ConfigProto.SupplementalService element : getSupplementalServiceList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.config.Process_ConfigProto.ProcessConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ProcessConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ProcessConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ProcessConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ProcessConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ProcessConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ProcessConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.config.Process_ConfigProto.ProcessConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.config.Process_ConfigProto.ProcessConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.config.Process_ConfigProto.ProcessConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.config.Process_ConfigProto.ProcessConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.config.Process_ConfigProto.ProcessConfig result;
      
      // Construct using bnet.protocol.config.Process_ConfigProto.ProcessConfig.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.config.Process_ConfigProto.ProcessConfig();
        return builder;
      }
      
      protected bnet.protocol.config.Process_ConfigProto.ProcessConfig internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.config.Process_ConfigProto.ProcessConfig();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.config.Process_ConfigProto.ProcessConfig.getDescriptor();
      }
      
      public bnet.protocol.config.Process_ConfigProto.ProcessConfig getDefaultInstanceForType() {
        return bnet.protocol.config.Process_ConfigProto.ProcessConfig.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.config.Process_ConfigProto.ProcessConfig build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.config.Process_ConfigProto.ProcessConfig buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.config.Process_ConfigProto.ProcessConfig buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.server_ != java.util.Collections.EMPTY_LIST) {
          result.server_ =
            java.util.Collections.unmodifiableList(result.server_);
        }
        if (result.resource_ != java.util.Collections.EMPTY_LIST) {
          result.resource_ =
            java.util.Collections.unmodifiableList(result.resource_);
        }
        if (result.service_ != java.util.Collections.EMPTY_LIST) {
          result.service_ =
            java.util.Collections.unmodifiableList(result.service_);
        }
        if (result.var_ != java.util.Collections.EMPTY_LIST) {
          result.var_ =
            java.util.Collections.unmodifiableList(result.var_);
        }
        if (result.supplementalService_ != java.util.Collections.EMPTY_LIST) {
          result.supplementalService_ =
            java.util.Collections.unmodifiableList(result.supplementalService_);
        }
        bnet.protocol.config.Process_ConfigProto.ProcessConfig returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.config.Process_ConfigProto.ProcessConfig) {
          return mergeFrom((bnet.protocol.config.Process_ConfigProto.ProcessConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.config.Process_ConfigProto.ProcessConfig other) {
        if (other == bnet.protocol.config.Process_ConfigProto.ProcessConfig.getDefaultInstance()) return this;
        if (other.hasProcessName()) {
          setProcessName(other.getProcessName());
        }
        if (!other.server_.isEmpty()) {
          if (result.server_.isEmpty()) {
            result.server_ = new java.util.ArrayList<bnet.protocol.config.Process_ConfigProto.RPCServerConfig>();
          }
          result.server_.addAll(other.server_);
        }
        if (!other.resource_.isEmpty()) {
          if (result.resource_.isEmpty()) {
            result.resource_ = new java.util.ArrayList<bnet.protocol.config.Process_ConfigProto.Resource>();
          }
          result.resource_.addAll(other.resource_);
        }
        if (!other.service_.isEmpty()) {
          if (result.service_.isEmpty()) {
            result.service_ = new java.util.ArrayList<bnet.protocol.config.Process_ConfigProto.ServiceConfig>();
          }
          result.service_.addAll(other.service_);
        }
        if (!other.var_.isEmpty()) {
          if (result.var_.isEmpty()) {
            result.var_ = new java.util.ArrayList<bnet.protocol.config.Process_ConfigProto.Var>();
          }
          result.var_.addAll(other.var_);
        }
        if (!other.supplementalService_.isEmpty()) {
          if (result.supplementalService_.isEmpty()) {
            result.supplementalService_ = new java.util.ArrayList<bnet.protocol.config.Process_ConfigProto.SupplementalService>();
          }
          result.supplementalService_.addAll(other.supplementalService_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setProcessName(input.readString());
              break;
            }
            case 18: {
              bnet.protocol.config.Process_ConfigProto.RPCServerConfig.Builder subBuilder = bnet.protocol.config.Process_ConfigProto.RPCServerConfig.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addServer(subBuilder.buildPartial());
              break;
            }
            case 26: {
              bnet.protocol.config.Process_ConfigProto.Resource.Builder subBuilder = bnet.protocol.config.Process_ConfigProto.Resource.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addResource(subBuilder.buildPartial());
              break;
            }
            case 34: {
              bnet.protocol.config.Process_ConfigProto.ServiceConfig.Builder subBuilder = bnet.protocol.config.Process_ConfigProto.ServiceConfig.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addService(subBuilder.buildPartial());
              break;
            }
            case 42: {
              bnet.protocol.config.Process_ConfigProto.Var.Builder subBuilder = bnet.protocol.config.Process_ConfigProto.Var.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addVar(subBuilder.buildPartial());
              break;
            }
            case 50: {
              bnet.protocol.config.Process_ConfigProto.SupplementalService.Builder subBuilder = bnet.protocol.config.Process_ConfigProto.SupplementalService.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addSupplementalService(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string process_name = 1;
      public boolean hasProcessName() {
        return result.hasProcessName();
      }
      public java.lang.String getProcessName() {
        return result.getProcessName();
      }
      public Builder setProcessName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasProcessName = true;
        result.processName_ = value;
        return this;
      }
      public Builder clearProcessName() {
        result.hasProcessName = false;
        result.processName_ = getDefaultInstance().getProcessName();
        return this;
      }
      
      // repeated .bnet.protocol.config.RPCServerConfig server = 2;
      public java.util.List<bnet.protocol.config.Process_ConfigProto.RPCServerConfig> getServerList() {
        return java.util.Collections.unmodifiableList(result.server_);
      }
      public int getServerCount() {
        return result.getServerCount();
      }
      public bnet.protocol.config.Process_ConfigProto.RPCServerConfig getServer(int index) {
        return result.getServer(index);
      }
      public Builder setServer(int index, bnet.protocol.config.Process_ConfigProto.RPCServerConfig value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.server_.set(index, value);
        return this;
      }
      public Builder setServer(int index, bnet.protocol.config.Process_ConfigProto.RPCServerConfig.Builder builderForValue) {
        result.server_.set(index, builderForValue.build());
        return this;
      }
      public Builder addServer(bnet.protocol.config.Process_ConfigProto.RPCServerConfig value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.server_.isEmpty()) {
          result.server_ = new java.util.ArrayList<bnet.protocol.config.Process_ConfigProto.RPCServerConfig>();
        }
        result.server_.add(value);
        return this;
      }
      public Builder addServer(bnet.protocol.config.Process_ConfigProto.RPCServerConfig.Builder builderForValue) {
        if (result.server_.isEmpty()) {
          result.server_ = new java.util.ArrayList<bnet.protocol.config.Process_ConfigProto.RPCServerConfig>();
        }
        result.server_.add(builderForValue.build());
        return this;
      }
      public Builder addAllServer(
          java.lang.Iterable<? extends bnet.protocol.config.Process_ConfigProto.RPCServerConfig> values) {
        if (result.server_.isEmpty()) {
          result.server_ = new java.util.ArrayList<bnet.protocol.config.Process_ConfigProto.RPCServerConfig>();
        }
        super.addAll(values, result.server_);
        return this;
      }
      public Builder clearServer() {
        result.server_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .bnet.protocol.config.Resource resource = 3;
      public java.util.List<bnet.protocol.config.Process_ConfigProto.Resource> getResourceList() {
        return java.util.Collections.unmodifiableList(result.resource_);
      }
      public int getResourceCount() {
        return result.getResourceCount();
      }
      public bnet.protocol.config.Process_ConfigProto.Resource getResource(int index) {
        return result.getResource(index);
      }
      public Builder setResource(int index, bnet.protocol.config.Process_ConfigProto.Resource value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.resource_.set(index, value);
        return this;
      }
      public Builder setResource(int index, bnet.protocol.config.Process_ConfigProto.Resource.Builder builderForValue) {
        result.resource_.set(index, builderForValue.build());
        return this;
      }
      public Builder addResource(bnet.protocol.config.Process_ConfigProto.Resource value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.resource_.isEmpty()) {
          result.resource_ = new java.util.ArrayList<bnet.protocol.config.Process_ConfigProto.Resource>();
        }
        result.resource_.add(value);
        return this;
      }
      public Builder addResource(bnet.protocol.config.Process_ConfigProto.Resource.Builder builderForValue) {
        if (result.resource_.isEmpty()) {
          result.resource_ = new java.util.ArrayList<bnet.protocol.config.Process_ConfigProto.Resource>();
        }
        result.resource_.add(builderForValue.build());
        return this;
      }
      public Builder addAllResource(
          java.lang.Iterable<? extends bnet.protocol.config.Process_ConfigProto.Resource> values) {
        if (result.resource_.isEmpty()) {
          result.resource_ = new java.util.ArrayList<bnet.protocol.config.Process_ConfigProto.Resource>();
        }
        super.addAll(values, result.resource_);
        return this;
      }
      public Builder clearResource() {
        result.resource_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .bnet.protocol.config.ServiceConfig service = 4;
      public java.util.List<bnet.protocol.config.Process_ConfigProto.ServiceConfig> getServiceList() {
        return java.util.Collections.unmodifiableList(result.service_);
      }
      public int getServiceCount() {
        return result.getServiceCount();
      }
      public bnet.protocol.config.Process_ConfigProto.ServiceConfig getService(int index) {
        return result.getService(index);
      }
      public Builder setService(int index, bnet.protocol.config.Process_ConfigProto.ServiceConfig value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.service_.set(index, value);
        return this;
      }
      public Builder setService(int index, bnet.protocol.config.Process_ConfigProto.ServiceConfig.Builder builderForValue) {
        result.service_.set(index, builderForValue.build());
        return this;
      }
      public Builder addService(bnet.protocol.config.Process_ConfigProto.ServiceConfig value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.service_.isEmpty()) {
          result.service_ = new java.util.ArrayList<bnet.protocol.config.Process_ConfigProto.ServiceConfig>();
        }
        result.service_.add(value);
        return this;
      }
      public Builder addService(bnet.protocol.config.Process_ConfigProto.ServiceConfig.Builder builderForValue) {
        if (result.service_.isEmpty()) {
          result.service_ = new java.util.ArrayList<bnet.protocol.config.Process_ConfigProto.ServiceConfig>();
        }
        result.service_.add(builderForValue.build());
        return this;
      }
      public Builder addAllService(
          java.lang.Iterable<? extends bnet.protocol.config.Process_ConfigProto.ServiceConfig> values) {
        if (result.service_.isEmpty()) {
          result.service_ = new java.util.ArrayList<bnet.protocol.config.Process_ConfigProto.ServiceConfig>();
        }
        super.addAll(values, result.service_);
        return this;
      }
      public Builder clearService() {
        result.service_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .bnet.protocol.config.Var var = 5;
      public java.util.List<bnet.protocol.config.Process_ConfigProto.Var> getVarList() {
        return java.util.Collections.unmodifiableList(result.var_);
      }
      public int getVarCount() {
        return result.getVarCount();
      }
      public bnet.protocol.config.Process_ConfigProto.Var getVar(int index) {
        return result.getVar(index);
      }
      public Builder setVar(int index, bnet.protocol.config.Process_ConfigProto.Var value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.var_.set(index, value);
        return this;
      }
      public Builder setVar(int index, bnet.protocol.config.Process_ConfigProto.Var.Builder builderForValue) {
        result.var_.set(index, builderForValue.build());
        return this;
      }
      public Builder addVar(bnet.protocol.config.Process_ConfigProto.Var value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.var_.isEmpty()) {
          result.var_ = new java.util.ArrayList<bnet.protocol.config.Process_ConfigProto.Var>();
        }
        result.var_.add(value);
        return this;
      }
      public Builder addVar(bnet.protocol.config.Process_ConfigProto.Var.Builder builderForValue) {
        if (result.var_.isEmpty()) {
          result.var_ = new java.util.ArrayList<bnet.protocol.config.Process_ConfigProto.Var>();
        }
        result.var_.add(builderForValue.build());
        return this;
      }
      public Builder addAllVar(
          java.lang.Iterable<? extends bnet.protocol.config.Process_ConfigProto.Var> values) {
        if (result.var_.isEmpty()) {
          result.var_ = new java.util.ArrayList<bnet.protocol.config.Process_ConfigProto.Var>();
        }
        super.addAll(values, result.var_);
        return this;
      }
      public Builder clearVar() {
        result.var_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .bnet.protocol.config.SupplementalService supplemental_service = 6;
      public java.util.List<bnet.protocol.config.Process_ConfigProto.SupplementalService> getSupplementalServiceList() {
        return java.util.Collections.unmodifiableList(result.supplementalService_);
      }
      public int getSupplementalServiceCount() {
        return result.getSupplementalServiceCount();
      }
      public bnet.protocol.config.Process_ConfigProto.SupplementalService getSupplementalService(int index) {
        return result.getSupplementalService(index);
      }
      public Builder setSupplementalService(int index, bnet.protocol.config.Process_ConfigProto.SupplementalService value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.supplementalService_.set(index, value);
        return this;
      }
      public Builder setSupplementalService(int index, bnet.protocol.config.Process_ConfigProto.SupplementalService.Builder builderForValue) {
        result.supplementalService_.set(index, builderForValue.build());
        return this;
      }
      public Builder addSupplementalService(bnet.protocol.config.Process_ConfigProto.SupplementalService value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.supplementalService_.isEmpty()) {
          result.supplementalService_ = new java.util.ArrayList<bnet.protocol.config.Process_ConfigProto.SupplementalService>();
        }
        result.supplementalService_.add(value);
        return this;
      }
      public Builder addSupplementalService(bnet.protocol.config.Process_ConfigProto.SupplementalService.Builder builderForValue) {
        if (result.supplementalService_.isEmpty()) {
          result.supplementalService_ = new java.util.ArrayList<bnet.protocol.config.Process_ConfigProto.SupplementalService>();
        }
        result.supplementalService_.add(builderForValue.build());
        return this;
      }
      public Builder addAllSupplementalService(
          java.lang.Iterable<? extends bnet.protocol.config.Process_ConfigProto.SupplementalService> values) {
        if (result.supplementalService_.isEmpty()) {
          result.supplementalService_ = new java.util.ArrayList<bnet.protocol.config.Process_ConfigProto.SupplementalService>();
        }
        super.addAll(values, result.supplementalService_);
        return this;
      }
      public Builder clearSupplementalService() {
        result.supplementalService_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.config.ProcessConfig)
    }
    
    static {
      defaultInstance = new ProcessConfig(true);
      bnet.protocol.config.Process_ConfigProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.config.ProcessConfig)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_config_Var_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_config_Var_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_config_Resource_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_config_Resource_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_config_ProgramResources_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_config_ProgramResources_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_config_ServerAddress_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_config_ServerAddress_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_config_ServerSet_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_config_ServerSet_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_config_SupplementalService_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_config_SupplementalService_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_config_ListenPoint_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_config_ListenPoint_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_config_ServiceShard_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_config_ServiceShard_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_config_ServiceConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_config_ServiceConfig_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_config_RPCServerConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_config_RPCServerConfig_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_config_ProcessConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_config_ProcessConfig_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\037lib/config/process_config.proto\022\024bnet." +
      "protocol.config\032\021lib/rpc/rpc.proto\"\"\n\003Va" +
      "r\022\014\n\004name\030\001 \002(\t\022\r\n\005value\030\002 \002(\t\"%\n\010Resour" +
      "ce\022\014\n\004name\030\001 \002(\t\022\013\n\003url\030\002 \002(\t\"C\n\020Program" +
      "Resources\022/\n\007program\030\001 \003(\0132\036.bnet.protoc" +
      "ol.config.Resource\"c\n\rServerAddress\022\'\n\007a" +
      "ddress\030\001 \002(\0132\026.bnet.protocol.Address\022\024\n\014" +
      "process_name\030\002 \002(\t\022\023\n\013server_name\030\003 \001(\t\"" +
      "|\n\tServerSet\022;\n\016server_address\030\001 \003(\0132#.b" +
      "net.protocol.config.ServerAddress\022\030\n\020exp",
      "orted_service\030\002 \003(\t\022\030\n\020imported_service\030" +
      "\003 \003(\t\"1\n\023SupplementalService\022\014\n\004name\030\001 \002" +
      "(\t\022\014\n\004port\030\002 \002(\r\"]\n\013ListenPoint\022\014\n\004port\030" +
      "\001 \002(\r\022\017\n\007address\030\002 \001(\t\022/\n\006accept\030\003 \003(\0132\037" +
      ".bnet.protocol.config.ServerSet\"$\n\014Servi" +
      "ceShard\022\024\n\014process_name\030\001 \002(\t\"]\n\rService" +
      "Config\022\014\n\004name\030\001 \002(\t\022\013\n\003url\030\002 \002(\t\0221\n\005sha" +
      "rd\030\003 \003(\0132\".bnet.protocol.config.ServiceS" +
      "hard\"\204\001\n\017RPCServerConfig\022\014\n\004name\030\001 \002(\t\0221" +
      "\n\006listen\030\002 \001(\0132!.bnet.protocol.config.Li",
      "stenPoint\0220\n\007connect\030\003 \003(\0132\037.bnet.protoc" +
      "ol.config.ServerSet\"\265\002\n\rProcessConfig\022\024\n" +
      "\014process_name\030\001 \002(\t\0225\n\006server\030\002 \003(\0132%.bn" +
      "et.protocol.config.RPCServerConfig\0220\n\010re" +
      "source\030\003 \003(\0132\036.bnet.protocol.config.Reso" +
      "urce\0224\n\007service\030\004 \003(\0132#.bnet.protocol.co" +
      "nfig.ServiceConfig\022&\n\003var\030\005 \003(\0132\031.bnet.p" +
      "rotocol.config.Var\022G\n\024supplemental_servi" +
      "ce\030\006 \003(\0132).bnet.protocol.config.Suppleme" +
      "ntalServiceB\025B\023Process_ConfigProto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_bnet_protocol_config_Var_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_bnet_protocol_config_Var_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_config_Var_descriptor,
              new java.lang.String[] { "Name", "Value", },
              bnet.protocol.config.Process_ConfigProto.Var.class,
              bnet.protocol.config.Process_ConfigProto.Var.Builder.class);
          internal_static_bnet_protocol_config_Resource_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_bnet_protocol_config_Resource_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_config_Resource_descriptor,
              new java.lang.String[] { "Name", "Url", },
              bnet.protocol.config.Process_ConfigProto.Resource.class,
              bnet.protocol.config.Process_ConfigProto.Resource.Builder.class);
          internal_static_bnet_protocol_config_ProgramResources_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_bnet_protocol_config_ProgramResources_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_config_ProgramResources_descriptor,
              new java.lang.String[] { "Program", },
              bnet.protocol.config.Process_ConfigProto.ProgramResources.class,
              bnet.protocol.config.Process_ConfigProto.ProgramResources.Builder.class);
          internal_static_bnet_protocol_config_ServerAddress_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_bnet_protocol_config_ServerAddress_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_config_ServerAddress_descriptor,
              new java.lang.String[] { "Address", "ProcessName", "ServerName", },
              bnet.protocol.config.Process_ConfigProto.ServerAddress.class,
              bnet.protocol.config.Process_ConfigProto.ServerAddress.Builder.class);
          internal_static_bnet_protocol_config_ServerSet_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_bnet_protocol_config_ServerSet_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_config_ServerSet_descriptor,
              new java.lang.String[] { "ServerAddress", "ExportedService", "ImportedService", },
              bnet.protocol.config.Process_ConfigProto.ServerSet.class,
              bnet.protocol.config.Process_ConfigProto.ServerSet.Builder.class);
          internal_static_bnet_protocol_config_SupplementalService_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_bnet_protocol_config_SupplementalService_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_config_SupplementalService_descriptor,
              new java.lang.String[] { "Name", "Port", },
              bnet.protocol.config.Process_ConfigProto.SupplementalService.class,
              bnet.protocol.config.Process_ConfigProto.SupplementalService.Builder.class);
          internal_static_bnet_protocol_config_ListenPoint_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_bnet_protocol_config_ListenPoint_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_config_ListenPoint_descriptor,
              new java.lang.String[] { "Port", "Address", "Accept", },
              bnet.protocol.config.Process_ConfigProto.ListenPoint.class,
              bnet.protocol.config.Process_ConfigProto.ListenPoint.Builder.class);
          internal_static_bnet_protocol_config_ServiceShard_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_bnet_protocol_config_ServiceShard_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_config_ServiceShard_descriptor,
              new java.lang.String[] { "ProcessName", },
              bnet.protocol.config.Process_ConfigProto.ServiceShard.class,
              bnet.protocol.config.Process_ConfigProto.ServiceShard.Builder.class);
          internal_static_bnet_protocol_config_ServiceConfig_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_bnet_protocol_config_ServiceConfig_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_config_ServiceConfig_descriptor,
              new java.lang.String[] { "Name", "Url", "Shard", },
              bnet.protocol.config.Process_ConfigProto.ServiceConfig.class,
              bnet.protocol.config.Process_ConfigProto.ServiceConfig.Builder.class);
          internal_static_bnet_protocol_config_RPCServerConfig_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_bnet_protocol_config_RPCServerConfig_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_config_RPCServerConfig_descriptor,
              new java.lang.String[] { "Name", "Listen", "Connect", },
              bnet.protocol.config.Process_ConfigProto.RPCServerConfig.class,
              bnet.protocol.config.Process_ConfigProto.RPCServerConfig.Builder.class);
          internal_static_bnet_protocol_config_ProcessConfig_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_bnet_protocol_config_ProcessConfig_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_config_ProcessConfig_descriptor,
              new java.lang.String[] { "ProcessName", "Server", "Resource", "Service", "Var", "SupplementalService", },
              bnet.protocol.config.Process_ConfigProto.ProcessConfig.class,
              bnet.protocol.config.Process_ConfigProto.ProcessConfig.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          bnet.protocol.Rpc.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
