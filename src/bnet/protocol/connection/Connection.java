// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lib/rpc/connection.proto

package bnet.protocol.connection;

public final class Connection {
  private Connection() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class ConnectRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use ConnectRequest.newBuilder() to construct.
    private ConnectRequest() {
      initFields();
    }
    private ConnectRequest(boolean noInit) {}
    
    private static final ConnectRequest defaultInstance;
    public static ConnectRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public ConnectRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.connection.Connection.internal_static_bnet_protocol_connection_ConnectRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.connection.Connection.internal_static_bnet_protocol_connection_ConnectRequest_fieldAccessorTable;
    }
    
    // optional .bnet.protocol.ProcessId client_id = 1;
    public static final int CLIENT_ID_FIELD_NUMBER = 1;
    private boolean hasClientId;
    private bnet.protocol.Rpc.ProcessId clientId_;
    public boolean hasClientId() { return hasClientId; }
    public bnet.protocol.Rpc.ProcessId getClientId() { return clientId_; }
    
    private void initFields() {
      clientId_ = bnet.protocol.Rpc.ProcessId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (hasClientId()) {
        if (!getClientId().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasClientId()) {
        output.writeMessage(1, getClientId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasClientId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getClientId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.connection.Connection.ConnectRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.connection.Connection.ConnectRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.connection.Connection.ConnectRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.connection.Connection.ConnectRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.connection.Connection.ConnectRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.connection.Connection.ConnectRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.connection.Connection.ConnectRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.connection.Connection.ConnectRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.connection.Connection.ConnectRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.connection.Connection.ConnectRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.connection.Connection.ConnectRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.connection.Connection.ConnectRequest result;
      
      // Construct using bnet.protocol.connection.Connection.ConnectRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.connection.Connection.ConnectRequest();
        return builder;
      }
      
      protected bnet.protocol.connection.Connection.ConnectRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.connection.Connection.ConnectRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.connection.Connection.ConnectRequest.getDescriptor();
      }
      
      public bnet.protocol.connection.Connection.ConnectRequest getDefaultInstanceForType() {
        return bnet.protocol.connection.Connection.ConnectRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.connection.Connection.ConnectRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.connection.Connection.ConnectRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.connection.Connection.ConnectRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.connection.Connection.ConnectRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.connection.Connection.ConnectRequest) {
          return mergeFrom((bnet.protocol.connection.Connection.ConnectRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.connection.Connection.ConnectRequest other) {
        if (other == bnet.protocol.connection.Connection.ConnectRequest.getDefaultInstance()) return this;
        if (other.hasClientId()) {
          mergeClientId(other.getClientId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Rpc.ProcessId.Builder subBuilder = bnet.protocol.Rpc.ProcessId.newBuilder();
              if (hasClientId()) {
                subBuilder.mergeFrom(getClientId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setClientId(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional .bnet.protocol.ProcessId client_id = 1;
      public boolean hasClientId() {
        return result.hasClientId();
      }
      public bnet.protocol.Rpc.ProcessId getClientId() {
        return result.getClientId();
      }
      public Builder setClientId(bnet.protocol.Rpc.ProcessId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasClientId = true;
        result.clientId_ = value;
        return this;
      }
      public Builder setClientId(bnet.protocol.Rpc.ProcessId.Builder builderForValue) {
        result.hasClientId = true;
        result.clientId_ = builderForValue.build();
        return this;
      }
      public Builder mergeClientId(bnet.protocol.Rpc.ProcessId value) {
        if (result.hasClientId() &&
            result.clientId_ != bnet.protocol.Rpc.ProcessId.getDefaultInstance()) {
          result.clientId_ =
            bnet.protocol.Rpc.ProcessId.newBuilder(result.clientId_).mergeFrom(value).buildPartial();
        } else {
          result.clientId_ = value;
        }
        result.hasClientId = true;
        return this;
      }
      public Builder clearClientId() {
        result.hasClientId = false;
        result.clientId_ = bnet.protocol.Rpc.ProcessId.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.connection.ConnectRequest)
    }
    
    static {
      defaultInstance = new ConnectRequest(true);
      bnet.protocol.connection.Connection.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.connection.ConnectRequest)
  }
  
  public static final class ConnectResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use ConnectResponse.newBuilder() to construct.
    private ConnectResponse() {
      initFields();
    }
    private ConnectResponse(boolean noInit) {}
    
    private static final ConnectResponse defaultInstance;
    public static ConnectResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public ConnectResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.connection.Connection.internal_static_bnet_protocol_connection_ConnectResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.connection.Connection.internal_static_bnet_protocol_connection_ConnectResponse_fieldAccessorTable;
    }
    
    // required .bnet.protocol.ProcessId server_id = 1;
    public static final int SERVER_ID_FIELD_NUMBER = 1;
    private boolean hasServerId;
    private bnet.protocol.Rpc.ProcessId serverId_;
    public boolean hasServerId() { return hasServerId; }
    public bnet.protocol.Rpc.ProcessId getServerId() { return serverId_; }
    
    // optional .bnet.protocol.ProcessId client_id = 2;
    public static final int CLIENT_ID_FIELD_NUMBER = 2;
    private boolean hasClientId;
    private bnet.protocol.Rpc.ProcessId clientId_;
    public boolean hasClientId() { return hasClientId; }
    public bnet.protocol.Rpc.ProcessId getClientId() { return clientId_; }
    
    private void initFields() {
      serverId_ = bnet.protocol.Rpc.ProcessId.getDefaultInstance();
      clientId_ = bnet.protocol.Rpc.ProcessId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasServerId) return false;
      if (!getServerId().isInitialized()) return false;
      if (hasClientId()) {
        if (!getClientId().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasServerId()) {
        output.writeMessage(1, getServerId());
      }
      if (hasClientId()) {
        output.writeMessage(2, getClientId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasServerId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getServerId());
      }
      if (hasClientId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getClientId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.connection.Connection.ConnectResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.connection.Connection.ConnectResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.connection.Connection.ConnectResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.connection.Connection.ConnectResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.connection.Connection.ConnectResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.connection.Connection.ConnectResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.connection.Connection.ConnectResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.connection.Connection.ConnectResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.connection.Connection.ConnectResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.connection.Connection.ConnectResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.connection.Connection.ConnectResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.connection.Connection.ConnectResponse result;
      
      // Construct using bnet.protocol.connection.Connection.ConnectResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.connection.Connection.ConnectResponse();
        return builder;
      }
      
      protected bnet.protocol.connection.Connection.ConnectResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.connection.Connection.ConnectResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.connection.Connection.ConnectResponse.getDescriptor();
      }
      
      public bnet.protocol.connection.Connection.ConnectResponse getDefaultInstanceForType() {
        return bnet.protocol.connection.Connection.ConnectResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.connection.Connection.ConnectResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.connection.Connection.ConnectResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.connection.Connection.ConnectResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.connection.Connection.ConnectResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.connection.Connection.ConnectResponse) {
          return mergeFrom((bnet.protocol.connection.Connection.ConnectResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.connection.Connection.ConnectResponse other) {
        if (other == bnet.protocol.connection.Connection.ConnectResponse.getDefaultInstance()) return this;
        if (other.hasServerId()) {
          mergeServerId(other.getServerId());
        }
        if (other.hasClientId()) {
          mergeClientId(other.getClientId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Rpc.ProcessId.Builder subBuilder = bnet.protocol.Rpc.ProcessId.newBuilder();
              if (hasServerId()) {
                subBuilder.mergeFrom(getServerId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setServerId(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bnet.protocol.Rpc.ProcessId.Builder subBuilder = bnet.protocol.Rpc.ProcessId.newBuilder();
              if (hasClientId()) {
                subBuilder.mergeFrom(getClientId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setClientId(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .bnet.protocol.ProcessId server_id = 1;
      public boolean hasServerId() {
        return result.hasServerId();
      }
      public bnet.protocol.Rpc.ProcessId getServerId() {
        return result.getServerId();
      }
      public Builder setServerId(bnet.protocol.Rpc.ProcessId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasServerId = true;
        result.serverId_ = value;
        return this;
      }
      public Builder setServerId(bnet.protocol.Rpc.ProcessId.Builder builderForValue) {
        result.hasServerId = true;
        result.serverId_ = builderForValue.build();
        return this;
      }
      public Builder mergeServerId(bnet.protocol.Rpc.ProcessId value) {
        if (result.hasServerId() &&
            result.serverId_ != bnet.protocol.Rpc.ProcessId.getDefaultInstance()) {
          result.serverId_ =
            bnet.protocol.Rpc.ProcessId.newBuilder(result.serverId_).mergeFrom(value).buildPartial();
        } else {
          result.serverId_ = value;
        }
        result.hasServerId = true;
        return this;
      }
      public Builder clearServerId() {
        result.hasServerId = false;
        result.serverId_ = bnet.protocol.Rpc.ProcessId.getDefaultInstance();
        return this;
      }
      
      // optional .bnet.protocol.ProcessId client_id = 2;
      public boolean hasClientId() {
        return result.hasClientId();
      }
      public bnet.protocol.Rpc.ProcessId getClientId() {
        return result.getClientId();
      }
      public Builder setClientId(bnet.protocol.Rpc.ProcessId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasClientId = true;
        result.clientId_ = value;
        return this;
      }
      public Builder setClientId(bnet.protocol.Rpc.ProcessId.Builder builderForValue) {
        result.hasClientId = true;
        result.clientId_ = builderForValue.build();
        return this;
      }
      public Builder mergeClientId(bnet.protocol.Rpc.ProcessId value) {
        if (result.hasClientId() &&
            result.clientId_ != bnet.protocol.Rpc.ProcessId.getDefaultInstance()) {
          result.clientId_ =
            bnet.protocol.Rpc.ProcessId.newBuilder(result.clientId_).mergeFrom(value).buildPartial();
        } else {
          result.clientId_ = value;
        }
        result.hasClientId = true;
        return this;
      }
      public Builder clearClientId() {
        result.hasClientId = false;
        result.clientId_ = bnet.protocol.Rpc.ProcessId.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.connection.ConnectResponse)
    }
    
    static {
      defaultInstance = new ConnectResponse(true);
      bnet.protocol.connection.Connection.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.connection.ConnectResponse)
  }
  
  public static final class BoundService extends
      com.google.protobuf.GeneratedMessage {
    // Use BoundService.newBuilder() to construct.
    private BoundService() {
      initFields();
    }
    private BoundService(boolean noInit) {}
    
    private static final BoundService defaultInstance;
    public static BoundService getDefaultInstance() {
      return defaultInstance;
    }
    
    public BoundService getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.connection.Connection.internal_static_bnet_protocol_connection_BoundService_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.connection.Connection.internal_static_bnet_protocol_connection_BoundService_fieldAccessorTable;
    }
    
    // required fixed32 hash = 1;
    public static final int HASH_FIELD_NUMBER = 1;
    private boolean hasHash;
    private int hash_ = 0;
    public boolean hasHash() { return hasHash; }
    public int getHash() { return hash_; }
    
    // required uint32 id = 2;
    public static final int ID_FIELD_NUMBER = 2;
    private boolean hasId;
    private int id_ = 0;
    public boolean hasId() { return hasId; }
    public int getId() { return id_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasHash) return false;
      if (!hasId) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasHash()) {
        output.writeFixed32(1, getHash());
      }
      if (hasId()) {
        output.writeUInt32(2, getId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasHash()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, getHash());
      }
      if (hasId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.connection.Connection.BoundService parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.connection.Connection.BoundService parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.connection.Connection.BoundService parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.connection.Connection.BoundService parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.connection.Connection.BoundService parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.connection.Connection.BoundService parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.connection.Connection.BoundService parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.connection.Connection.BoundService parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.connection.Connection.BoundService parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.connection.Connection.BoundService parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.connection.Connection.BoundService prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.connection.Connection.BoundService result;
      
      // Construct using bnet.protocol.connection.Connection.BoundService.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.connection.Connection.BoundService();
        return builder;
      }
      
      protected bnet.protocol.connection.Connection.BoundService internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.connection.Connection.BoundService();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.connection.Connection.BoundService.getDescriptor();
      }
      
      public bnet.protocol.connection.Connection.BoundService getDefaultInstanceForType() {
        return bnet.protocol.connection.Connection.BoundService.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.connection.Connection.BoundService build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.connection.Connection.BoundService buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.connection.Connection.BoundService buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.connection.Connection.BoundService returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.connection.Connection.BoundService) {
          return mergeFrom((bnet.protocol.connection.Connection.BoundService)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.connection.Connection.BoundService other) {
        if (other == bnet.protocol.connection.Connection.BoundService.getDefaultInstance()) return this;
        if (other.hasHash()) {
          setHash(other.getHash());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 13: {
              setHash(input.readFixed32());
              break;
            }
            case 16: {
              setId(input.readUInt32());
              break;
            }
          }
        }
      }
      
      
      // required fixed32 hash = 1;
      public boolean hasHash() {
        return result.hasHash();
      }
      public int getHash() {
        return result.getHash();
      }
      public Builder setHash(int value) {
        result.hasHash = true;
        result.hash_ = value;
        return this;
      }
      public Builder clearHash() {
        result.hasHash = false;
        result.hash_ = 0;
        return this;
      }
      
      // required uint32 id = 2;
      public boolean hasId() {
        return result.hasId();
      }
      public int getId() {
        return result.getId();
      }
      public Builder setId(int value) {
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.connection.BoundService)
    }
    
    static {
      defaultInstance = new BoundService(true);
      bnet.protocol.connection.Connection.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.connection.BoundService)
  }
  
  public static final class BindRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use BindRequest.newBuilder() to construct.
    private BindRequest() {
      initFields();
    }
    private BindRequest(boolean noInit) {}
    
    private static final BindRequest defaultInstance;
    public static BindRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public BindRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.connection.Connection.internal_static_bnet_protocol_connection_BindRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.connection.Connection.internal_static_bnet_protocol_connection_BindRequest_fieldAccessorTable;
    }
    
    // repeated fixed32 imported_service_hash = 1;
    public static final int IMPORTED_SERVICE_HASH_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> importedServiceHash_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getImportedServiceHashList() {
      return importedServiceHash_;
    }
    public int getImportedServiceHashCount() { return importedServiceHash_.size(); }
    public int getImportedServiceHash(int index) {
      return importedServiceHash_.get(index);
    }
    
    // repeated .bnet.protocol.connection.BoundService exported_service = 2;
    public static final int EXPORTED_SERVICE_FIELD_NUMBER = 2;
    private java.util.List<bnet.protocol.connection.Connection.BoundService> exportedService_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.connection.Connection.BoundService> getExportedServiceList() {
      return exportedService_;
    }
    public int getExportedServiceCount() { return exportedService_.size(); }
    public bnet.protocol.connection.Connection.BoundService getExportedService(int index) {
      return exportedService_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (bnet.protocol.connection.Connection.BoundService element : getExportedServiceList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int element : getImportedServiceHashList()) {
        output.writeFixed32(1, element);
      }
      for (bnet.protocol.connection.Connection.BoundService element : getExportedServiceList()) {
        output.writeMessage(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        dataSize = 4 * getImportedServiceHashList().size();
        size += dataSize;
        size += 1 * getImportedServiceHashList().size();
      }
      for (bnet.protocol.connection.Connection.BoundService element : getExportedServiceList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.connection.Connection.BindRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.connection.Connection.BindRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.connection.Connection.BindRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.connection.Connection.BindRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.connection.Connection.BindRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.connection.Connection.BindRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.connection.Connection.BindRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.connection.Connection.BindRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.connection.Connection.BindRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.connection.Connection.BindRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.connection.Connection.BindRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.connection.Connection.BindRequest result;
      
      // Construct using bnet.protocol.connection.Connection.BindRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.connection.Connection.BindRequest();
        return builder;
      }
      
      protected bnet.protocol.connection.Connection.BindRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.connection.Connection.BindRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.connection.Connection.BindRequest.getDescriptor();
      }
      
      public bnet.protocol.connection.Connection.BindRequest getDefaultInstanceForType() {
        return bnet.protocol.connection.Connection.BindRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.connection.Connection.BindRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.connection.Connection.BindRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.connection.Connection.BindRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.importedServiceHash_ != java.util.Collections.EMPTY_LIST) {
          result.importedServiceHash_ =
            java.util.Collections.unmodifiableList(result.importedServiceHash_);
        }
        if (result.exportedService_ != java.util.Collections.EMPTY_LIST) {
          result.exportedService_ =
            java.util.Collections.unmodifiableList(result.exportedService_);
        }
        bnet.protocol.connection.Connection.BindRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.connection.Connection.BindRequest) {
          return mergeFrom((bnet.protocol.connection.Connection.BindRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.connection.Connection.BindRequest other) {
        if (other == bnet.protocol.connection.Connection.BindRequest.getDefaultInstance()) return this;
        if (!other.importedServiceHash_.isEmpty()) {
          if (result.importedServiceHash_.isEmpty()) {
            result.importedServiceHash_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.importedServiceHash_.addAll(other.importedServiceHash_);
        }
        if (!other.exportedService_.isEmpty()) {
          if (result.exportedService_.isEmpty()) {
            result.exportedService_ = new java.util.ArrayList<bnet.protocol.connection.Connection.BoundService>();
          }
          result.exportedService_.addAll(other.exportedService_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 13: {
              addImportedServiceHash(input.readFixed32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addImportedServiceHash(input.readFixed32());
              }
              input.popLimit(limit);
              break;
            }
            case 18: {
              bnet.protocol.connection.Connection.BoundService.Builder subBuilder = bnet.protocol.connection.Connection.BoundService.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addExportedService(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated fixed32 imported_service_hash = 1;
      public java.util.List<java.lang.Integer> getImportedServiceHashList() {
        return java.util.Collections.unmodifiableList(result.importedServiceHash_);
      }
      public int getImportedServiceHashCount() {
        return result.getImportedServiceHashCount();
      }
      public int getImportedServiceHash(int index) {
        return result.getImportedServiceHash(index);
      }
      public Builder setImportedServiceHash(int index, int value) {
        result.importedServiceHash_.set(index, value);
        return this;
      }
      public Builder addImportedServiceHash(int value) {
        if (result.importedServiceHash_.isEmpty()) {
          result.importedServiceHash_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.importedServiceHash_.add(value);
        return this;
      }
      public Builder addAllImportedServiceHash(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.importedServiceHash_.isEmpty()) {
          result.importedServiceHash_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.importedServiceHash_);
        return this;
      }
      public Builder clearImportedServiceHash() {
        result.importedServiceHash_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .bnet.protocol.connection.BoundService exported_service = 2;
      public java.util.List<bnet.protocol.connection.Connection.BoundService> getExportedServiceList() {
        return java.util.Collections.unmodifiableList(result.exportedService_);
      }
      public int getExportedServiceCount() {
        return result.getExportedServiceCount();
      }
      public bnet.protocol.connection.Connection.BoundService getExportedService(int index) {
        return result.getExportedService(index);
      }
      public Builder setExportedService(int index, bnet.protocol.connection.Connection.BoundService value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.exportedService_.set(index, value);
        return this;
      }
      public Builder setExportedService(int index, bnet.protocol.connection.Connection.BoundService.Builder builderForValue) {
        result.exportedService_.set(index, builderForValue.build());
        return this;
      }
      public Builder addExportedService(bnet.protocol.connection.Connection.BoundService value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.exportedService_.isEmpty()) {
          result.exportedService_ = new java.util.ArrayList<bnet.protocol.connection.Connection.BoundService>();
        }
        result.exportedService_.add(value);
        return this;
      }
      public Builder addExportedService(bnet.protocol.connection.Connection.BoundService.Builder builderForValue) {
        if (result.exportedService_.isEmpty()) {
          result.exportedService_ = new java.util.ArrayList<bnet.protocol.connection.Connection.BoundService>();
        }
        result.exportedService_.add(builderForValue.build());
        return this;
      }
      public Builder addAllExportedService(
          java.lang.Iterable<? extends bnet.protocol.connection.Connection.BoundService> values) {
        if (result.exportedService_.isEmpty()) {
          result.exportedService_ = new java.util.ArrayList<bnet.protocol.connection.Connection.BoundService>();
        }
        super.addAll(values, result.exportedService_);
        return this;
      }
      public Builder clearExportedService() {
        result.exportedService_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.connection.BindRequest)
    }
    
    static {
      defaultInstance = new BindRequest(true);
      bnet.protocol.connection.Connection.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.connection.BindRequest)
  }
  
  public static final class BindResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use BindResponse.newBuilder() to construct.
    private BindResponse() {
      initFields();
    }
    private BindResponse(boolean noInit) {}
    
    private static final BindResponse defaultInstance;
    public static BindResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public BindResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.connection.Connection.internal_static_bnet_protocol_connection_BindResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.connection.Connection.internal_static_bnet_protocol_connection_BindResponse_fieldAccessorTable;
    }
    
    // repeated uint32 imported_service_id = 1;
    public static final int IMPORTED_SERVICE_ID_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> importedServiceId_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getImportedServiceIdList() {
      return importedServiceId_;
    }
    public int getImportedServiceIdCount() { return importedServiceId_.size(); }
    public int getImportedServiceId(int index) {
      return importedServiceId_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int element : getImportedServiceIdList()) {
        output.writeUInt32(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (int element : getImportedServiceIdList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getImportedServiceIdList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.connection.Connection.BindResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.connection.Connection.BindResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.connection.Connection.BindResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.connection.Connection.BindResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.connection.Connection.BindResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.connection.Connection.BindResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.connection.Connection.BindResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.connection.Connection.BindResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.connection.Connection.BindResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.connection.Connection.BindResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.connection.Connection.BindResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.connection.Connection.BindResponse result;
      
      // Construct using bnet.protocol.connection.Connection.BindResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.connection.Connection.BindResponse();
        return builder;
      }
      
      protected bnet.protocol.connection.Connection.BindResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.connection.Connection.BindResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.connection.Connection.BindResponse.getDescriptor();
      }
      
      public bnet.protocol.connection.Connection.BindResponse getDefaultInstanceForType() {
        return bnet.protocol.connection.Connection.BindResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.connection.Connection.BindResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.connection.Connection.BindResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.connection.Connection.BindResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.importedServiceId_ != java.util.Collections.EMPTY_LIST) {
          result.importedServiceId_ =
            java.util.Collections.unmodifiableList(result.importedServiceId_);
        }
        bnet.protocol.connection.Connection.BindResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.connection.Connection.BindResponse) {
          return mergeFrom((bnet.protocol.connection.Connection.BindResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.connection.Connection.BindResponse other) {
        if (other == bnet.protocol.connection.Connection.BindResponse.getDefaultInstance()) return this;
        if (!other.importedServiceId_.isEmpty()) {
          if (result.importedServiceId_.isEmpty()) {
            result.importedServiceId_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.importedServiceId_.addAll(other.importedServiceId_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              addImportedServiceId(input.readUInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addImportedServiceId(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // repeated uint32 imported_service_id = 1;
      public java.util.List<java.lang.Integer> getImportedServiceIdList() {
        return java.util.Collections.unmodifiableList(result.importedServiceId_);
      }
      public int getImportedServiceIdCount() {
        return result.getImportedServiceIdCount();
      }
      public int getImportedServiceId(int index) {
        return result.getImportedServiceId(index);
      }
      public Builder setImportedServiceId(int index, int value) {
        result.importedServiceId_.set(index, value);
        return this;
      }
      public Builder addImportedServiceId(int value) {
        if (result.importedServiceId_.isEmpty()) {
          result.importedServiceId_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.importedServiceId_.add(value);
        return this;
      }
      public Builder addAllImportedServiceId(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.importedServiceId_.isEmpty()) {
          result.importedServiceId_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.importedServiceId_);
        return this;
      }
      public Builder clearImportedServiceId() {
        result.importedServiceId_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.connection.BindResponse)
    }
    
    static {
      defaultInstance = new BindResponse(true);
      bnet.protocol.connection.Connection.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.connection.BindResponse)
  }
  
  public static final class EchoRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use EchoRequest.newBuilder() to construct.
    private EchoRequest() {
      initFields();
    }
    private EchoRequest(boolean noInit) {}
    
    private static final EchoRequest defaultInstance;
    public static EchoRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public EchoRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.connection.Connection.internal_static_bnet_protocol_connection_EchoRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.connection.Connection.internal_static_bnet_protocol_connection_EchoRequest_fieldAccessorTable;
    }
    
    // optional fixed64 time = 1;
    public static final int TIME_FIELD_NUMBER = 1;
    private boolean hasTime;
    private long time_ = 0L;
    public boolean hasTime() { return hasTime; }
    public long getTime() { return time_; }
    
    // optional bool network_only = 2;
    public static final int NETWORK_ONLY_FIELD_NUMBER = 2;
    private boolean hasNetworkOnly;
    private boolean networkOnly_ = false;
    public boolean hasNetworkOnly() { return hasNetworkOnly; }
    public boolean getNetworkOnly() { return networkOnly_; }
    
    // optional bytes payload = 3;
    public static final int PAYLOAD_FIELD_NUMBER = 3;
    private boolean hasPayload;
    private com.google.protobuf.ByteString payload_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasPayload() { return hasPayload; }
    public com.google.protobuf.ByteString getPayload() { return payload_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasTime()) {
        output.writeFixed64(1, getTime());
      }
      if (hasNetworkOnly()) {
        output.writeBool(2, getNetworkOnly());
      }
      if (hasPayload()) {
        output.writeBytes(3, getPayload());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasTime()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, getTime());
      }
      if (hasNetworkOnly()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, getNetworkOnly());
      }
      if (hasPayload()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getPayload());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.connection.Connection.EchoRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.connection.Connection.EchoRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.connection.Connection.EchoRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.connection.Connection.EchoRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.connection.Connection.EchoRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.connection.Connection.EchoRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.connection.Connection.EchoRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.connection.Connection.EchoRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.connection.Connection.EchoRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.connection.Connection.EchoRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.connection.Connection.EchoRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.connection.Connection.EchoRequest result;
      
      // Construct using bnet.protocol.connection.Connection.EchoRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.connection.Connection.EchoRequest();
        return builder;
      }
      
      protected bnet.protocol.connection.Connection.EchoRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.connection.Connection.EchoRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.connection.Connection.EchoRequest.getDescriptor();
      }
      
      public bnet.protocol.connection.Connection.EchoRequest getDefaultInstanceForType() {
        return bnet.protocol.connection.Connection.EchoRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.connection.Connection.EchoRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.connection.Connection.EchoRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.connection.Connection.EchoRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.connection.Connection.EchoRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.connection.Connection.EchoRequest) {
          return mergeFrom((bnet.protocol.connection.Connection.EchoRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.connection.Connection.EchoRequest other) {
        if (other == bnet.protocol.connection.Connection.EchoRequest.getDefaultInstance()) return this;
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        if (other.hasNetworkOnly()) {
          setNetworkOnly(other.getNetworkOnly());
        }
        if (other.hasPayload()) {
          setPayload(other.getPayload());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              setTime(input.readFixed64());
              break;
            }
            case 16: {
              setNetworkOnly(input.readBool());
              break;
            }
            case 26: {
              setPayload(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // optional fixed64 time = 1;
      public boolean hasTime() {
        return result.hasTime();
      }
      public long getTime() {
        return result.getTime();
      }
      public Builder setTime(long value) {
        result.hasTime = true;
        result.time_ = value;
        return this;
      }
      public Builder clearTime() {
        result.hasTime = false;
        result.time_ = 0L;
        return this;
      }
      
      // optional bool network_only = 2;
      public boolean hasNetworkOnly() {
        return result.hasNetworkOnly();
      }
      public boolean getNetworkOnly() {
        return result.getNetworkOnly();
      }
      public Builder setNetworkOnly(boolean value) {
        result.hasNetworkOnly = true;
        result.networkOnly_ = value;
        return this;
      }
      public Builder clearNetworkOnly() {
        result.hasNetworkOnly = false;
        result.networkOnly_ = false;
        return this;
      }
      
      // optional bytes payload = 3;
      public boolean hasPayload() {
        return result.hasPayload();
      }
      public com.google.protobuf.ByteString getPayload() {
        return result.getPayload();
      }
      public Builder setPayload(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPayload = true;
        result.payload_ = value;
        return this;
      }
      public Builder clearPayload() {
        result.hasPayload = false;
        result.payload_ = getDefaultInstance().getPayload();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.connection.EchoRequest)
    }
    
    static {
      defaultInstance = new EchoRequest(true);
      bnet.protocol.connection.Connection.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.connection.EchoRequest)
  }
  
  public static final class EchoResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use EchoResponse.newBuilder() to construct.
    private EchoResponse() {
      initFields();
    }
    private EchoResponse(boolean noInit) {}
    
    private static final EchoResponse defaultInstance;
    public static EchoResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public EchoResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.connection.Connection.internal_static_bnet_protocol_connection_EchoResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.connection.Connection.internal_static_bnet_protocol_connection_EchoResponse_fieldAccessorTable;
    }
    
    // optional fixed64 time = 1;
    public static final int TIME_FIELD_NUMBER = 1;
    private boolean hasTime;
    private long time_ = 0L;
    public boolean hasTime() { return hasTime; }
    public long getTime() { return time_; }
    
    // optional bytes payload = 2;
    public static final int PAYLOAD_FIELD_NUMBER = 2;
    private boolean hasPayload;
    private com.google.protobuf.ByteString payload_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasPayload() { return hasPayload; }
    public com.google.protobuf.ByteString getPayload() { return payload_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasTime()) {
        output.writeFixed64(1, getTime());
      }
      if (hasPayload()) {
        output.writeBytes(2, getPayload());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasTime()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, getTime());
      }
      if (hasPayload()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getPayload());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.connection.Connection.EchoResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.connection.Connection.EchoResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.connection.Connection.EchoResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.connection.Connection.EchoResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.connection.Connection.EchoResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.connection.Connection.EchoResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.connection.Connection.EchoResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.connection.Connection.EchoResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.connection.Connection.EchoResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.connection.Connection.EchoResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.connection.Connection.EchoResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.connection.Connection.EchoResponse result;
      
      // Construct using bnet.protocol.connection.Connection.EchoResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.connection.Connection.EchoResponse();
        return builder;
      }
      
      protected bnet.protocol.connection.Connection.EchoResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.connection.Connection.EchoResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.connection.Connection.EchoResponse.getDescriptor();
      }
      
      public bnet.protocol.connection.Connection.EchoResponse getDefaultInstanceForType() {
        return bnet.protocol.connection.Connection.EchoResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.connection.Connection.EchoResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.connection.Connection.EchoResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.connection.Connection.EchoResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.connection.Connection.EchoResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.connection.Connection.EchoResponse) {
          return mergeFrom((bnet.protocol.connection.Connection.EchoResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.connection.Connection.EchoResponse other) {
        if (other == bnet.protocol.connection.Connection.EchoResponse.getDefaultInstance()) return this;
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        if (other.hasPayload()) {
          setPayload(other.getPayload());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              setTime(input.readFixed64());
              break;
            }
            case 18: {
              setPayload(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // optional fixed64 time = 1;
      public boolean hasTime() {
        return result.hasTime();
      }
      public long getTime() {
        return result.getTime();
      }
      public Builder setTime(long value) {
        result.hasTime = true;
        result.time_ = value;
        return this;
      }
      public Builder clearTime() {
        result.hasTime = false;
        result.time_ = 0L;
        return this;
      }
      
      // optional bytes payload = 2;
      public boolean hasPayload() {
        return result.hasPayload();
      }
      public com.google.protobuf.ByteString getPayload() {
        return result.getPayload();
      }
      public Builder setPayload(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPayload = true;
        result.payload_ = value;
        return this;
      }
      public Builder clearPayload() {
        result.hasPayload = false;
        result.payload_ = getDefaultInstance().getPayload();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.connection.EchoResponse)
    }
    
    static {
      defaultInstance = new EchoResponse(true);
      bnet.protocol.connection.Connection.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.connection.EchoResponse)
  }
  
  public static final class DisconnectRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use DisconnectRequest.newBuilder() to construct.
    private DisconnectRequest() {
      initFields();
    }
    private DisconnectRequest(boolean noInit) {}
    
    private static final DisconnectRequest defaultInstance;
    public static DisconnectRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public DisconnectRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.connection.Connection.internal_static_bnet_protocol_connection_DisconnectRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.connection.Connection.internal_static_bnet_protocol_connection_DisconnectRequest_fieldAccessorTable;
    }
    
    // required uint32 error_code = 1;
    public static final int ERROR_CODE_FIELD_NUMBER = 1;
    private boolean hasErrorCode;
    private int errorCode_ = 0;
    public boolean hasErrorCode() { return hasErrorCode; }
    public int getErrorCode() { return errorCode_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasErrorCode) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasErrorCode()) {
        output.writeUInt32(1, getErrorCode());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasErrorCode()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getErrorCode());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.connection.Connection.DisconnectRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.connection.Connection.DisconnectRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.connection.Connection.DisconnectRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.connection.Connection.DisconnectRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.connection.Connection.DisconnectRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.connection.Connection.DisconnectRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.connection.Connection.DisconnectRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.connection.Connection.DisconnectRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.connection.Connection.DisconnectRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.connection.Connection.DisconnectRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.connection.Connection.DisconnectRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.connection.Connection.DisconnectRequest result;
      
      // Construct using bnet.protocol.connection.Connection.DisconnectRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.connection.Connection.DisconnectRequest();
        return builder;
      }
      
      protected bnet.protocol.connection.Connection.DisconnectRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.connection.Connection.DisconnectRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.connection.Connection.DisconnectRequest.getDescriptor();
      }
      
      public bnet.protocol.connection.Connection.DisconnectRequest getDefaultInstanceForType() {
        return bnet.protocol.connection.Connection.DisconnectRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.connection.Connection.DisconnectRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.connection.Connection.DisconnectRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.connection.Connection.DisconnectRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.connection.Connection.DisconnectRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.connection.Connection.DisconnectRequest) {
          return mergeFrom((bnet.protocol.connection.Connection.DisconnectRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.connection.Connection.DisconnectRequest other) {
        if (other == bnet.protocol.connection.Connection.DisconnectRequest.getDefaultInstance()) return this;
        if (other.hasErrorCode()) {
          setErrorCode(other.getErrorCode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setErrorCode(input.readUInt32());
              break;
            }
          }
        }
      }
      
      
      // required uint32 error_code = 1;
      public boolean hasErrorCode() {
        return result.hasErrorCode();
      }
      public int getErrorCode() {
        return result.getErrorCode();
      }
      public Builder setErrorCode(int value) {
        result.hasErrorCode = true;
        result.errorCode_ = value;
        return this;
      }
      public Builder clearErrorCode() {
        result.hasErrorCode = false;
        result.errorCode_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.connection.DisconnectRequest)
    }
    
    static {
      defaultInstance = new DisconnectRequest(true);
      bnet.protocol.connection.Connection.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.connection.DisconnectRequest)
  }
  
  public static final class DisconnectNotification extends
      com.google.protobuf.GeneratedMessage {
    // Use DisconnectNotification.newBuilder() to construct.
    private DisconnectNotification() {
      initFields();
    }
    private DisconnectNotification(boolean noInit) {}
    
    private static final DisconnectNotification defaultInstance;
    public static DisconnectNotification getDefaultInstance() {
      return defaultInstance;
    }
    
    public DisconnectNotification getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.connection.Connection.internal_static_bnet_protocol_connection_DisconnectNotification_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.connection.Connection.internal_static_bnet_protocol_connection_DisconnectNotification_fieldAccessorTable;
    }
    
    // required uint32 error_code = 1;
    public static final int ERROR_CODE_FIELD_NUMBER = 1;
    private boolean hasErrorCode;
    private int errorCode_ = 0;
    public boolean hasErrorCode() { return hasErrorCode; }
    public int getErrorCode() { return errorCode_; }
    
    // optional string reason = 2;
    public static final int REASON_FIELD_NUMBER = 2;
    private boolean hasReason;
    private java.lang.String reason_ = "";
    public boolean hasReason() { return hasReason; }
    public java.lang.String getReason() { return reason_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasErrorCode) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasErrorCode()) {
        output.writeUInt32(1, getErrorCode());
      }
      if (hasReason()) {
        output.writeString(2, getReason());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasErrorCode()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getErrorCode());
      }
      if (hasReason()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getReason());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.connection.Connection.DisconnectNotification parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.connection.Connection.DisconnectNotification parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.connection.Connection.DisconnectNotification parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.connection.Connection.DisconnectNotification parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.connection.Connection.DisconnectNotification parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.connection.Connection.DisconnectNotification parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.connection.Connection.DisconnectNotification parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.connection.Connection.DisconnectNotification parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.connection.Connection.DisconnectNotification parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.connection.Connection.DisconnectNotification parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.connection.Connection.DisconnectNotification prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.connection.Connection.DisconnectNotification result;
      
      // Construct using bnet.protocol.connection.Connection.DisconnectNotification.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.connection.Connection.DisconnectNotification();
        return builder;
      }
      
      protected bnet.protocol.connection.Connection.DisconnectNotification internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.connection.Connection.DisconnectNotification();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.connection.Connection.DisconnectNotification.getDescriptor();
      }
      
      public bnet.protocol.connection.Connection.DisconnectNotification getDefaultInstanceForType() {
        return bnet.protocol.connection.Connection.DisconnectNotification.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.connection.Connection.DisconnectNotification build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.connection.Connection.DisconnectNotification buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.connection.Connection.DisconnectNotification buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.connection.Connection.DisconnectNotification returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.connection.Connection.DisconnectNotification) {
          return mergeFrom((bnet.protocol.connection.Connection.DisconnectNotification)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.connection.Connection.DisconnectNotification other) {
        if (other == bnet.protocol.connection.Connection.DisconnectNotification.getDefaultInstance()) return this;
        if (other.hasErrorCode()) {
          setErrorCode(other.getErrorCode());
        }
        if (other.hasReason()) {
          setReason(other.getReason());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setErrorCode(input.readUInt32());
              break;
            }
            case 18: {
              setReason(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required uint32 error_code = 1;
      public boolean hasErrorCode() {
        return result.hasErrorCode();
      }
      public int getErrorCode() {
        return result.getErrorCode();
      }
      public Builder setErrorCode(int value) {
        result.hasErrorCode = true;
        result.errorCode_ = value;
        return this;
      }
      public Builder clearErrorCode() {
        result.hasErrorCode = false;
        result.errorCode_ = 0;
        return this;
      }
      
      // optional string reason = 2;
      public boolean hasReason() {
        return result.hasReason();
      }
      public java.lang.String getReason() {
        return result.getReason();
      }
      public Builder setReason(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder clearReason() {
        result.hasReason = false;
        result.reason_ = getDefaultInstance().getReason();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.connection.DisconnectNotification)
    }
    
    static {
      defaultInstance = new DisconnectNotification(true);
      bnet.protocol.connection.Connection.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.connection.DisconnectNotification)
  }
  
  public static final class NullRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use NullRequest.newBuilder() to construct.
    private NullRequest() {
      initFields();
    }
    private NullRequest(boolean noInit) {}
    
    private static final NullRequest defaultInstance;
    public static NullRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public NullRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.connection.Connection.internal_static_bnet_protocol_connection_NullRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.connection.Connection.internal_static_bnet_protocol_connection_NullRequest_fieldAccessorTable;
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.connection.Connection.NullRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.connection.Connection.NullRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.connection.Connection.NullRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.connection.Connection.NullRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.connection.Connection.NullRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.connection.Connection.NullRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.connection.Connection.NullRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.connection.Connection.NullRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.connection.Connection.NullRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.connection.Connection.NullRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.connection.Connection.NullRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.connection.Connection.NullRequest result;
      
      // Construct using bnet.protocol.connection.Connection.NullRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.connection.Connection.NullRequest();
        return builder;
      }
      
      protected bnet.protocol.connection.Connection.NullRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.connection.Connection.NullRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.connection.Connection.NullRequest.getDescriptor();
      }
      
      public bnet.protocol.connection.Connection.NullRequest getDefaultInstanceForType() {
        return bnet.protocol.connection.Connection.NullRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.connection.Connection.NullRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.connection.Connection.NullRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.connection.Connection.NullRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.connection.Connection.NullRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.connection.Connection.NullRequest) {
          return mergeFrom((bnet.protocol.connection.Connection.NullRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.connection.Connection.NullRequest other) {
        if (other == bnet.protocol.connection.Connection.NullRequest.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
          }
        }
      }
      
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.connection.NullRequest)
    }
    
    static {
      defaultInstance = new NullRequest(true);
      bnet.protocol.connection.Connection.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.connection.NullRequest)
  }
  
  public static final class EncryptRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use EncryptRequest.newBuilder() to construct.
    private EncryptRequest() {
      initFields();
    }
    private EncryptRequest(boolean noInit) {}
    
    private static final EncryptRequest defaultInstance;
    public static EncryptRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public EncryptRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.connection.Connection.internal_static_bnet_protocol_connection_EncryptRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.connection.Connection.internal_static_bnet_protocol_connection_EncryptRequest_fieldAccessorTable;
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.connection.Connection.EncryptRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.connection.Connection.EncryptRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.connection.Connection.EncryptRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.connection.Connection.EncryptRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.connection.Connection.EncryptRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.connection.Connection.EncryptRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.connection.Connection.EncryptRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.connection.Connection.EncryptRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.connection.Connection.EncryptRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.connection.Connection.EncryptRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.connection.Connection.EncryptRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.connection.Connection.EncryptRequest result;
      
      // Construct using bnet.protocol.connection.Connection.EncryptRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.connection.Connection.EncryptRequest();
        return builder;
      }
      
      protected bnet.protocol.connection.Connection.EncryptRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.connection.Connection.EncryptRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.connection.Connection.EncryptRequest.getDescriptor();
      }
      
      public bnet.protocol.connection.Connection.EncryptRequest getDefaultInstanceForType() {
        return bnet.protocol.connection.Connection.EncryptRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.connection.Connection.EncryptRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.connection.Connection.EncryptRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.connection.Connection.EncryptRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.connection.Connection.EncryptRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.connection.Connection.EncryptRequest) {
          return mergeFrom((bnet.protocol.connection.Connection.EncryptRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.connection.Connection.EncryptRequest other) {
        if (other == bnet.protocol.connection.Connection.EncryptRequest.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
          }
        }
      }
      
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.connection.EncryptRequest)
    }
    
    static {
      defaultInstance = new EncryptRequest(true);
      bnet.protocol.connection.Connection.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.connection.EncryptRequest)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_connection_ConnectRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_connection_ConnectRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_connection_ConnectResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_connection_ConnectResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_connection_BoundService_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_connection_BoundService_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_connection_BindRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_connection_BindRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_connection_BindResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_connection_BindResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_connection_EchoRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_connection_EchoRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_connection_EchoResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_connection_EchoResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_connection_DisconnectRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_connection_DisconnectRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_connection_DisconnectNotification_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_connection_DisconnectNotification_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_connection_NullRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_connection_NullRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_connection_EncryptRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_connection_EncryptRequest_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\030lib/rpc/connection.proto\022\030bnet.protoco" +
      "l.connection\032\021lib/rpc/rpc.proto\"=\n\016Conne" +
      "ctRequest\022+\n\tclient_id\030\001 \001(\0132\030.bnet.prot" +
      "ocol.ProcessId\"k\n\017ConnectResponse\022+\n\tser" +
      "ver_id\030\001 \002(\0132\030.bnet.protocol.ProcessId\022+" +
      "\n\tclient_id\030\002 \001(\0132\030.bnet.protocol.Proces" +
      "sId\"(\n\014BoundService\022\014\n\004hash\030\001 \002(\007\022\n\n\002id\030" +
      "\002 \002(\r\"n\n\013BindRequest\022\035\n\025imported_service" +
      "_hash\030\001 \003(\007\022@\n\020exported_service\030\002 \003(\0132&." +
      "bnet.protocol.connection.BoundService\"+\n",
      "\014BindResponse\022\033\n\023imported_service_id\030\001 \003" +
      "(\r\"B\n\013EchoRequest\022\014\n\004time\030\001 \001(\006\022\024\n\014netwo" +
      "rk_only\030\002 \001(\010\022\017\n\007payload\030\003 \001(\014\"-\n\014EchoRe" +
      "sponse\022\014\n\004time\030\001 \001(\006\022\017\n\007payload\030\002 \001(\014\"\'\n" +
      "\021DisconnectRequest\022\022\n\nerror_code\030\001 \002(\r\"<" +
      "\n\026DisconnectNotification\022\022\n\nerror_code\030\001" +
      " \002(\r\022\016\n\006reason\030\002 \001(\t\"\r\n\013NullRequest\"\020\n\016E" +
      "ncryptRequest"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_bnet_protocol_connection_ConnectRequest_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_bnet_protocol_connection_ConnectRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_connection_ConnectRequest_descriptor,
              new java.lang.String[] { "ClientId", },
              bnet.protocol.connection.Connection.ConnectRequest.class,
              bnet.protocol.connection.Connection.ConnectRequest.Builder.class);
          internal_static_bnet_protocol_connection_ConnectResponse_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_bnet_protocol_connection_ConnectResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_connection_ConnectResponse_descriptor,
              new java.lang.String[] { "ServerId", "ClientId", },
              bnet.protocol.connection.Connection.ConnectResponse.class,
              bnet.protocol.connection.Connection.ConnectResponse.Builder.class);
          internal_static_bnet_protocol_connection_BoundService_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_bnet_protocol_connection_BoundService_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_connection_BoundService_descriptor,
              new java.lang.String[] { "Hash", "Id", },
              bnet.protocol.connection.Connection.BoundService.class,
              bnet.protocol.connection.Connection.BoundService.Builder.class);
          internal_static_bnet_protocol_connection_BindRequest_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_bnet_protocol_connection_BindRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_connection_BindRequest_descriptor,
              new java.lang.String[] { "ImportedServiceHash", "ExportedService", },
              bnet.protocol.connection.Connection.BindRequest.class,
              bnet.protocol.connection.Connection.BindRequest.Builder.class);
          internal_static_bnet_protocol_connection_BindResponse_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_bnet_protocol_connection_BindResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_connection_BindResponse_descriptor,
              new java.lang.String[] { "ImportedServiceId", },
              bnet.protocol.connection.Connection.BindResponse.class,
              bnet.protocol.connection.Connection.BindResponse.Builder.class);
          internal_static_bnet_protocol_connection_EchoRequest_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_bnet_protocol_connection_EchoRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_connection_EchoRequest_descriptor,
              new java.lang.String[] { "Time", "NetworkOnly", "Payload", },
              bnet.protocol.connection.Connection.EchoRequest.class,
              bnet.protocol.connection.Connection.EchoRequest.Builder.class);
          internal_static_bnet_protocol_connection_EchoResponse_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_bnet_protocol_connection_EchoResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_connection_EchoResponse_descriptor,
              new java.lang.String[] { "Time", "Payload", },
              bnet.protocol.connection.Connection.EchoResponse.class,
              bnet.protocol.connection.Connection.EchoResponse.Builder.class);
          internal_static_bnet_protocol_connection_DisconnectRequest_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_bnet_protocol_connection_DisconnectRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_connection_DisconnectRequest_descriptor,
              new java.lang.String[] { "ErrorCode", },
              bnet.protocol.connection.Connection.DisconnectRequest.class,
              bnet.protocol.connection.Connection.DisconnectRequest.Builder.class);
          internal_static_bnet_protocol_connection_DisconnectNotification_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_bnet_protocol_connection_DisconnectNotification_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_connection_DisconnectNotification_descriptor,
              new java.lang.String[] { "ErrorCode", "Reason", },
              bnet.protocol.connection.Connection.DisconnectNotification.class,
              bnet.protocol.connection.Connection.DisconnectNotification.Builder.class);
          internal_static_bnet_protocol_connection_NullRequest_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_bnet_protocol_connection_NullRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_connection_NullRequest_descriptor,
              new java.lang.String[] { },
              bnet.protocol.connection.Connection.NullRequest.class,
              bnet.protocol.connection.Connection.NullRequest.Builder.class);
          internal_static_bnet_protocol_connection_EncryptRequest_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_bnet_protocol_connection_EncryptRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_connection_EncryptRequest_descriptor,
              new java.lang.String[] { },
              bnet.protocol.connection.Connection.EncryptRequest.class,
              bnet.protocol.connection.Connection.EncryptRequest.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          bnet.protocol.Rpc.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
