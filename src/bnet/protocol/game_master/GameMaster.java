// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service/game_master/game_master.proto

package bnet.protocol.game_master;

public final class GameMaster {
  private GameMaster() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class JoinGameRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use JoinGameRequest.newBuilder() to construct.
    private JoinGameRequest() {
      initFields();
    }
    private JoinGameRequest(boolean noInit) {}
    
    private static final JoinGameRequest defaultInstance;
    public static JoinGameRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public JoinGameRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_JoinGameRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_JoinGameRequest_fieldAccessorTable;
    }
    
    // required .bnet.protocol.game_master.GameHandle game_handle = 1;
    public static final int GAME_HANDLE_FIELD_NUMBER = 1;
    private boolean hasGameHandle;
    private bnet.protocol.game_master.GameMasterTypes.GameHandle gameHandle_;
    public boolean hasGameHandle() { return hasGameHandle; }
    public bnet.protocol.game_master.GameMasterTypes.GameHandle getGameHandle() { return gameHandle_; }
    
    // repeated .bnet.protocol.game_master.Player player = 2;
    public static final int PLAYER_FIELD_NUMBER = 2;
    private java.util.List<bnet.protocol.game_master.GameMasterTypes.Player> player_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.game_master.GameMasterTypes.Player> getPlayerList() {
      return player_;
    }
    public int getPlayerCount() { return player_.size(); }
    public bnet.protocol.game_master.GameMasterTypes.Player getPlayer(int index) {
      return player_.get(index);
    }
    
    // optional .bnet.protocol.channel.JoinChannelRequest channel_request = 3;
    public static final int CHANNEL_REQUEST_FIELD_NUMBER = 3;
    private boolean hasChannelRequest;
    private bnet.protocol.channel.ChannelTypes.JoinChannelRequest channelRequest_;
    public boolean hasChannelRequest() { return hasChannelRequest; }
    public bnet.protocol.channel.ChannelTypes.JoinChannelRequest getChannelRequest() { return channelRequest_; }
    
    private void initFields() {
      gameHandle_ = bnet.protocol.game_master.GameMasterTypes.GameHandle.getDefaultInstance();
      channelRequest_ = bnet.protocol.channel.ChannelTypes.JoinChannelRequest.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasGameHandle) return false;
      if (!getGameHandle().isInitialized()) return false;
      for (bnet.protocol.game_master.GameMasterTypes.Player element : getPlayerList()) {
        if (!element.isInitialized()) return false;
      }
      if (hasChannelRequest()) {
        if (!getChannelRequest().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasGameHandle()) {
        output.writeMessage(1, getGameHandle());
      }
      for (bnet.protocol.game_master.GameMasterTypes.Player element : getPlayerList()) {
        output.writeMessage(2, element);
      }
      if (hasChannelRequest()) {
        output.writeMessage(3, getChannelRequest());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasGameHandle()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getGameHandle());
      }
      for (bnet.protocol.game_master.GameMasterTypes.Player element : getPlayerList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      if (hasChannelRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getChannelRequest());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.game_master.GameMaster.JoinGameRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.JoinGameRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.JoinGameRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.JoinGameRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.JoinGameRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.JoinGameRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.JoinGameRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.JoinGameRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.JoinGameRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.JoinGameRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.game_master.GameMaster.JoinGameRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.game_master.GameMaster.JoinGameRequest result;
      
      // Construct using bnet.protocol.game_master.GameMaster.JoinGameRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.game_master.GameMaster.JoinGameRequest();
        return builder;
      }
      
      protected bnet.protocol.game_master.GameMaster.JoinGameRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.game_master.GameMaster.JoinGameRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.game_master.GameMaster.JoinGameRequest.getDescriptor();
      }
      
      public bnet.protocol.game_master.GameMaster.JoinGameRequest getDefaultInstanceForType() {
        return bnet.protocol.game_master.GameMaster.JoinGameRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.game_master.GameMaster.JoinGameRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.game_master.GameMaster.JoinGameRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.game_master.GameMaster.JoinGameRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.player_ != java.util.Collections.EMPTY_LIST) {
          result.player_ =
            java.util.Collections.unmodifiableList(result.player_);
        }
        bnet.protocol.game_master.GameMaster.JoinGameRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.game_master.GameMaster.JoinGameRequest) {
          return mergeFrom((bnet.protocol.game_master.GameMaster.JoinGameRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.game_master.GameMaster.JoinGameRequest other) {
        if (other == bnet.protocol.game_master.GameMaster.JoinGameRequest.getDefaultInstance()) return this;
        if (other.hasGameHandle()) {
          mergeGameHandle(other.getGameHandle());
        }
        if (!other.player_.isEmpty()) {
          if (result.player_.isEmpty()) {
            result.player_ = new java.util.ArrayList<bnet.protocol.game_master.GameMasterTypes.Player>();
          }
          result.player_.addAll(other.player_);
        }
        if (other.hasChannelRequest()) {
          mergeChannelRequest(other.getChannelRequest());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.game_master.GameMasterTypes.GameHandle.Builder subBuilder = bnet.protocol.game_master.GameMasterTypes.GameHandle.newBuilder();
              if (hasGameHandle()) {
                subBuilder.mergeFrom(getGameHandle());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGameHandle(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bnet.protocol.game_master.GameMasterTypes.Player.Builder subBuilder = bnet.protocol.game_master.GameMasterTypes.Player.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addPlayer(subBuilder.buildPartial());
              break;
            }
            case 26: {
              bnet.protocol.channel.ChannelTypes.JoinChannelRequest.Builder subBuilder = bnet.protocol.channel.ChannelTypes.JoinChannelRequest.newBuilder();
              if (hasChannelRequest()) {
                subBuilder.mergeFrom(getChannelRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setChannelRequest(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .bnet.protocol.game_master.GameHandle game_handle = 1;
      public boolean hasGameHandle() {
        return result.hasGameHandle();
      }
      public bnet.protocol.game_master.GameMasterTypes.GameHandle getGameHandle() {
        return result.getGameHandle();
      }
      public Builder setGameHandle(bnet.protocol.game_master.GameMasterTypes.GameHandle value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasGameHandle = true;
        result.gameHandle_ = value;
        return this;
      }
      public Builder setGameHandle(bnet.protocol.game_master.GameMasterTypes.GameHandle.Builder builderForValue) {
        result.hasGameHandle = true;
        result.gameHandle_ = builderForValue.build();
        return this;
      }
      public Builder mergeGameHandle(bnet.protocol.game_master.GameMasterTypes.GameHandle value) {
        if (result.hasGameHandle() &&
            result.gameHandle_ != bnet.protocol.game_master.GameMasterTypes.GameHandle.getDefaultInstance()) {
          result.gameHandle_ =
            bnet.protocol.game_master.GameMasterTypes.GameHandle.newBuilder(result.gameHandle_).mergeFrom(value).buildPartial();
        } else {
          result.gameHandle_ = value;
        }
        result.hasGameHandle = true;
        return this;
      }
      public Builder clearGameHandle() {
        result.hasGameHandle = false;
        result.gameHandle_ = bnet.protocol.game_master.GameMasterTypes.GameHandle.getDefaultInstance();
        return this;
      }
      
      // repeated .bnet.protocol.game_master.Player player = 2;
      public java.util.List<bnet.protocol.game_master.GameMasterTypes.Player> getPlayerList() {
        return java.util.Collections.unmodifiableList(result.player_);
      }
      public int getPlayerCount() {
        return result.getPlayerCount();
      }
      public bnet.protocol.game_master.GameMasterTypes.Player getPlayer(int index) {
        return result.getPlayer(index);
      }
      public Builder setPlayer(int index, bnet.protocol.game_master.GameMasterTypes.Player value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.player_.set(index, value);
        return this;
      }
      public Builder setPlayer(int index, bnet.protocol.game_master.GameMasterTypes.Player.Builder builderForValue) {
        result.player_.set(index, builderForValue.build());
        return this;
      }
      public Builder addPlayer(bnet.protocol.game_master.GameMasterTypes.Player value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.player_.isEmpty()) {
          result.player_ = new java.util.ArrayList<bnet.protocol.game_master.GameMasterTypes.Player>();
        }
        result.player_.add(value);
        return this;
      }
      public Builder addPlayer(bnet.protocol.game_master.GameMasterTypes.Player.Builder builderForValue) {
        if (result.player_.isEmpty()) {
          result.player_ = new java.util.ArrayList<bnet.protocol.game_master.GameMasterTypes.Player>();
        }
        result.player_.add(builderForValue.build());
        return this;
      }
      public Builder addAllPlayer(
          java.lang.Iterable<? extends bnet.protocol.game_master.GameMasterTypes.Player> values) {
        if (result.player_.isEmpty()) {
          result.player_ = new java.util.ArrayList<bnet.protocol.game_master.GameMasterTypes.Player>();
        }
        super.addAll(values, result.player_);
        return this;
      }
      public Builder clearPlayer() {
        result.player_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional .bnet.protocol.channel.JoinChannelRequest channel_request = 3;
      public boolean hasChannelRequest() {
        return result.hasChannelRequest();
      }
      public bnet.protocol.channel.ChannelTypes.JoinChannelRequest getChannelRequest() {
        return result.getChannelRequest();
      }
      public Builder setChannelRequest(bnet.protocol.channel.ChannelTypes.JoinChannelRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasChannelRequest = true;
        result.channelRequest_ = value;
        return this;
      }
      public Builder setChannelRequest(bnet.protocol.channel.ChannelTypes.JoinChannelRequest.Builder builderForValue) {
        result.hasChannelRequest = true;
        result.channelRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeChannelRequest(bnet.protocol.channel.ChannelTypes.JoinChannelRequest value) {
        if (result.hasChannelRequest() &&
            result.channelRequest_ != bnet.protocol.channel.ChannelTypes.JoinChannelRequest.getDefaultInstance()) {
          result.channelRequest_ =
            bnet.protocol.channel.ChannelTypes.JoinChannelRequest.newBuilder(result.channelRequest_).mergeFrom(value).buildPartial();
        } else {
          result.channelRequest_ = value;
        }
        result.hasChannelRequest = true;
        return this;
      }
      public Builder clearChannelRequest() {
        result.hasChannelRequest = false;
        result.channelRequest_ = bnet.protocol.channel.ChannelTypes.JoinChannelRequest.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.game_master.JoinGameRequest)
    }
    
    static {
      defaultInstance = new JoinGameRequest(true);
      bnet.protocol.game_master.GameMaster.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.JoinGameRequest)
  }
  
  public static final class JoinGameResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use JoinGameResponse.newBuilder() to construct.
    private JoinGameResponse() {
      initFields();
    }
    private JoinGameResponse(boolean noInit) {}
    
    private static final JoinGameResponse defaultInstance;
    public static JoinGameResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public JoinGameResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_JoinGameResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_JoinGameResponse_fieldAccessorTable;
    }
    
    // repeated .bnet.protocol.game_master.ConnectInfo connect_info = 1;
    public static final int CONNECT_INFO_FIELD_NUMBER = 1;
    private java.util.List<bnet.protocol.game_master.GameMasterTypes.ConnectInfo> connectInfo_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.game_master.GameMasterTypes.ConnectInfo> getConnectInfoList() {
      return connectInfo_;
    }
    public int getConnectInfoCount() { return connectInfo_.size(); }
    public bnet.protocol.game_master.GameMasterTypes.ConnectInfo getConnectInfo(int index) {
      return connectInfo_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (bnet.protocol.game_master.GameMasterTypes.ConnectInfo element : getConnectInfoList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (bnet.protocol.game_master.GameMasterTypes.ConnectInfo element : getConnectInfoList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (bnet.protocol.game_master.GameMasterTypes.ConnectInfo element : getConnectInfoList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.game_master.GameMaster.JoinGameResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.JoinGameResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.JoinGameResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.JoinGameResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.JoinGameResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.JoinGameResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.JoinGameResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.JoinGameResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.JoinGameResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.JoinGameResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.game_master.GameMaster.JoinGameResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.game_master.GameMaster.JoinGameResponse result;
      
      // Construct using bnet.protocol.game_master.GameMaster.JoinGameResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.game_master.GameMaster.JoinGameResponse();
        return builder;
      }
      
      protected bnet.protocol.game_master.GameMaster.JoinGameResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.game_master.GameMaster.JoinGameResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.game_master.GameMaster.JoinGameResponse.getDescriptor();
      }
      
      public bnet.protocol.game_master.GameMaster.JoinGameResponse getDefaultInstanceForType() {
        return bnet.protocol.game_master.GameMaster.JoinGameResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.game_master.GameMaster.JoinGameResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.game_master.GameMaster.JoinGameResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.game_master.GameMaster.JoinGameResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.connectInfo_ != java.util.Collections.EMPTY_LIST) {
          result.connectInfo_ =
            java.util.Collections.unmodifiableList(result.connectInfo_);
        }
        bnet.protocol.game_master.GameMaster.JoinGameResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.game_master.GameMaster.JoinGameResponse) {
          return mergeFrom((bnet.protocol.game_master.GameMaster.JoinGameResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.game_master.GameMaster.JoinGameResponse other) {
        if (other == bnet.protocol.game_master.GameMaster.JoinGameResponse.getDefaultInstance()) return this;
        if (!other.connectInfo_.isEmpty()) {
          if (result.connectInfo_.isEmpty()) {
            result.connectInfo_ = new java.util.ArrayList<bnet.protocol.game_master.GameMasterTypes.ConnectInfo>();
          }
          result.connectInfo_.addAll(other.connectInfo_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.game_master.GameMasterTypes.ConnectInfo.Builder subBuilder = bnet.protocol.game_master.GameMasterTypes.ConnectInfo.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addConnectInfo(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .bnet.protocol.game_master.ConnectInfo connect_info = 1;
      public java.util.List<bnet.protocol.game_master.GameMasterTypes.ConnectInfo> getConnectInfoList() {
        return java.util.Collections.unmodifiableList(result.connectInfo_);
      }
      public int getConnectInfoCount() {
        return result.getConnectInfoCount();
      }
      public bnet.protocol.game_master.GameMasterTypes.ConnectInfo getConnectInfo(int index) {
        return result.getConnectInfo(index);
      }
      public Builder setConnectInfo(int index, bnet.protocol.game_master.GameMasterTypes.ConnectInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.connectInfo_.set(index, value);
        return this;
      }
      public Builder setConnectInfo(int index, bnet.protocol.game_master.GameMasterTypes.ConnectInfo.Builder builderForValue) {
        result.connectInfo_.set(index, builderForValue.build());
        return this;
      }
      public Builder addConnectInfo(bnet.protocol.game_master.GameMasterTypes.ConnectInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.connectInfo_.isEmpty()) {
          result.connectInfo_ = new java.util.ArrayList<bnet.protocol.game_master.GameMasterTypes.ConnectInfo>();
        }
        result.connectInfo_.add(value);
        return this;
      }
      public Builder addConnectInfo(bnet.protocol.game_master.GameMasterTypes.ConnectInfo.Builder builderForValue) {
        if (result.connectInfo_.isEmpty()) {
          result.connectInfo_ = new java.util.ArrayList<bnet.protocol.game_master.GameMasterTypes.ConnectInfo>();
        }
        result.connectInfo_.add(builderForValue.build());
        return this;
      }
      public Builder addAllConnectInfo(
          java.lang.Iterable<? extends bnet.protocol.game_master.GameMasterTypes.ConnectInfo> values) {
        if (result.connectInfo_.isEmpty()) {
          result.connectInfo_ = new java.util.ArrayList<bnet.protocol.game_master.GameMasterTypes.ConnectInfo>();
        }
        super.addAll(values, result.connectInfo_);
        return this;
      }
      public Builder clearConnectInfo() {
        result.connectInfo_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.game_master.JoinGameResponse)
    }
    
    static {
      defaultInstance = new JoinGameResponse(true);
      bnet.protocol.game_master.GameMaster.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.JoinGameResponse)
  }
  
  public static final class ListFactoriesRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use ListFactoriesRequest.newBuilder() to construct.
    private ListFactoriesRequest() {
      initFields();
    }
    private ListFactoriesRequest(boolean noInit) {}
    
    private static final ListFactoriesRequest defaultInstance;
    public static ListFactoriesRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public ListFactoriesRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_ListFactoriesRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_ListFactoriesRequest_fieldAccessorTable;
    }
    
    // required .bnet.protocol.attribute.AttributeFilter filter = 1;
    public static final int FILTER_FIELD_NUMBER = 1;
    private boolean hasFilter;
    private bnet.protocol.attribute.AttributeProto.AttributeFilter filter_;
    public boolean hasFilter() { return hasFilter; }
    public bnet.protocol.attribute.AttributeProto.AttributeFilter getFilter() { return filter_; }
    
    // optional uint32 start_index = 2;
    public static final int START_INDEX_FIELD_NUMBER = 2;
    private boolean hasStartIndex;
    private int startIndex_ = 0;
    public boolean hasStartIndex() { return hasStartIndex; }
    public int getStartIndex() { return startIndex_; }
    
    // optional uint32 max_results = 3;
    public static final int MAX_RESULTS_FIELD_NUMBER = 3;
    private boolean hasMaxResults;
    private int maxResults_ = 0;
    public boolean hasMaxResults() { return hasMaxResults; }
    public int getMaxResults() { return maxResults_; }
    
    private void initFields() {
      filter_ = bnet.protocol.attribute.AttributeProto.AttributeFilter.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasFilter) return false;
      if (!getFilter().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasFilter()) {
        output.writeMessage(1, getFilter());
      }
      if (hasStartIndex()) {
        output.writeUInt32(2, getStartIndex());
      }
      if (hasMaxResults()) {
        output.writeUInt32(3, getMaxResults());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasFilter()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getFilter());
      }
      if (hasStartIndex()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getStartIndex());
      }
      if (hasMaxResults()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, getMaxResults());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.game_master.GameMaster.ListFactoriesRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.ListFactoriesRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.ListFactoriesRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.ListFactoriesRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.ListFactoriesRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.ListFactoriesRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.ListFactoriesRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.ListFactoriesRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.ListFactoriesRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.ListFactoriesRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.game_master.GameMaster.ListFactoriesRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.game_master.GameMaster.ListFactoriesRequest result;
      
      // Construct using bnet.protocol.game_master.GameMaster.ListFactoriesRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.game_master.GameMaster.ListFactoriesRequest();
        return builder;
      }
      
      protected bnet.protocol.game_master.GameMaster.ListFactoriesRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.game_master.GameMaster.ListFactoriesRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.game_master.GameMaster.ListFactoriesRequest.getDescriptor();
      }
      
      public bnet.protocol.game_master.GameMaster.ListFactoriesRequest getDefaultInstanceForType() {
        return bnet.protocol.game_master.GameMaster.ListFactoriesRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.game_master.GameMaster.ListFactoriesRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.game_master.GameMaster.ListFactoriesRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.game_master.GameMaster.ListFactoriesRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.game_master.GameMaster.ListFactoriesRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.game_master.GameMaster.ListFactoriesRequest) {
          return mergeFrom((bnet.protocol.game_master.GameMaster.ListFactoriesRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.game_master.GameMaster.ListFactoriesRequest other) {
        if (other == bnet.protocol.game_master.GameMaster.ListFactoriesRequest.getDefaultInstance()) return this;
        if (other.hasFilter()) {
          mergeFilter(other.getFilter());
        }
        if (other.hasStartIndex()) {
          setStartIndex(other.getStartIndex());
        }
        if (other.hasMaxResults()) {
          setMaxResults(other.getMaxResults());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.attribute.AttributeProto.AttributeFilter.Builder subBuilder = bnet.protocol.attribute.AttributeProto.AttributeFilter.newBuilder();
              if (hasFilter()) {
                subBuilder.mergeFrom(getFilter());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFilter(subBuilder.buildPartial());
              break;
            }
            case 16: {
              setStartIndex(input.readUInt32());
              break;
            }
            case 24: {
              setMaxResults(input.readUInt32());
              break;
            }
          }
        }
      }
      
      
      // required .bnet.protocol.attribute.AttributeFilter filter = 1;
      public boolean hasFilter() {
        return result.hasFilter();
      }
      public bnet.protocol.attribute.AttributeProto.AttributeFilter getFilter() {
        return result.getFilter();
      }
      public Builder setFilter(bnet.protocol.attribute.AttributeProto.AttributeFilter value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFilter = true;
        result.filter_ = value;
        return this;
      }
      public Builder setFilter(bnet.protocol.attribute.AttributeProto.AttributeFilter.Builder builderForValue) {
        result.hasFilter = true;
        result.filter_ = builderForValue.build();
        return this;
      }
      public Builder mergeFilter(bnet.protocol.attribute.AttributeProto.AttributeFilter value) {
        if (result.hasFilter() &&
            result.filter_ != bnet.protocol.attribute.AttributeProto.AttributeFilter.getDefaultInstance()) {
          result.filter_ =
            bnet.protocol.attribute.AttributeProto.AttributeFilter.newBuilder(result.filter_).mergeFrom(value).buildPartial();
        } else {
          result.filter_ = value;
        }
        result.hasFilter = true;
        return this;
      }
      public Builder clearFilter() {
        result.hasFilter = false;
        result.filter_ = bnet.protocol.attribute.AttributeProto.AttributeFilter.getDefaultInstance();
        return this;
      }
      
      // optional uint32 start_index = 2;
      public boolean hasStartIndex() {
        return result.hasStartIndex();
      }
      public int getStartIndex() {
        return result.getStartIndex();
      }
      public Builder setStartIndex(int value) {
        result.hasStartIndex = true;
        result.startIndex_ = value;
        return this;
      }
      public Builder clearStartIndex() {
        result.hasStartIndex = false;
        result.startIndex_ = 0;
        return this;
      }
      
      // optional uint32 max_results = 3;
      public boolean hasMaxResults() {
        return result.hasMaxResults();
      }
      public int getMaxResults() {
        return result.getMaxResults();
      }
      public Builder setMaxResults(int value) {
        result.hasMaxResults = true;
        result.maxResults_ = value;
        return this;
      }
      public Builder clearMaxResults() {
        result.hasMaxResults = false;
        result.maxResults_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.game_master.ListFactoriesRequest)
    }
    
    static {
      defaultInstance = new ListFactoriesRequest(true);
      bnet.protocol.game_master.GameMaster.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.ListFactoriesRequest)
  }
  
  public static final class ListFactoriesResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use ListFactoriesResponse.newBuilder() to construct.
    private ListFactoriesResponse() {
      initFields();
    }
    private ListFactoriesResponse(boolean noInit) {}
    
    private static final ListFactoriesResponse defaultInstance;
    public static ListFactoriesResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public ListFactoriesResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_ListFactoriesResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_ListFactoriesResponse_fieldAccessorTable;
    }
    
    // repeated .bnet.protocol.game_master.GameFactoryDescription description = 1;
    public static final int DESCRIPTION_FIELD_NUMBER = 1;
    private java.util.List<bnet.protocol.game_master.GameMasterTypes.GameFactoryDescription> description_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.game_master.GameMasterTypes.GameFactoryDescription> getDescriptionList() {
      return description_;
    }
    public int getDescriptionCount() { return description_.size(); }
    public bnet.protocol.game_master.GameMasterTypes.GameFactoryDescription getDescription(int index) {
      return description_.get(index);
    }
    
    // optional uint32 total_results = 2;
    public static final int TOTAL_RESULTS_FIELD_NUMBER = 2;
    private boolean hasTotalResults;
    private int totalResults_ = 0;
    public boolean hasTotalResults() { return hasTotalResults; }
    public int getTotalResults() { return totalResults_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (bnet.protocol.game_master.GameMasterTypes.GameFactoryDescription element : getDescriptionList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (bnet.protocol.game_master.GameMasterTypes.GameFactoryDescription element : getDescriptionList()) {
        output.writeMessage(1, element);
      }
      if (hasTotalResults()) {
        output.writeUInt32(2, getTotalResults());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (bnet.protocol.game_master.GameMasterTypes.GameFactoryDescription element : getDescriptionList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      if (hasTotalResults()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getTotalResults());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.game_master.GameMaster.ListFactoriesResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.ListFactoriesResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.ListFactoriesResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.ListFactoriesResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.ListFactoriesResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.ListFactoriesResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.ListFactoriesResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.ListFactoriesResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.ListFactoriesResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.ListFactoriesResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.game_master.GameMaster.ListFactoriesResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.game_master.GameMaster.ListFactoriesResponse result;
      
      // Construct using bnet.protocol.game_master.GameMaster.ListFactoriesResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.game_master.GameMaster.ListFactoriesResponse();
        return builder;
      }
      
      protected bnet.protocol.game_master.GameMaster.ListFactoriesResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.game_master.GameMaster.ListFactoriesResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.game_master.GameMaster.ListFactoriesResponse.getDescriptor();
      }
      
      public bnet.protocol.game_master.GameMaster.ListFactoriesResponse getDefaultInstanceForType() {
        return bnet.protocol.game_master.GameMaster.ListFactoriesResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.game_master.GameMaster.ListFactoriesResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.game_master.GameMaster.ListFactoriesResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.game_master.GameMaster.ListFactoriesResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.description_ != java.util.Collections.EMPTY_LIST) {
          result.description_ =
            java.util.Collections.unmodifiableList(result.description_);
        }
        bnet.protocol.game_master.GameMaster.ListFactoriesResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.game_master.GameMaster.ListFactoriesResponse) {
          return mergeFrom((bnet.protocol.game_master.GameMaster.ListFactoriesResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.game_master.GameMaster.ListFactoriesResponse other) {
        if (other == bnet.protocol.game_master.GameMaster.ListFactoriesResponse.getDefaultInstance()) return this;
        if (!other.description_.isEmpty()) {
          if (result.description_.isEmpty()) {
            result.description_ = new java.util.ArrayList<bnet.protocol.game_master.GameMasterTypes.GameFactoryDescription>();
          }
          result.description_.addAll(other.description_);
        }
        if (other.hasTotalResults()) {
          setTotalResults(other.getTotalResults());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.game_master.GameMasterTypes.GameFactoryDescription.Builder subBuilder = bnet.protocol.game_master.GameMasterTypes.GameFactoryDescription.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addDescription(subBuilder.buildPartial());
              break;
            }
            case 16: {
              setTotalResults(input.readUInt32());
              break;
            }
          }
        }
      }
      
      
      // repeated .bnet.protocol.game_master.GameFactoryDescription description = 1;
      public java.util.List<bnet.protocol.game_master.GameMasterTypes.GameFactoryDescription> getDescriptionList() {
        return java.util.Collections.unmodifiableList(result.description_);
      }
      public int getDescriptionCount() {
        return result.getDescriptionCount();
      }
      public bnet.protocol.game_master.GameMasterTypes.GameFactoryDescription getDescription(int index) {
        return result.getDescription(index);
      }
      public Builder setDescription(int index, bnet.protocol.game_master.GameMasterTypes.GameFactoryDescription value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.description_.set(index, value);
        return this;
      }
      public Builder setDescription(int index, bnet.protocol.game_master.GameMasterTypes.GameFactoryDescription.Builder builderForValue) {
        result.description_.set(index, builderForValue.build());
        return this;
      }
      public Builder addDescription(bnet.protocol.game_master.GameMasterTypes.GameFactoryDescription value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.description_.isEmpty()) {
          result.description_ = new java.util.ArrayList<bnet.protocol.game_master.GameMasterTypes.GameFactoryDescription>();
        }
        result.description_.add(value);
        return this;
      }
      public Builder addDescription(bnet.protocol.game_master.GameMasterTypes.GameFactoryDescription.Builder builderForValue) {
        if (result.description_.isEmpty()) {
          result.description_ = new java.util.ArrayList<bnet.protocol.game_master.GameMasterTypes.GameFactoryDescription>();
        }
        result.description_.add(builderForValue.build());
        return this;
      }
      public Builder addAllDescription(
          java.lang.Iterable<? extends bnet.protocol.game_master.GameMasterTypes.GameFactoryDescription> values) {
        if (result.description_.isEmpty()) {
          result.description_ = new java.util.ArrayList<bnet.protocol.game_master.GameMasterTypes.GameFactoryDescription>();
        }
        super.addAll(values, result.description_);
        return this;
      }
      public Builder clearDescription() {
        result.description_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional uint32 total_results = 2;
      public boolean hasTotalResults() {
        return result.hasTotalResults();
      }
      public int getTotalResults() {
        return result.getTotalResults();
      }
      public Builder setTotalResults(int value) {
        result.hasTotalResults = true;
        result.totalResults_ = value;
        return this;
      }
      public Builder clearTotalResults() {
        result.hasTotalResults = false;
        result.totalResults_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.game_master.ListFactoriesResponse)
    }
    
    static {
      defaultInstance = new ListFactoriesResponse(true);
      bnet.protocol.game_master.GameMaster.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.ListFactoriesResponse)
  }
  
  public static final class FindGameRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use FindGameRequest.newBuilder() to construct.
    private FindGameRequest() {
      initFields();
    }
    private FindGameRequest(boolean noInit) {}
    
    private static final FindGameRequest defaultInstance;
    public static FindGameRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public FindGameRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_FindGameRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_FindGameRequest_fieldAccessorTable;
    }
    
    // repeated .bnet.protocol.game_master.Player player = 1;
    public static final int PLAYER_FIELD_NUMBER = 1;
    private java.util.List<bnet.protocol.game_master.GameMasterTypes.Player> player_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.game_master.GameMasterTypes.Player> getPlayerList() {
      return player_;
    }
    public int getPlayerCount() { return player_.size(); }
    public bnet.protocol.game_master.GameMasterTypes.Player getPlayer(int index) {
      return player_.get(index);
    }
    
    // optional fixed64 factory_id = 2;
    public static final int FACTORY_ID_FIELD_NUMBER = 2;
    private boolean hasFactoryId;
    private long factoryId_ = 0L;
    public boolean hasFactoryId() { return hasFactoryId; }
    public long getFactoryId() { return factoryId_; }
    
    // optional .bnet.protocol.game_master.GameProperties properties = 3;
    public static final int PROPERTIES_FIELD_NUMBER = 3;
    private boolean hasProperties;
    private bnet.protocol.game_master.GameFactory.GameProperties properties_;
    public boolean hasProperties() { return hasProperties; }
    public bnet.protocol.game_master.GameFactory.GameProperties getProperties() { return properties_; }
    
    // required uint64 object_id = 4;
    public static final int OBJECT_ID_FIELD_NUMBER = 4;
    private boolean hasObjectId;
    private long objectId_ = 0L;
    public boolean hasObjectId() { return hasObjectId; }
    public long getObjectId() { return objectId_; }
    
    // optional .bnet.protocol.channel.CreateChannelRequest channel_request = 5;
    public static final int CHANNEL_REQUEST_FIELD_NUMBER = 5;
    private boolean hasChannelRequest;
    private bnet.protocol.channel.ChannelTypes.CreateChannelRequest channelRequest_;
    public boolean hasChannelRequest() { return hasChannelRequest; }
    public bnet.protocol.channel.ChannelTypes.CreateChannelRequest getChannelRequest() { return channelRequest_; }
    
    private void initFields() {
      properties_ = bnet.protocol.game_master.GameFactory.GameProperties.getDefaultInstance();
      channelRequest_ = bnet.protocol.channel.ChannelTypes.CreateChannelRequest.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasObjectId) return false;
      for (bnet.protocol.game_master.GameMasterTypes.Player element : getPlayerList()) {
        if (!element.isInitialized()) return false;
      }
      if (hasProperties()) {
        if (!getProperties().isInitialized()) return false;
      }
      if (hasChannelRequest()) {
        if (!getChannelRequest().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (bnet.protocol.game_master.GameMasterTypes.Player element : getPlayerList()) {
        output.writeMessage(1, element);
      }
      if (hasFactoryId()) {
        output.writeFixed64(2, getFactoryId());
      }
      if (hasProperties()) {
        output.writeMessage(3, getProperties());
      }
      if (hasObjectId()) {
        output.writeUInt64(4, getObjectId());
      }
      if (hasChannelRequest()) {
        output.writeMessage(5, getChannelRequest());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (bnet.protocol.game_master.GameMasterTypes.Player element : getPlayerList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      if (hasFactoryId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, getFactoryId());
      }
      if (hasProperties()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getProperties());
      }
      if (hasObjectId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, getObjectId());
      }
      if (hasChannelRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getChannelRequest());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.game_master.GameMaster.FindGameRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.FindGameRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.FindGameRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.FindGameRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.FindGameRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.FindGameRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.FindGameRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.FindGameRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.FindGameRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.FindGameRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.game_master.GameMaster.FindGameRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.game_master.GameMaster.FindGameRequest result;
      
      // Construct using bnet.protocol.game_master.GameMaster.FindGameRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.game_master.GameMaster.FindGameRequest();
        return builder;
      }
      
      protected bnet.protocol.game_master.GameMaster.FindGameRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.game_master.GameMaster.FindGameRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.game_master.GameMaster.FindGameRequest.getDescriptor();
      }
      
      public bnet.protocol.game_master.GameMaster.FindGameRequest getDefaultInstanceForType() {
        return bnet.protocol.game_master.GameMaster.FindGameRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.game_master.GameMaster.FindGameRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.game_master.GameMaster.FindGameRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.game_master.GameMaster.FindGameRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.player_ != java.util.Collections.EMPTY_LIST) {
          result.player_ =
            java.util.Collections.unmodifiableList(result.player_);
        }
        bnet.protocol.game_master.GameMaster.FindGameRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.game_master.GameMaster.FindGameRequest) {
          return mergeFrom((bnet.protocol.game_master.GameMaster.FindGameRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.game_master.GameMaster.FindGameRequest other) {
        if (other == bnet.protocol.game_master.GameMaster.FindGameRequest.getDefaultInstance()) return this;
        if (!other.player_.isEmpty()) {
          if (result.player_.isEmpty()) {
            result.player_ = new java.util.ArrayList<bnet.protocol.game_master.GameMasterTypes.Player>();
          }
          result.player_.addAll(other.player_);
        }
        if (other.hasFactoryId()) {
          setFactoryId(other.getFactoryId());
        }
        if (other.hasProperties()) {
          mergeProperties(other.getProperties());
        }
        if (other.hasObjectId()) {
          setObjectId(other.getObjectId());
        }
        if (other.hasChannelRequest()) {
          mergeChannelRequest(other.getChannelRequest());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.game_master.GameMasterTypes.Player.Builder subBuilder = bnet.protocol.game_master.GameMasterTypes.Player.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addPlayer(subBuilder.buildPartial());
              break;
            }
            case 17: {
              setFactoryId(input.readFixed64());
              break;
            }
            case 26: {
              bnet.protocol.game_master.GameFactory.GameProperties.Builder subBuilder = bnet.protocol.game_master.GameFactory.GameProperties.newBuilder();
              if (hasProperties()) {
                subBuilder.mergeFrom(getProperties());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setProperties(subBuilder.buildPartial());
              break;
            }
            case 32: {
              setObjectId(input.readUInt64());
              break;
            }
            case 42: {
              bnet.protocol.channel.ChannelTypes.CreateChannelRequest.Builder subBuilder = bnet.protocol.channel.ChannelTypes.CreateChannelRequest.newBuilder();
              if (hasChannelRequest()) {
                subBuilder.mergeFrom(getChannelRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setChannelRequest(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .bnet.protocol.game_master.Player player = 1;
      public java.util.List<bnet.protocol.game_master.GameMasterTypes.Player> getPlayerList() {
        return java.util.Collections.unmodifiableList(result.player_);
      }
      public int getPlayerCount() {
        return result.getPlayerCount();
      }
      public bnet.protocol.game_master.GameMasterTypes.Player getPlayer(int index) {
        return result.getPlayer(index);
      }
      public Builder setPlayer(int index, bnet.protocol.game_master.GameMasterTypes.Player value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.player_.set(index, value);
        return this;
      }
      public Builder setPlayer(int index, bnet.protocol.game_master.GameMasterTypes.Player.Builder builderForValue) {
        result.player_.set(index, builderForValue.build());
        return this;
      }
      public Builder addPlayer(bnet.protocol.game_master.GameMasterTypes.Player value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.player_.isEmpty()) {
          result.player_ = new java.util.ArrayList<bnet.protocol.game_master.GameMasterTypes.Player>();
        }
        result.player_.add(value);
        return this;
      }
      public Builder addPlayer(bnet.protocol.game_master.GameMasterTypes.Player.Builder builderForValue) {
        if (result.player_.isEmpty()) {
          result.player_ = new java.util.ArrayList<bnet.protocol.game_master.GameMasterTypes.Player>();
        }
        result.player_.add(builderForValue.build());
        return this;
      }
      public Builder addAllPlayer(
          java.lang.Iterable<? extends bnet.protocol.game_master.GameMasterTypes.Player> values) {
        if (result.player_.isEmpty()) {
          result.player_ = new java.util.ArrayList<bnet.protocol.game_master.GameMasterTypes.Player>();
        }
        super.addAll(values, result.player_);
        return this;
      }
      public Builder clearPlayer() {
        result.player_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional fixed64 factory_id = 2;
      public boolean hasFactoryId() {
        return result.hasFactoryId();
      }
      public long getFactoryId() {
        return result.getFactoryId();
      }
      public Builder setFactoryId(long value) {
        result.hasFactoryId = true;
        result.factoryId_ = value;
        return this;
      }
      public Builder clearFactoryId() {
        result.hasFactoryId = false;
        result.factoryId_ = 0L;
        return this;
      }
      
      // optional .bnet.protocol.game_master.GameProperties properties = 3;
      public boolean hasProperties() {
        return result.hasProperties();
      }
      public bnet.protocol.game_master.GameFactory.GameProperties getProperties() {
        return result.getProperties();
      }
      public Builder setProperties(bnet.protocol.game_master.GameFactory.GameProperties value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasProperties = true;
        result.properties_ = value;
        return this;
      }
      public Builder setProperties(bnet.protocol.game_master.GameFactory.GameProperties.Builder builderForValue) {
        result.hasProperties = true;
        result.properties_ = builderForValue.build();
        return this;
      }
      public Builder mergeProperties(bnet.protocol.game_master.GameFactory.GameProperties value) {
        if (result.hasProperties() &&
            result.properties_ != bnet.protocol.game_master.GameFactory.GameProperties.getDefaultInstance()) {
          result.properties_ =
            bnet.protocol.game_master.GameFactory.GameProperties.newBuilder(result.properties_).mergeFrom(value).buildPartial();
        } else {
          result.properties_ = value;
        }
        result.hasProperties = true;
        return this;
      }
      public Builder clearProperties() {
        result.hasProperties = false;
        result.properties_ = bnet.protocol.game_master.GameFactory.GameProperties.getDefaultInstance();
        return this;
      }
      
      // required uint64 object_id = 4;
      public boolean hasObjectId() {
        return result.hasObjectId();
      }
      public long getObjectId() {
        return result.getObjectId();
      }
      public Builder setObjectId(long value) {
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder clearObjectId() {
        result.hasObjectId = false;
        result.objectId_ = 0L;
        return this;
      }
      
      // optional .bnet.protocol.channel.CreateChannelRequest channel_request = 5;
      public boolean hasChannelRequest() {
        return result.hasChannelRequest();
      }
      public bnet.protocol.channel.ChannelTypes.CreateChannelRequest getChannelRequest() {
        return result.getChannelRequest();
      }
      public Builder setChannelRequest(bnet.protocol.channel.ChannelTypes.CreateChannelRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasChannelRequest = true;
        result.channelRequest_ = value;
        return this;
      }
      public Builder setChannelRequest(bnet.protocol.channel.ChannelTypes.CreateChannelRequest.Builder builderForValue) {
        result.hasChannelRequest = true;
        result.channelRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeChannelRequest(bnet.protocol.channel.ChannelTypes.CreateChannelRequest value) {
        if (result.hasChannelRequest() &&
            result.channelRequest_ != bnet.protocol.channel.ChannelTypes.CreateChannelRequest.getDefaultInstance()) {
          result.channelRequest_ =
            bnet.protocol.channel.ChannelTypes.CreateChannelRequest.newBuilder(result.channelRequest_).mergeFrom(value).buildPartial();
        } else {
          result.channelRequest_ = value;
        }
        result.hasChannelRequest = true;
        return this;
      }
      public Builder clearChannelRequest() {
        result.hasChannelRequest = false;
        result.channelRequest_ = bnet.protocol.channel.ChannelTypes.CreateChannelRequest.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.game_master.FindGameRequest)
    }
    
    static {
      defaultInstance = new FindGameRequest(true);
      bnet.protocol.game_master.GameMaster.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.FindGameRequest)
  }
  
  public static final class FindGameResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use FindGameResponse.newBuilder() to construct.
    private FindGameResponse() {
      initFields();
    }
    private FindGameResponse(boolean noInit) {}
    
    private static final FindGameResponse defaultInstance;
    public static FindGameResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public FindGameResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_FindGameResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_FindGameResponse_fieldAccessorTable;
    }
    
    // optional uint64 request_id = 1;
    public static final int REQUEST_ID_FIELD_NUMBER = 1;
    private boolean hasRequestId;
    private long requestId_ = 0L;
    public boolean hasRequestId() { return hasRequestId; }
    public long getRequestId() { return requestId_; }
    
    // optional fixed64 factory_id = 2;
    public static final int FACTORY_ID_FIELD_NUMBER = 2;
    private boolean hasFactoryId;
    private long factoryId_ = 0L;
    public boolean hasFactoryId() { return hasFactoryId; }
    public long getFactoryId() { return factoryId_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasRequestId()) {
        output.writeUInt64(1, getRequestId());
      }
      if (hasFactoryId()) {
        output.writeFixed64(2, getFactoryId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasRequestId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, getRequestId());
      }
      if (hasFactoryId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, getFactoryId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.game_master.GameMaster.FindGameResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.FindGameResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.FindGameResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.FindGameResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.FindGameResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.FindGameResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.FindGameResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.FindGameResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.FindGameResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.FindGameResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.game_master.GameMaster.FindGameResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.game_master.GameMaster.FindGameResponse result;
      
      // Construct using bnet.protocol.game_master.GameMaster.FindGameResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.game_master.GameMaster.FindGameResponse();
        return builder;
      }
      
      protected bnet.protocol.game_master.GameMaster.FindGameResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.game_master.GameMaster.FindGameResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.game_master.GameMaster.FindGameResponse.getDescriptor();
      }
      
      public bnet.protocol.game_master.GameMaster.FindGameResponse getDefaultInstanceForType() {
        return bnet.protocol.game_master.GameMaster.FindGameResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.game_master.GameMaster.FindGameResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.game_master.GameMaster.FindGameResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.game_master.GameMaster.FindGameResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.game_master.GameMaster.FindGameResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.game_master.GameMaster.FindGameResponse) {
          return mergeFrom((bnet.protocol.game_master.GameMaster.FindGameResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.game_master.GameMaster.FindGameResponse other) {
        if (other == bnet.protocol.game_master.GameMaster.FindGameResponse.getDefaultInstance()) return this;
        if (other.hasRequestId()) {
          setRequestId(other.getRequestId());
        }
        if (other.hasFactoryId()) {
          setFactoryId(other.getFactoryId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setRequestId(input.readUInt64());
              break;
            }
            case 17: {
              setFactoryId(input.readFixed64());
              break;
            }
          }
        }
      }
      
      
      // optional uint64 request_id = 1;
      public boolean hasRequestId() {
        return result.hasRequestId();
      }
      public long getRequestId() {
        return result.getRequestId();
      }
      public Builder setRequestId(long value) {
        result.hasRequestId = true;
        result.requestId_ = value;
        return this;
      }
      public Builder clearRequestId() {
        result.hasRequestId = false;
        result.requestId_ = 0L;
        return this;
      }
      
      // optional fixed64 factory_id = 2;
      public boolean hasFactoryId() {
        return result.hasFactoryId();
      }
      public long getFactoryId() {
        return result.getFactoryId();
      }
      public Builder setFactoryId(long value) {
        result.hasFactoryId = true;
        result.factoryId_ = value;
        return this;
      }
      public Builder clearFactoryId() {
        result.hasFactoryId = false;
        result.factoryId_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.game_master.FindGameResponse)
    }
    
    static {
      defaultInstance = new FindGameResponse(true);
      bnet.protocol.game_master.GameMaster.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.FindGameResponse)
  }
  
  public static final class CancelFindGameRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use CancelFindGameRequest.newBuilder() to construct.
    private CancelFindGameRequest() {
      initFields();
    }
    private CancelFindGameRequest(boolean noInit) {}
    
    private static final CancelFindGameRequest defaultInstance;
    public static CancelFindGameRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public CancelFindGameRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_CancelFindGameRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_CancelFindGameRequest_fieldAccessorTable;
    }
    
    // required fixed64 factory_id = 1;
    public static final int FACTORY_ID_FIELD_NUMBER = 1;
    private boolean hasFactoryId;
    private long factoryId_ = 0L;
    public boolean hasFactoryId() { return hasFactoryId; }
    public long getFactoryId() { return factoryId_; }
    
    // required uint64 request_id = 2;
    public static final int REQUEST_ID_FIELD_NUMBER = 2;
    private boolean hasRequestId;
    private long requestId_ = 0L;
    public boolean hasRequestId() { return hasRequestId; }
    public long getRequestId() { return requestId_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasFactoryId) return false;
      if (!hasRequestId) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasFactoryId()) {
        output.writeFixed64(1, getFactoryId());
      }
      if (hasRequestId()) {
        output.writeUInt64(2, getRequestId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasFactoryId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, getFactoryId());
      }
      if (hasRequestId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, getRequestId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.game_master.GameMaster.CancelFindGameRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.CancelFindGameRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.CancelFindGameRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.CancelFindGameRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.CancelFindGameRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.CancelFindGameRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.CancelFindGameRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.CancelFindGameRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.CancelFindGameRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.CancelFindGameRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.game_master.GameMaster.CancelFindGameRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.game_master.GameMaster.CancelFindGameRequest result;
      
      // Construct using bnet.protocol.game_master.GameMaster.CancelFindGameRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.game_master.GameMaster.CancelFindGameRequest();
        return builder;
      }
      
      protected bnet.protocol.game_master.GameMaster.CancelFindGameRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.game_master.GameMaster.CancelFindGameRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.game_master.GameMaster.CancelFindGameRequest.getDescriptor();
      }
      
      public bnet.protocol.game_master.GameMaster.CancelFindGameRequest getDefaultInstanceForType() {
        return bnet.protocol.game_master.GameMaster.CancelFindGameRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.game_master.GameMaster.CancelFindGameRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.game_master.GameMaster.CancelFindGameRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.game_master.GameMaster.CancelFindGameRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.game_master.GameMaster.CancelFindGameRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.game_master.GameMaster.CancelFindGameRequest) {
          return mergeFrom((bnet.protocol.game_master.GameMaster.CancelFindGameRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.game_master.GameMaster.CancelFindGameRequest other) {
        if (other == bnet.protocol.game_master.GameMaster.CancelFindGameRequest.getDefaultInstance()) return this;
        if (other.hasFactoryId()) {
          setFactoryId(other.getFactoryId());
        }
        if (other.hasRequestId()) {
          setRequestId(other.getRequestId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              setFactoryId(input.readFixed64());
              break;
            }
            case 16: {
              setRequestId(input.readUInt64());
              break;
            }
          }
        }
      }
      
      
      // required fixed64 factory_id = 1;
      public boolean hasFactoryId() {
        return result.hasFactoryId();
      }
      public long getFactoryId() {
        return result.getFactoryId();
      }
      public Builder setFactoryId(long value) {
        result.hasFactoryId = true;
        result.factoryId_ = value;
        return this;
      }
      public Builder clearFactoryId() {
        result.hasFactoryId = false;
        result.factoryId_ = 0L;
        return this;
      }
      
      // required uint64 request_id = 2;
      public boolean hasRequestId() {
        return result.hasRequestId();
      }
      public long getRequestId() {
        return result.getRequestId();
      }
      public Builder setRequestId(long value) {
        result.hasRequestId = true;
        result.requestId_ = value;
        return this;
      }
      public Builder clearRequestId() {
        result.hasRequestId = false;
        result.requestId_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.game_master.CancelFindGameRequest)
    }
    
    static {
      defaultInstance = new CancelFindGameRequest(true);
      bnet.protocol.game_master.GameMaster.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.CancelFindGameRequest)
  }
  
  public static final class GameEndedNotification extends
      com.google.protobuf.GeneratedMessage {
    // Use GameEndedNotification.newBuilder() to construct.
    private GameEndedNotification() {
      initFields();
    }
    private GameEndedNotification(boolean noInit) {}
    
    private static final GameEndedNotification defaultInstance;
    public static GameEndedNotification getDefaultInstance() {
      return defaultInstance;
    }
    
    public GameEndedNotification getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_GameEndedNotification_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_GameEndedNotification_fieldAccessorTable;
    }
    
    // required .bnet.protocol.game_master.GameHandle game_handle = 1;
    public static final int GAME_HANDLE_FIELD_NUMBER = 1;
    private boolean hasGameHandle;
    private bnet.protocol.game_master.GameMasterTypes.GameHandle gameHandle_;
    public boolean hasGameHandle() { return hasGameHandle; }
    public bnet.protocol.game_master.GameMasterTypes.GameHandle getGameHandle() { return gameHandle_; }
    
    private void initFields() {
      gameHandle_ = bnet.protocol.game_master.GameMasterTypes.GameHandle.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasGameHandle) return false;
      if (!getGameHandle().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasGameHandle()) {
        output.writeMessage(1, getGameHandle());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasGameHandle()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getGameHandle());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.game_master.GameMaster.GameEndedNotification parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.GameEndedNotification parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.GameEndedNotification parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.GameEndedNotification parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.GameEndedNotification parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.GameEndedNotification parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.GameEndedNotification parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.GameEndedNotification parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.GameEndedNotification parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.GameEndedNotification parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.game_master.GameMaster.GameEndedNotification prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.game_master.GameMaster.GameEndedNotification result;
      
      // Construct using bnet.protocol.game_master.GameMaster.GameEndedNotification.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.game_master.GameMaster.GameEndedNotification();
        return builder;
      }
      
      protected bnet.protocol.game_master.GameMaster.GameEndedNotification internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.game_master.GameMaster.GameEndedNotification();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.game_master.GameMaster.GameEndedNotification.getDescriptor();
      }
      
      public bnet.protocol.game_master.GameMaster.GameEndedNotification getDefaultInstanceForType() {
        return bnet.protocol.game_master.GameMaster.GameEndedNotification.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.game_master.GameMaster.GameEndedNotification build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.game_master.GameMaster.GameEndedNotification buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.game_master.GameMaster.GameEndedNotification buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.game_master.GameMaster.GameEndedNotification returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.game_master.GameMaster.GameEndedNotification) {
          return mergeFrom((bnet.protocol.game_master.GameMaster.GameEndedNotification)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.game_master.GameMaster.GameEndedNotification other) {
        if (other == bnet.protocol.game_master.GameMaster.GameEndedNotification.getDefaultInstance()) return this;
        if (other.hasGameHandle()) {
          mergeGameHandle(other.getGameHandle());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.game_master.GameMasterTypes.GameHandle.Builder subBuilder = bnet.protocol.game_master.GameMasterTypes.GameHandle.newBuilder();
              if (hasGameHandle()) {
                subBuilder.mergeFrom(getGameHandle());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGameHandle(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .bnet.protocol.game_master.GameHandle game_handle = 1;
      public boolean hasGameHandle() {
        return result.hasGameHandle();
      }
      public bnet.protocol.game_master.GameMasterTypes.GameHandle getGameHandle() {
        return result.getGameHandle();
      }
      public Builder setGameHandle(bnet.protocol.game_master.GameMasterTypes.GameHandle value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasGameHandle = true;
        result.gameHandle_ = value;
        return this;
      }
      public Builder setGameHandle(bnet.protocol.game_master.GameMasterTypes.GameHandle.Builder builderForValue) {
        result.hasGameHandle = true;
        result.gameHandle_ = builderForValue.build();
        return this;
      }
      public Builder mergeGameHandle(bnet.protocol.game_master.GameMasterTypes.GameHandle value) {
        if (result.hasGameHandle() &&
            result.gameHandle_ != bnet.protocol.game_master.GameMasterTypes.GameHandle.getDefaultInstance()) {
          result.gameHandle_ =
            bnet.protocol.game_master.GameMasterTypes.GameHandle.newBuilder(result.gameHandle_).mergeFrom(value).buildPartial();
        } else {
          result.gameHandle_ = value;
        }
        result.hasGameHandle = true;
        return this;
      }
      public Builder clearGameHandle() {
        result.hasGameHandle = false;
        result.gameHandle_ = bnet.protocol.game_master.GameMasterTypes.GameHandle.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.game_master.GameEndedNotification)
    }
    
    static {
      defaultInstance = new GameEndedNotification(true);
      bnet.protocol.game_master.GameMaster.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.GameEndedNotification)
  }
  
  public static final class PlayerLeftNotification extends
      com.google.protobuf.GeneratedMessage {
    // Use PlayerLeftNotification.newBuilder() to construct.
    private PlayerLeftNotification() {
      initFields();
    }
    private PlayerLeftNotification(boolean noInit) {}
    
    private static final PlayerLeftNotification defaultInstance;
    public static PlayerLeftNotification getDefaultInstance() {
      return defaultInstance;
    }
    
    public PlayerLeftNotification getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_PlayerLeftNotification_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_PlayerLeftNotification_fieldAccessorTable;
    }
    
    // required .bnet.protocol.game_master.GameHandle game_handle = 1;
    public static final int GAME_HANDLE_FIELD_NUMBER = 1;
    private boolean hasGameHandle;
    private bnet.protocol.game_master.GameMasterTypes.GameHandle gameHandle_;
    public boolean hasGameHandle() { return hasGameHandle; }
    public bnet.protocol.game_master.GameMasterTypes.GameHandle getGameHandle() { return gameHandle_; }
    
    // required .bnet.protocol.EntityId toon_id = 2;
    public static final int TOON_ID_FIELD_NUMBER = 2;
    private boolean hasToonId;
    private bnet.protocol.Entity.EntityId toonId_;
    public boolean hasToonId() { return hasToonId; }
    public bnet.protocol.Entity.EntityId getToonId() { return toonId_; }
    
    // optional uint32 reason = 3;
    public static final int REASON_FIELD_NUMBER = 3;
    private boolean hasReason;
    private int reason_ = 0;
    public boolean hasReason() { return hasReason; }
    public int getReason() { return reason_; }
    
    private void initFields() {
      gameHandle_ = bnet.protocol.game_master.GameMasterTypes.GameHandle.getDefaultInstance();
      toonId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasGameHandle) return false;
      if (!hasToonId) return false;
      if (!getGameHandle().isInitialized()) return false;
      if (!getToonId().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasGameHandle()) {
        output.writeMessage(1, getGameHandle());
      }
      if (hasToonId()) {
        output.writeMessage(2, getToonId());
      }
      if (hasReason()) {
        output.writeUInt32(3, getReason());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasGameHandle()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getGameHandle());
      }
      if (hasToonId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getToonId());
      }
      if (hasReason()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, getReason());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.game_master.GameMaster.PlayerLeftNotification parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.PlayerLeftNotification parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.PlayerLeftNotification parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.PlayerLeftNotification parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.PlayerLeftNotification parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.PlayerLeftNotification parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.PlayerLeftNotification parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.PlayerLeftNotification parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.PlayerLeftNotification parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.PlayerLeftNotification parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.game_master.GameMaster.PlayerLeftNotification prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.game_master.GameMaster.PlayerLeftNotification result;
      
      // Construct using bnet.protocol.game_master.GameMaster.PlayerLeftNotification.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.game_master.GameMaster.PlayerLeftNotification();
        return builder;
      }
      
      protected bnet.protocol.game_master.GameMaster.PlayerLeftNotification internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.game_master.GameMaster.PlayerLeftNotification();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.game_master.GameMaster.PlayerLeftNotification.getDescriptor();
      }
      
      public bnet.protocol.game_master.GameMaster.PlayerLeftNotification getDefaultInstanceForType() {
        return bnet.protocol.game_master.GameMaster.PlayerLeftNotification.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.game_master.GameMaster.PlayerLeftNotification build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.game_master.GameMaster.PlayerLeftNotification buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.game_master.GameMaster.PlayerLeftNotification buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.game_master.GameMaster.PlayerLeftNotification returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.game_master.GameMaster.PlayerLeftNotification) {
          return mergeFrom((bnet.protocol.game_master.GameMaster.PlayerLeftNotification)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.game_master.GameMaster.PlayerLeftNotification other) {
        if (other == bnet.protocol.game_master.GameMaster.PlayerLeftNotification.getDefaultInstance()) return this;
        if (other.hasGameHandle()) {
          mergeGameHandle(other.getGameHandle());
        }
        if (other.hasToonId()) {
          mergeToonId(other.getToonId());
        }
        if (other.hasReason()) {
          setReason(other.getReason());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.game_master.GameMasterTypes.GameHandle.Builder subBuilder = bnet.protocol.game_master.GameMasterTypes.GameHandle.newBuilder();
              if (hasGameHandle()) {
                subBuilder.mergeFrom(getGameHandle());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGameHandle(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasToonId()) {
                subBuilder.mergeFrom(getToonId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setToonId(subBuilder.buildPartial());
              break;
            }
            case 24: {
              setReason(input.readUInt32());
              break;
            }
          }
        }
      }
      
      
      // required .bnet.protocol.game_master.GameHandle game_handle = 1;
      public boolean hasGameHandle() {
        return result.hasGameHandle();
      }
      public bnet.protocol.game_master.GameMasterTypes.GameHandle getGameHandle() {
        return result.getGameHandle();
      }
      public Builder setGameHandle(bnet.protocol.game_master.GameMasterTypes.GameHandle value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasGameHandle = true;
        result.gameHandle_ = value;
        return this;
      }
      public Builder setGameHandle(bnet.protocol.game_master.GameMasterTypes.GameHandle.Builder builderForValue) {
        result.hasGameHandle = true;
        result.gameHandle_ = builderForValue.build();
        return this;
      }
      public Builder mergeGameHandle(bnet.protocol.game_master.GameMasterTypes.GameHandle value) {
        if (result.hasGameHandle() &&
            result.gameHandle_ != bnet.protocol.game_master.GameMasterTypes.GameHandle.getDefaultInstance()) {
          result.gameHandle_ =
            bnet.protocol.game_master.GameMasterTypes.GameHandle.newBuilder(result.gameHandle_).mergeFrom(value).buildPartial();
        } else {
          result.gameHandle_ = value;
        }
        result.hasGameHandle = true;
        return this;
      }
      public Builder clearGameHandle() {
        result.hasGameHandle = false;
        result.gameHandle_ = bnet.protocol.game_master.GameMasterTypes.GameHandle.getDefaultInstance();
        return this;
      }
      
      // required .bnet.protocol.EntityId toon_id = 2;
      public boolean hasToonId() {
        return result.hasToonId();
      }
      public bnet.protocol.Entity.EntityId getToonId() {
        return result.getToonId();
      }
      public Builder setToonId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasToonId = true;
        result.toonId_ = value;
        return this;
      }
      public Builder setToonId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasToonId = true;
        result.toonId_ = builderForValue.build();
        return this;
      }
      public Builder mergeToonId(bnet.protocol.Entity.EntityId value) {
        if (result.hasToonId() &&
            result.toonId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.toonId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.toonId_).mergeFrom(value).buildPartial();
        } else {
          result.toonId_ = value;
        }
        result.hasToonId = true;
        return this;
      }
      public Builder clearToonId() {
        result.hasToonId = false;
        result.toonId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // optional uint32 reason = 3;
      public boolean hasReason() {
        return result.hasReason();
      }
      public int getReason() {
        return result.getReason();
      }
      public Builder setReason(int value) {
        result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder clearReason() {
        result.hasReason = false;
        result.reason_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.game_master.PlayerLeftNotification)
    }
    
    static {
      defaultInstance = new PlayerLeftNotification(true);
      bnet.protocol.game_master.GameMaster.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.PlayerLeftNotification)
  }
  
  public static final class RegisterServerRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use RegisterServerRequest.newBuilder() to construct.
    private RegisterServerRequest() {
      initFields();
    }
    private RegisterServerRequest(boolean noInit) {}
    
    private static final RegisterServerRequest defaultInstance;
    public static RegisterServerRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public RegisterServerRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_RegisterServerRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_RegisterServerRequest_fieldAccessorTable;
    }
    
    // repeated .bnet.protocol.attribute.Attribute attribute = 1;
    public static final int ATTRIBUTE_FIELD_NUMBER = 1;
    private java.util.List<bnet.protocol.attribute.AttributeProto.Attribute> attribute_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.attribute.AttributeProto.Attribute> getAttributeList() {
      return attribute_;
    }
    public int getAttributeCount() { return attribute_.size(); }
    public bnet.protocol.attribute.AttributeProto.Attribute getAttribute(int index) {
      return attribute_.get(index);
    }
    
    // optional .bnet.protocol.server_pool.ServerState state = 2;
    public static final int STATE_FIELD_NUMBER = 2;
    private boolean hasState;
    private bnet.protocol.server_pool.ServerPool.ServerState state_;
    public boolean hasState() { return hasState; }
    public bnet.protocol.server_pool.ServerPool.ServerState getState() { return state_; }
    
    // required fixed32 program_id = 3;
    public static final int PROGRAM_ID_FIELD_NUMBER = 3;
    private boolean hasProgramId;
    private int programId_ = 0;
    public boolean hasProgramId() { return hasProgramId; }
    public int getProgramId() { return programId_; }
    
    private void initFields() {
      state_ = bnet.protocol.server_pool.ServerPool.ServerState.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasProgramId) return false;
      for (bnet.protocol.attribute.AttributeProto.Attribute element : getAttributeList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (bnet.protocol.attribute.AttributeProto.Attribute element : getAttributeList()) {
        output.writeMessage(1, element);
      }
      if (hasState()) {
        output.writeMessage(2, getState());
      }
      if (hasProgramId()) {
        output.writeFixed32(3, getProgramId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (bnet.protocol.attribute.AttributeProto.Attribute element : getAttributeList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      if (hasState()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getState());
      }
      if (hasProgramId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(3, getProgramId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.game_master.GameMaster.RegisterServerRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.RegisterServerRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.RegisterServerRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.RegisterServerRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.RegisterServerRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.RegisterServerRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.RegisterServerRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.RegisterServerRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.RegisterServerRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.RegisterServerRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.game_master.GameMaster.RegisterServerRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.game_master.GameMaster.RegisterServerRequest result;
      
      // Construct using bnet.protocol.game_master.GameMaster.RegisterServerRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.game_master.GameMaster.RegisterServerRequest();
        return builder;
      }
      
      protected bnet.protocol.game_master.GameMaster.RegisterServerRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.game_master.GameMaster.RegisterServerRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.game_master.GameMaster.RegisterServerRequest.getDescriptor();
      }
      
      public bnet.protocol.game_master.GameMaster.RegisterServerRequest getDefaultInstanceForType() {
        return bnet.protocol.game_master.GameMaster.RegisterServerRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.game_master.GameMaster.RegisterServerRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.game_master.GameMaster.RegisterServerRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.game_master.GameMaster.RegisterServerRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.attribute_ != java.util.Collections.EMPTY_LIST) {
          result.attribute_ =
            java.util.Collections.unmodifiableList(result.attribute_);
        }
        bnet.protocol.game_master.GameMaster.RegisterServerRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.game_master.GameMaster.RegisterServerRequest) {
          return mergeFrom((bnet.protocol.game_master.GameMaster.RegisterServerRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.game_master.GameMaster.RegisterServerRequest other) {
        if (other == bnet.protocol.game_master.GameMaster.RegisterServerRequest.getDefaultInstance()) return this;
        if (!other.attribute_.isEmpty()) {
          if (result.attribute_.isEmpty()) {
            result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.AttributeProto.Attribute>();
          }
          result.attribute_.addAll(other.attribute_);
        }
        if (other.hasState()) {
          mergeState(other.getState());
        }
        if (other.hasProgramId()) {
          setProgramId(other.getProgramId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.attribute.AttributeProto.Attribute.Builder subBuilder = bnet.protocol.attribute.AttributeProto.Attribute.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAttribute(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bnet.protocol.server_pool.ServerPool.ServerState.Builder subBuilder = bnet.protocol.server_pool.ServerPool.ServerState.newBuilder();
              if (hasState()) {
                subBuilder.mergeFrom(getState());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setState(subBuilder.buildPartial());
              break;
            }
            case 29: {
              setProgramId(input.readFixed32());
              break;
            }
          }
        }
      }
      
      
      // repeated .bnet.protocol.attribute.Attribute attribute = 1;
      public java.util.List<bnet.protocol.attribute.AttributeProto.Attribute> getAttributeList() {
        return java.util.Collections.unmodifiableList(result.attribute_);
      }
      public int getAttributeCount() {
        return result.getAttributeCount();
      }
      public bnet.protocol.attribute.AttributeProto.Attribute getAttribute(int index) {
        return result.getAttribute(index);
      }
      public Builder setAttribute(int index, bnet.protocol.attribute.AttributeProto.Attribute value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.attribute_.set(index, value);
        return this;
      }
      public Builder setAttribute(int index, bnet.protocol.attribute.AttributeProto.Attribute.Builder builderForValue) {
        result.attribute_.set(index, builderForValue.build());
        return this;
      }
      public Builder addAttribute(bnet.protocol.attribute.AttributeProto.Attribute value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.attribute_.isEmpty()) {
          result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.AttributeProto.Attribute>();
        }
        result.attribute_.add(value);
        return this;
      }
      public Builder addAttribute(bnet.protocol.attribute.AttributeProto.Attribute.Builder builderForValue) {
        if (result.attribute_.isEmpty()) {
          result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.AttributeProto.Attribute>();
        }
        result.attribute_.add(builderForValue.build());
        return this;
      }
      public Builder addAllAttribute(
          java.lang.Iterable<? extends bnet.protocol.attribute.AttributeProto.Attribute> values) {
        if (result.attribute_.isEmpty()) {
          result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.AttributeProto.Attribute>();
        }
        super.addAll(values, result.attribute_);
        return this;
      }
      public Builder clearAttribute() {
        result.attribute_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional .bnet.protocol.server_pool.ServerState state = 2;
      public boolean hasState() {
        return result.hasState();
      }
      public bnet.protocol.server_pool.ServerPool.ServerState getState() {
        return result.getState();
      }
      public Builder setState(bnet.protocol.server_pool.ServerPool.ServerState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasState = true;
        result.state_ = value;
        return this;
      }
      public Builder setState(bnet.protocol.server_pool.ServerPool.ServerState.Builder builderForValue) {
        result.hasState = true;
        result.state_ = builderForValue.build();
        return this;
      }
      public Builder mergeState(bnet.protocol.server_pool.ServerPool.ServerState value) {
        if (result.hasState() &&
            result.state_ != bnet.protocol.server_pool.ServerPool.ServerState.getDefaultInstance()) {
          result.state_ =
            bnet.protocol.server_pool.ServerPool.ServerState.newBuilder(result.state_).mergeFrom(value).buildPartial();
        } else {
          result.state_ = value;
        }
        result.hasState = true;
        return this;
      }
      public Builder clearState() {
        result.hasState = false;
        result.state_ = bnet.protocol.server_pool.ServerPool.ServerState.getDefaultInstance();
        return this;
      }
      
      // required fixed32 program_id = 3;
      public boolean hasProgramId() {
        return result.hasProgramId();
      }
      public int getProgramId() {
        return result.getProgramId();
      }
      public Builder setProgramId(int value) {
        result.hasProgramId = true;
        result.programId_ = value;
        return this;
      }
      public Builder clearProgramId() {
        result.hasProgramId = false;
        result.programId_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.game_master.RegisterServerRequest)
    }
    
    static {
      defaultInstance = new RegisterServerRequest(true);
      bnet.protocol.game_master.GameMaster.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.RegisterServerRequest)
  }
  
  public static final class UnregisterServerRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use UnregisterServerRequest.newBuilder() to construct.
    private UnregisterServerRequest() {
      initFields();
    }
    private UnregisterServerRequest(boolean noInit) {}
    
    private static final UnregisterServerRequest defaultInstance;
    public static UnregisterServerRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public UnregisterServerRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_UnregisterServerRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_UnregisterServerRequest_fieldAccessorTable;
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.game_master.GameMaster.UnregisterServerRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.UnregisterServerRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.UnregisterServerRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.UnregisterServerRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.UnregisterServerRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.UnregisterServerRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.UnregisterServerRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.UnregisterServerRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.UnregisterServerRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.UnregisterServerRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.game_master.GameMaster.UnregisterServerRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.game_master.GameMaster.UnregisterServerRequest result;
      
      // Construct using bnet.protocol.game_master.GameMaster.UnregisterServerRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.game_master.GameMaster.UnregisterServerRequest();
        return builder;
      }
      
      protected bnet.protocol.game_master.GameMaster.UnregisterServerRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.game_master.GameMaster.UnregisterServerRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.game_master.GameMaster.UnregisterServerRequest.getDescriptor();
      }
      
      public bnet.protocol.game_master.GameMaster.UnregisterServerRequest getDefaultInstanceForType() {
        return bnet.protocol.game_master.GameMaster.UnregisterServerRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.game_master.GameMaster.UnregisterServerRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.game_master.GameMaster.UnregisterServerRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.game_master.GameMaster.UnregisterServerRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.game_master.GameMaster.UnregisterServerRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.game_master.GameMaster.UnregisterServerRequest) {
          return mergeFrom((bnet.protocol.game_master.GameMaster.UnregisterServerRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.game_master.GameMaster.UnregisterServerRequest other) {
        if (other == bnet.protocol.game_master.GameMaster.UnregisterServerRequest.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
          }
        }
      }
      
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.game_master.UnregisterServerRequest)
    }
    
    static {
      defaultInstance = new UnregisterServerRequest(true);
      bnet.protocol.game_master.GameMaster.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.UnregisterServerRequest)
  }
  
  public static final class RegisterUtilitiesRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use RegisterUtilitiesRequest.newBuilder() to construct.
    private RegisterUtilitiesRequest() {
      initFields();
    }
    private RegisterUtilitiesRequest(boolean noInit) {}
    
    private static final RegisterUtilitiesRequest defaultInstance;
    public static RegisterUtilitiesRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public RegisterUtilitiesRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_RegisterUtilitiesRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_RegisterUtilitiesRequest_fieldAccessorTable;
    }
    
    // repeated .bnet.protocol.attribute.Attribute attribute = 1;
    public static final int ATTRIBUTE_FIELD_NUMBER = 1;
    private java.util.List<bnet.protocol.attribute.AttributeProto.Attribute> attribute_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.attribute.AttributeProto.Attribute> getAttributeList() {
      return attribute_;
    }
    public int getAttributeCount() { return attribute_.size(); }
    public bnet.protocol.attribute.AttributeProto.Attribute getAttribute(int index) {
      return attribute_.get(index);
    }
    
    // optional .bnet.protocol.server_pool.ServerState state = 2;
    public static final int STATE_FIELD_NUMBER = 2;
    private boolean hasState;
    private bnet.protocol.server_pool.ServerPool.ServerState state_;
    public boolean hasState() { return hasState; }
    public bnet.protocol.server_pool.ServerPool.ServerState getState() { return state_; }
    
    // required fixed32 program_id = 3;
    public static final int PROGRAM_ID_FIELD_NUMBER = 3;
    private boolean hasProgramId;
    private int programId_ = 0;
    public boolean hasProgramId() { return hasProgramId; }
    public int getProgramId() { return programId_; }
    
    private void initFields() {
      state_ = bnet.protocol.server_pool.ServerPool.ServerState.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasProgramId) return false;
      for (bnet.protocol.attribute.AttributeProto.Attribute element : getAttributeList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (bnet.protocol.attribute.AttributeProto.Attribute element : getAttributeList()) {
        output.writeMessage(1, element);
      }
      if (hasState()) {
        output.writeMessage(2, getState());
      }
      if (hasProgramId()) {
        output.writeFixed32(3, getProgramId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (bnet.protocol.attribute.AttributeProto.Attribute element : getAttributeList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      if (hasState()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getState());
      }
      if (hasProgramId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(3, getProgramId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.game_master.GameMaster.RegisterUtilitiesRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.RegisterUtilitiesRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.RegisterUtilitiesRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.RegisterUtilitiesRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.RegisterUtilitiesRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.RegisterUtilitiesRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.RegisterUtilitiesRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.RegisterUtilitiesRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.RegisterUtilitiesRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.RegisterUtilitiesRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.game_master.GameMaster.RegisterUtilitiesRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.game_master.GameMaster.RegisterUtilitiesRequest result;
      
      // Construct using bnet.protocol.game_master.GameMaster.RegisterUtilitiesRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.game_master.GameMaster.RegisterUtilitiesRequest();
        return builder;
      }
      
      protected bnet.protocol.game_master.GameMaster.RegisterUtilitiesRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.game_master.GameMaster.RegisterUtilitiesRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.game_master.GameMaster.RegisterUtilitiesRequest.getDescriptor();
      }
      
      public bnet.protocol.game_master.GameMaster.RegisterUtilitiesRequest getDefaultInstanceForType() {
        return bnet.protocol.game_master.GameMaster.RegisterUtilitiesRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.game_master.GameMaster.RegisterUtilitiesRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.game_master.GameMaster.RegisterUtilitiesRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.game_master.GameMaster.RegisterUtilitiesRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.attribute_ != java.util.Collections.EMPTY_LIST) {
          result.attribute_ =
            java.util.Collections.unmodifiableList(result.attribute_);
        }
        bnet.protocol.game_master.GameMaster.RegisterUtilitiesRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.game_master.GameMaster.RegisterUtilitiesRequest) {
          return mergeFrom((bnet.protocol.game_master.GameMaster.RegisterUtilitiesRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.game_master.GameMaster.RegisterUtilitiesRequest other) {
        if (other == bnet.protocol.game_master.GameMaster.RegisterUtilitiesRequest.getDefaultInstance()) return this;
        if (!other.attribute_.isEmpty()) {
          if (result.attribute_.isEmpty()) {
            result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.AttributeProto.Attribute>();
          }
          result.attribute_.addAll(other.attribute_);
        }
        if (other.hasState()) {
          mergeState(other.getState());
        }
        if (other.hasProgramId()) {
          setProgramId(other.getProgramId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.attribute.AttributeProto.Attribute.Builder subBuilder = bnet.protocol.attribute.AttributeProto.Attribute.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAttribute(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bnet.protocol.server_pool.ServerPool.ServerState.Builder subBuilder = bnet.protocol.server_pool.ServerPool.ServerState.newBuilder();
              if (hasState()) {
                subBuilder.mergeFrom(getState());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setState(subBuilder.buildPartial());
              break;
            }
            case 29: {
              setProgramId(input.readFixed32());
              break;
            }
          }
        }
      }
      
      
      // repeated .bnet.protocol.attribute.Attribute attribute = 1;
      public java.util.List<bnet.protocol.attribute.AttributeProto.Attribute> getAttributeList() {
        return java.util.Collections.unmodifiableList(result.attribute_);
      }
      public int getAttributeCount() {
        return result.getAttributeCount();
      }
      public bnet.protocol.attribute.AttributeProto.Attribute getAttribute(int index) {
        return result.getAttribute(index);
      }
      public Builder setAttribute(int index, bnet.protocol.attribute.AttributeProto.Attribute value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.attribute_.set(index, value);
        return this;
      }
      public Builder setAttribute(int index, bnet.protocol.attribute.AttributeProto.Attribute.Builder builderForValue) {
        result.attribute_.set(index, builderForValue.build());
        return this;
      }
      public Builder addAttribute(bnet.protocol.attribute.AttributeProto.Attribute value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.attribute_.isEmpty()) {
          result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.AttributeProto.Attribute>();
        }
        result.attribute_.add(value);
        return this;
      }
      public Builder addAttribute(bnet.protocol.attribute.AttributeProto.Attribute.Builder builderForValue) {
        if (result.attribute_.isEmpty()) {
          result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.AttributeProto.Attribute>();
        }
        result.attribute_.add(builderForValue.build());
        return this;
      }
      public Builder addAllAttribute(
          java.lang.Iterable<? extends bnet.protocol.attribute.AttributeProto.Attribute> values) {
        if (result.attribute_.isEmpty()) {
          result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.AttributeProto.Attribute>();
        }
        super.addAll(values, result.attribute_);
        return this;
      }
      public Builder clearAttribute() {
        result.attribute_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional .bnet.protocol.server_pool.ServerState state = 2;
      public boolean hasState() {
        return result.hasState();
      }
      public bnet.protocol.server_pool.ServerPool.ServerState getState() {
        return result.getState();
      }
      public Builder setState(bnet.protocol.server_pool.ServerPool.ServerState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasState = true;
        result.state_ = value;
        return this;
      }
      public Builder setState(bnet.protocol.server_pool.ServerPool.ServerState.Builder builderForValue) {
        result.hasState = true;
        result.state_ = builderForValue.build();
        return this;
      }
      public Builder mergeState(bnet.protocol.server_pool.ServerPool.ServerState value) {
        if (result.hasState() &&
            result.state_ != bnet.protocol.server_pool.ServerPool.ServerState.getDefaultInstance()) {
          result.state_ =
            bnet.protocol.server_pool.ServerPool.ServerState.newBuilder(result.state_).mergeFrom(value).buildPartial();
        } else {
          result.state_ = value;
        }
        result.hasState = true;
        return this;
      }
      public Builder clearState() {
        result.hasState = false;
        result.state_ = bnet.protocol.server_pool.ServerPool.ServerState.getDefaultInstance();
        return this;
      }
      
      // required fixed32 program_id = 3;
      public boolean hasProgramId() {
        return result.hasProgramId();
      }
      public int getProgramId() {
        return result.getProgramId();
      }
      public Builder setProgramId(int value) {
        result.hasProgramId = true;
        result.programId_ = value;
        return this;
      }
      public Builder clearProgramId() {
        result.hasProgramId = false;
        result.programId_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.game_master.RegisterUtilitiesRequest)
    }
    
    static {
      defaultInstance = new RegisterUtilitiesRequest(true);
      bnet.protocol.game_master.GameMaster.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.RegisterUtilitiesRequest)
  }
  
  public static final class UnregisterUtilitiesRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use UnregisterUtilitiesRequest.newBuilder() to construct.
    private UnregisterUtilitiesRequest() {
      initFields();
    }
    private UnregisterUtilitiesRequest(boolean noInit) {}
    
    private static final UnregisterUtilitiesRequest defaultInstance;
    public static UnregisterUtilitiesRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public UnregisterUtilitiesRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_UnregisterUtilitiesRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_UnregisterUtilitiesRequest_fieldAccessorTable;
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.game_master.GameMaster.UnregisterUtilitiesRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.UnregisterUtilitiesRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.UnregisterUtilitiesRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.UnregisterUtilitiesRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.UnregisterUtilitiesRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.UnregisterUtilitiesRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.UnregisterUtilitiesRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.UnregisterUtilitiesRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.UnregisterUtilitiesRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.UnregisterUtilitiesRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.game_master.GameMaster.UnregisterUtilitiesRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.game_master.GameMaster.UnregisterUtilitiesRequest result;
      
      // Construct using bnet.protocol.game_master.GameMaster.UnregisterUtilitiesRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.game_master.GameMaster.UnregisterUtilitiesRequest();
        return builder;
      }
      
      protected bnet.protocol.game_master.GameMaster.UnregisterUtilitiesRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.game_master.GameMaster.UnregisterUtilitiesRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.game_master.GameMaster.UnregisterUtilitiesRequest.getDescriptor();
      }
      
      public bnet.protocol.game_master.GameMaster.UnregisterUtilitiesRequest getDefaultInstanceForType() {
        return bnet.protocol.game_master.GameMaster.UnregisterUtilitiesRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.game_master.GameMaster.UnregisterUtilitiesRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.game_master.GameMaster.UnregisterUtilitiesRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.game_master.GameMaster.UnregisterUtilitiesRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.game_master.GameMaster.UnregisterUtilitiesRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.game_master.GameMaster.UnregisterUtilitiesRequest) {
          return mergeFrom((bnet.protocol.game_master.GameMaster.UnregisterUtilitiesRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.game_master.GameMaster.UnregisterUtilitiesRequest other) {
        if (other == bnet.protocol.game_master.GameMaster.UnregisterUtilitiesRequest.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
          }
        }
      }
      
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.game_master.UnregisterUtilitiesRequest)
    }
    
    static {
      defaultInstance = new UnregisterUtilitiesRequest(true);
      bnet.protocol.game_master.GameMaster.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.UnregisterUtilitiesRequest)
  }
  
  public static final class SubscribeRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use SubscribeRequest.newBuilder() to construct.
    private SubscribeRequest() {
      initFields();
    }
    private SubscribeRequest(boolean noInit) {}
    
    private static final SubscribeRequest defaultInstance;
    public static SubscribeRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public SubscribeRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_SubscribeRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_SubscribeRequest_fieldAccessorTable;
    }
    
    // required uint64 object_id = 1;
    public static final int OBJECT_ID_FIELD_NUMBER = 1;
    private boolean hasObjectId;
    private long objectId_ = 0L;
    public boolean hasObjectId() { return hasObjectId; }
    public long getObjectId() { return objectId_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasObjectId) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasObjectId()) {
        output.writeUInt64(1, getObjectId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasObjectId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, getObjectId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.game_master.GameMaster.SubscribeRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.SubscribeRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.SubscribeRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.SubscribeRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.SubscribeRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.SubscribeRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.SubscribeRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.SubscribeRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.SubscribeRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.SubscribeRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.game_master.GameMaster.SubscribeRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.game_master.GameMaster.SubscribeRequest result;
      
      // Construct using bnet.protocol.game_master.GameMaster.SubscribeRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.game_master.GameMaster.SubscribeRequest();
        return builder;
      }
      
      protected bnet.protocol.game_master.GameMaster.SubscribeRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.game_master.GameMaster.SubscribeRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.game_master.GameMaster.SubscribeRequest.getDescriptor();
      }
      
      public bnet.protocol.game_master.GameMaster.SubscribeRequest getDefaultInstanceForType() {
        return bnet.protocol.game_master.GameMaster.SubscribeRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.game_master.GameMaster.SubscribeRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.game_master.GameMaster.SubscribeRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.game_master.GameMaster.SubscribeRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.game_master.GameMaster.SubscribeRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.game_master.GameMaster.SubscribeRequest) {
          return mergeFrom((bnet.protocol.game_master.GameMaster.SubscribeRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.game_master.GameMaster.SubscribeRequest other) {
        if (other == bnet.protocol.game_master.GameMaster.SubscribeRequest.getDefaultInstance()) return this;
        if (other.hasObjectId()) {
          setObjectId(other.getObjectId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setObjectId(input.readUInt64());
              break;
            }
          }
        }
      }
      
      
      // required uint64 object_id = 1;
      public boolean hasObjectId() {
        return result.hasObjectId();
      }
      public long getObjectId() {
        return result.getObjectId();
      }
      public Builder setObjectId(long value) {
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder clearObjectId() {
        result.hasObjectId = false;
        result.objectId_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.game_master.SubscribeRequest)
    }
    
    static {
      defaultInstance = new SubscribeRequest(true);
      bnet.protocol.game_master.GameMaster.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.SubscribeRequest)
  }
  
  public static final class SubscribeResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use SubscribeResponse.newBuilder() to construct.
    private SubscribeResponse() {
      initFields();
    }
    private SubscribeResponse(boolean noInit) {}
    
    private static final SubscribeResponse defaultInstance;
    public static SubscribeResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public SubscribeResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_SubscribeResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_SubscribeResponse_fieldAccessorTable;
    }
    
    // optional uint64 subscription_id = 1;
    public static final int SUBSCRIPTION_ID_FIELD_NUMBER = 1;
    private boolean hasSubscriptionId;
    private long subscriptionId_ = 0L;
    public boolean hasSubscriptionId() { return hasSubscriptionId; }
    public long getSubscriptionId() { return subscriptionId_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSubscriptionId()) {
        output.writeUInt64(1, getSubscriptionId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSubscriptionId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, getSubscriptionId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.game_master.GameMaster.SubscribeResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.SubscribeResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.SubscribeResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.SubscribeResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.SubscribeResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.SubscribeResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.SubscribeResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.SubscribeResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.SubscribeResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.SubscribeResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.game_master.GameMaster.SubscribeResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.game_master.GameMaster.SubscribeResponse result;
      
      // Construct using bnet.protocol.game_master.GameMaster.SubscribeResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.game_master.GameMaster.SubscribeResponse();
        return builder;
      }
      
      protected bnet.protocol.game_master.GameMaster.SubscribeResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.game_master.GameMaster.SubscribeResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.game_master.GameMaster.SubscribeResponse.getDescriptor();
      }
      
      public bnet.protocol.game_master.GameMaster.SubscribeResponse getDefaultInstanceForType() {
        return bnet.protocol.game_master.GameMaster.SubscribeResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.game_master.GameMaster.SubscribeResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.game_master.GameMaster.SubscribeResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.game_master.GameMaster.SubscribeResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.game_master.GameMaster.SubscribeResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.game_master.GameMaster.SubscribeResponse) {
          return mergeFrom((bnet.protocol.game_master.GameMaster.SubscribeResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.game_master.GameMaster.SubscribeResponse other) {
        if (other == bnet.protocol.game_master.GameMaster.SubscribeResponse.getDefaultInstance()) return this;
        if (other.hasSubscriptionId()) {
          setSubscriptionId(other.getSubscriptionId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setSubscriptionId(input.readUInt64());
              break;
            }
          }
        }
      }
      
      
      // optional uint64 subscription_id = 1;
      public boolean hasSubscriptionId() {
        return result.hasSubscriptionId();
      }
      public long getSubscriptionId() {
        return result.getSubscriptionId();
      }
      public Builder setSubscriptionId(long value) {
        result.hasSubscriptionId = true;
        result.subscriptionId_ = value;
        return this;
      }
      public Builder clearSubscriptionId() {
        result.hasSubscriptionId = false;
        result.subscriptionId_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.game_master.SubscribeResponse)
    }
    
    static {
      defaultInstance = new SubscribeResponse(true);
      bnet.protocol.game_master.GameMaster.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.SubscribeResponse)
  }
  
  public static final class UnsubscribeRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use UnsubscribeRequest.newBuilder() to construct.
    private UnsubscribeRequest() {
      initFields();
    }
    private UnsubscribeRequest(boolean noInit) {}
    
    private static final UnsubscribeRequest defaultInstance;
    public static UnsubscribeRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public UnsubscribeRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_UnsubscribeRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_UnsubscribeRequest_fieldAccessorTable;
    }
    
    // required uint64 subscription_id = 1;
    public static final int SUBSCRIPTION_ID_FIELD_NUMBER = 1;
    private boolean hasSubscriptionId;
    private long subscriptionId_ = 0L;
    public boolean hasSubscriptionId() { return hasSubscriptionId; }
    public long getSubscriptionId() { return subscriptionId_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasSubscriptionId) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSubscriptionId()) {
        output.writeUInt64(1, getSubscriptionId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSubscriptionId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, getSubscriptionId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.game_master.GameMaster.UnsubscribeRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.UnsubscribeRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.UnsubscribeRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.UnsubscribeRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.UnsubscribeRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.UnsubscribeRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.UnsubscribeRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.UnsubscribeRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.UnsubscribeRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.UnsubscribeRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.game_master.GameMaster.UnsubscribeRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.game_master.GameMaster.UnsubscribeRequest result;
      
      // Construct using bnet.protocol.game_master.GameMaster.UnsubscribeRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.game_master.GameMaster.UnsubscribeRequest();
        return builder;
      }
      
      protected bnet.protocol.game_master.GameMaster.UnsubscribeRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.game_master.GameMaster.UnsubscribeRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.game_master.GameMaster.UnsubscribeRequest.getDescriptor();
      }
      
      public bnet.protocol.game_master.GameMaster.UnsubscribeRequest getDefaultInstanceForType() {
        return bnet.protocol.game_master.GameMaster.UnsubscribeRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.game_master.GameMaster.UnsubscribeRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.game_master.GameMaster.UnsubscribeRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.game_master.GameMaster.UnsubscribeRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.game_master.GameMaster.UnsubscribeRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.game_master.GameMaster.UnsubscribeRequest) {
          return mergeFrom((bnet.protocol.game_master.GameMaster.UnsubscribeRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.game_master.GameMaster.UnsubscribeRequest other) {
        if (other == bnet.protocol.game_master.GameMaster.UnsubscribeRequest.getDefaultInstance()) return this;
        if (other.hasSubscriptionId()) {
          setSubscriptionId(other.getSubscriptionId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setSubscriptionId(input.readUInt64());
              break;
            }
          }
        }
      }
      
      
      // required uint64 subscription_id = 1;
      public boolean hasSubscriptionId() {
        return result.hasSubscriptionId();
      }
      public long getSubscriptionId() {
        return result.getSubscriptionId();
      }
      public Builder setSubscriptionId(long value) {
        result.hasSubscriptionId = true;
        result.subscriptionId_ = value;
        return this;
      }
      public Builder clearSubscriptionId() {
        result.hasSubscriptionId = false;
        result.subscriptionId_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.game_master.UnsubscribeRequest)
    }
    
    static {
      defaultInstance = new UnsubscribeRequest(true);
      bnet.protocol.game_master.GameMaster.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.UnsubscribeRequest)
  }
  
  public static final class ChangeGameRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use ChangeGameRequest.newBuilder() to construct.
    private ChangeGameRequest() {
      initFields();
    }
    private ChangeGameRequest(boolean noInit) {}
    
    private static final ChangeGameRequest defaultInstance;
    public static ChangeGameRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public ChangeGameRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_ChangeGameRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_ChangeGameRequest_fieldAccessorTable;
    }
    
    // required .bnet.protocol.game_master.GameHandle game_handle = 1;
    public static final int GAME_HANDLE_FIELD_NUMBER = 1;
    private boolean hasGameHandle;
    private bnet.protocol.game_master.GameMasterTypes.GameHandle gameHandle_;
    public boolean hasGameHandle() { return hasGameHandle; }
    public bnet.protocol.game_master.GameMasterTypes.GameHandle getGameHandle() { return gameHandle_; }
    
    // optional bool open = 2;
    public static final int OPEN_FIELD_NUMBER = 2;
    private boolean hasOpen;
    private boolean open_ = false;
    public boolean hasOpen() { return hasOpen; }
    public boolean getOpen() { return open_; }
    
    // repeated .bnet.protocol.attribute.Attribute attribute = 3;
    public static final int ATTRIBUTE_FIELD_NUMBER = 3;
    private java.util.List<bnet.protocol.attribute.AttributeProto.Attribute> attribute_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.attribute.AttributeProto.Attribute> getAttributeList() {
      return attribute_;
    }
    public int getAttributeCount() { return attribute_.size(); }
    public bnet.protocol.attribute.AttributeProto.Attribute getAttribute(int index) {
      return attribute_.get(index);
    }
    
    // optional bool replace = 4;
    public static final int REPLACE_FIELD_NUMBER = 4;
    private boolean hasReplace;
    private boolean replace_ = false;
    public boolean hasReplace() { return hasReplace; }
    public boolean getReplace() { return replace_; }
    
    private void initFields() {
      gameHandle_ = bnet.protocol.game_master.GameMasterTypes.GameHandle.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasGameHandle) return false;
      if (!getGameHandle().isInitialized()) return false;
      for (bnet.protocol.attribute.AttributeProto.Attribute element : getAttributeList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasGameHandle()) {
        output.writeMessage(1, getGameHandle());
      }
      if (hasOpen()) {
        output.writeBool(2, getOpen());
      }
      for (bnet.protocol.attribute.AttributeProto.Attribute element : getAttributeList()) {
        output.writeMessage(3, element);
      }
      if (hasReplace()) {
        output.writeBool(4, getReplace());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasGameHandle()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getGameHandle());
      }
      if (hasOpen()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, getOpen());
      }
      for (bnet.protocol.attribute.AttributeProto.Attribute element : getAttributeList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, element);
      }
      if (hasReplace()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, getReplace());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.game_master.GameMaster.ChangeGameRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.ChangeGameRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.ChangeGameRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.ChangeGameRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.ChangeGameRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.ChangeGameRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.ChangeGameRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.ChangeGameRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.ChangeGameRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.ChangeGameRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.game_master.GameMaster.ChangeGameRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.game_master.GameMaster.ChangeGameRequest result;
      
      // Construct using bnet.protocol.game_master.GameMaster.ChangeGameRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.game_master.GameMaster.ChangeGameRequest();
        return builder;
      }
      
      protected bnet.protocol.game_master.GameMaster.ChangeGameRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.game_master.GameMaster.ChangeGameRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.game_master.GameMaster.ChangeGameRequest.getDescriptor();
      }
      
      public bnet.protocol.game_master.GameMaster.ChangeGameRequest getDefaultInstanceForType() {
        return bnet.protocol.game_master.GameMaster.ChangeGameRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.game_master.GameMaster.ChangeGameRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.game_master.GameMaster.ChangeGameRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.game_master.GameMaster.ChangeGameRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.attribute_ != java.util.Collections.EMPTY_LIST) {
          result.attribute_ =
            java.util.Collections.unmodifiableList(result.attribute_);
        }
        bnet.protocol.game_master.GameMaster.ChangeGameRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.game_master.GameMaster.ChangeGameRequest) {
          return mergeFrom((bnet.protocol.game_master.GameMaster.ChangeGameRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.game_master.GameMaster.ChangeGameRequest other) {
        if (other == bnet.protocol.game_master.GameMaster.ChangeGameRequest.getDefaultInstance()) return this;
        if (other.hasGameHandle()) {
          mergeGameHandle(other.getGameHandle());
        }
        if (other.hasOpen()) {
          setOpen(other.getOpen());
        }
        if (!other.attribute_.isEmpty()) {
          if (result.attribute_.isEmpty()) {
            result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.AttributeProto.Attribute>();
          }
          result.attribute_.addAll(other.attribute_);
        }
        if (other.hasReplace()) {
          setReplace(other.getReplace());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.game_master.GameMasterTypes.GameHandle.Builder subBuilder = bnet.protocol.game_master.GameMasterTypes.GameHandle.newBuilder();
              if (hasGameHandle()) {
                subBuilder.mergeFrom(getGameHandle());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGameHandle(subBuilder.buildPartial());
              break;
            }
            case 16: {
              setOpen(input.readBool());
              break;
            }
            case 26: {
              bnet.protocol.attribute.AttributeProto.Attribute.Builder subBuilder = bnet.protocol.attribute.AttributeProto.Attribute.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAttribute(subBuilder.buildPartial());
              break;
            }
            case 32: {
              setReplace(input.readBool());
              break;
            }
          }
        }
      }
      
      
      // required .bnet.protocol.game_master.GameHandle game_handle = 1;
      public boolean hasGameHandle() {
        return result.hasGameHandle();
      }
      public bnet.protocol.game_master.GameMasterTypes.GameHandle getGameHandle() {
        return result.getGameHandle();
      }
      public Builder setGameHandle(bnet.protocol.game_master.GameMasterTypes.GameHandle value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasGameHandle = true;
        result.gameHandle_ = value;
        return this;
      }
      public Builder setGameHandle(bnet.protocol.game_master.GameMasterTypes.GameHandle.Builder builderForValue) {
        result.hasGameHandle = true;
        result.gameHandle_ = builderForValue.build();
        return this;
      }
      public Builder mergeGameHandle(bnet.protocol.game_master.GameMasterTypes.GameHandle value) {
        if (result.hasGameHandle() &&
            result.gameHandle_ != bnet.protocol.game_master.GameMasterTypes.GameHandle.getDefaultInstance()) {
          result.gameHandle_ =
            bnet.protocol.game_master.GameMasterTypes.GameHandle.newBuilder(result.gameHandle_).mergeFrom(value).buildPartial();
        } else {
          result.gameHandle_ = value;
        }
        result.hasGameHandle = true;
        return this;
      }
      public Builder clearGameHandle() {
        result.hasGameHandle = false;
        result.gameHandle_ = bnet.protocol.game_master.GameMasterTypes.GameHandle.getDefaultInstance();
        return this;
      }
      
      // optional bool open = 2;
      public boolean hasOpen() {
        return result.hasOpen();
      }
      public boolean getOpen() {
        return result.getOpen();
      }
      public Builder setOpen(boolean value) {
        result.hasOpen = true;
        result.open_ = value;
        return this;
      }
      public Builder clearOpen() {
        result.hasOpen = false;
        result.open_ = false;
        return this;
      }
      
      // repeated .bnet.protocol.attribute.Attribute attribute = 3;
      public java.util.List<bnet.protocol.attribute.AttributeProto.Attribute> getAttributeList() {
        return java.util.Collections.unmodifiableList(result.attribute_);
      }
      public int getAttributeCount() {
        return result.getAttributeCount();
      }
      public bnet.protocol.attribute.AttributeProto.Attribute getAttribute(int index) {
        return result.getAttribute(index);
      }
      public Builder setAttribute(int index, bnet.protocol.attribute.AttributeProto.Attribute value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.attribute_.set(index, value);
        return this;
      }
      public Builder setAttribute(int index, bnet.protocol.attribute.AttributeProto.Attribute.Builder builderForValue) {
        result.attribute_.set(index, builderForValue.build());
        return this;
      }
      public Builder addAttribute(bnet.protocol.attribute.AttributeProto.Attribute value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.attribute_.isEmpty()) {
          result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.AttributeProto.Attribute>();
        }
        result.attribute_.add(value);
        return this;
      }
      public Builder addAttribute(bnet.protocol.attribute.AttributeProto.Attribute.Builder builderForValue) {
        if (result.attribute_.isEmpty()) {
          result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.AttributeProto.Attribute>();
        }
        result.attribute_.add(builderForValue.build());
        return this;
      }
      public Builder addAllAttribute(
          java.lang.Iterable<? extends bnet.protocol.attribute.AttributeProto.Attribute> values) {
        if (result.attribute_.isEmpty()) {
          result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.AttributeProto.Attribute>();
        }
        super.addAll(values, result.attribute_);
        return this;
      }
      public Builder clearAttribute() {
        result.attribute_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional bool replace = 4;
      public boolean hasReplace() {
        return result.hasReplace();
      }
      public boolean getReplace() {
        return result.getReplace();
      }
      public Builder setReplace(boolean value) {
        result.hasReplace = true;
        result.replace_ = value;
        return this;
      }
      public Builder clearReplace() {
        result.hasReplace = false;
        result.replace_ = false;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.game_master.ChangeGameRequest)
    }
    
    static {
      defaultInstance = new ChangeGameRequest(true);
      bnet.protocol.game_master.GameMaster.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.ChangeGameRequest)
  }
  
  public static final class GetFactoryInfoRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use GetFactoryInfoRequest.newBuilder() to construct.
    private GetFactoryInfoRequest() {
      initFields();
    }
    private GetFactoryInfoRequest(boolean noInit) {}
    
    private static final GetFactoryInfoRequest defaultInstance;
    public static GetFactoryInfoRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public GetFactoryInfoRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_GetFactoryInfoRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_GetFactoryInfoRequest_fieldAccessorTable;
    }
    
    // required fixed64 factory_id = 1;
    public static final int FACTORY_ID_FIELD_NUMBER = 1;
    private boolean hasFactoryId;
    private long factoryId_ = 0L;
    public boolean hasFactoryId() { return hasFactoryId; }
    public long getFactoryId() { return factoryId_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasFactoryId) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasFactoryId()) {
        output.writeFixed64(1, getFactoryId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasFactoryId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, getFactoryId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.game_master.GameMaster.GetFactoryInfoRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.GetFactoryInfoRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.GetFactoryInfoRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.GetFactoryInfoRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.GetFactoryInfoRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.GetFactoryInfoRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.GetFactoryInfoRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.GetFactoryInfoRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.GetFactoryInfoRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.GetFactoryInfoRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.game_master.GameMaster.GetFactoryInfoRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.game_master.GameMaster.GetFactoryInfoRequest result;
      
      // Construct using bnet.protocol.game_master.GameMaster.GetFactoryInfoRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.game_master.GameMaster.GetFactoryInfoRequest();
        return builder;
      }
      
      protected bnet.protocol.game_master.GameMaster.GetFactoryInfoRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.game_master.GameMaster.GetFactoryInfoRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.game_master.GameMaster.GetFactoryInfoRequest.getDescriptor();
      }
      
      public bnet.protocol.game_master.GameMaster.GetFactoryInfoRequest getDefaultInstanceForType() {
        return bnet.protocol.game_master.GameMaster.GetFactoryInfoRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.game_master.GameMaster.GetFactoryInfoRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.game_master.GameMaster.GetFactoryInfoRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.game_master.GameMaster.GetFactoryInfoRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.game_master.GameMaster.GetFactoryInfoRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.game_master.GameMaster.GetFactoryInfoRequest) {
          return mergeFrom((bnet.protocol.game_master.GameMaster.GetFactoryInfoRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.game_master.GameMaster.GetFactoryInfoRequest other) {
        if (other == bnet.protocol.game_master.GameMaster.GetFactoryInfoRequest.getDefaultInstance()) return this;
        if (other.hasFactoryId()) {
          setFactoryId(other.getFactoryId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              setFactoryId(input.readFixed64());
              break;
            }
          }
        }
      }
      
      
      // required fixed64 factory_id = 1;
      public boolean hasFactoryId() {
        return result.hasFactoryId();
      }
      public long getFactoryId() {
        return result.getFactoryId();
      }
      public Builder setFactoryId(long value) {
        result.hasFactoryId = true;
        result.factoryId_ = value;
        return this;
      }
      public Builder clearFactoryId() {
        result.hasFactoryId = false;
        result.factoryId_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.game_master.GetFactoryInfoRequest)
    }
    
    static {
      defaultInstance = new GetFactoryInfoRequest(true);
      bnet.protocol.game_master.GameMaster.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.GetFactoryInfoRequest)
  }
  
  public static final class GetFactoryInfoResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use GetFactoryInfoResponse.newBuilder() to construct.
    private GetFactoryInfoResponse() {
      initFields();
    }
    private GetFactoryInfoResponse(boolean noInit) {}
    
    private static final GetFactoryInfoResponse defaultInstance;
    public static GetFactoryInfoResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public GetFactoryInfoResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_GetFactoryInfoResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_GetFactoryInfoResponse_fieldAccessorTable;
    }
    
    // repeated .bnet.protocol.attribute.Attribute attribute = 1;
    public static final int ATTRIBUTE_FIELD_NUMBER = 1;
    private java.util.List<bnet.protocol.attribute.AttributeProto.Attribute> attribute_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.attribute.AttributeProto.Attribute> getAttributeList() {
      return attribute_;
    }
    public int getAttributeCount() { return attribute_.size(); }
    public bnet.protocol.attribute.AttributeProto.Attribute getAttribute(int index) {
      return attribute_.get(index);
    }
    
    // repeated .bnet.protocol.game_master.GameStatsBucket stats_bucket = 2;
    public static final int STATS_BUCKET_FIELD_NUMBER = 2;
    private java.util.List<bnet.protocol.game_master.GameMasterTypes.GameStatsBucket> statsBucket_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.game_master.GameMasterTypes.GameStatsBucket> getStatsBucketList() {
      return statsBucket_;
    }
    public int getStatsBucketCount() { return statsBucket_.size(); }
    public bnet.protocol.game_master.GameMasterTypes.GameStatsBucket getStatsBucket(int index) {
      return statsBucket_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (bnet.protocol.attribute.AttributeProto.Attribute element : getAttributeList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (bnet.protocol.attribute.AttributeProto.Attribute element : getAttributeList()) {
        output.writeMessage(1, element);
      }
      for (bnet.protocol.game_master.GameMasterTypes.GameStatsBucket element : getStatsBucketList()) {
        output.writeMessage(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (bnet.protocol.attribute.AttributeProto.Attribute element : getAttributeList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      for (bnet.protocol.game_master.GameMasterTypes.GameStatsBucket element : getStatsBucketList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.game_master.GameMaster.GetFactoryInfoResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.GetFactoryInfoResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.GetFactoryInfoResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.GetFactoryInfoResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.GetFactoryInfoResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.GetFactoryInfoResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.GetFactoryInfoResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.GetFactoryInfoResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.GetFactoryInfoResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.GetFactoryInfoResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.game_master.GameMaster.GetFactoryInfoResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.game_master.GameMaster.GetFactoryInfoResponse result;
      
      // Construct using bnet.protocol.game_master.GameMaster.GetFactoryInfoResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.game_master.GameMaster.GetFactoryInfoResponse();
        return builder;
      }
      
      protected bnet.protocol.game_master.GameMaster.GetFactoryInfoResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.game_master.GameMaster.GetFactoryInfoResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.game_master.GameMaster.GetFactoryInfoResponse.getDescriptor();
      }
      
      public bnet.protocol.game_master.GameMaster.GetFactoryInfoResponse getDefaultInstanceForType() {
        return bnet.protocol.game_master.GameMaster.GetFactoryInfoResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.game_master.GameMaster.GetFactoryInfoResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.game_master.GameMaster.GetFactoryInfoResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.game_master.GameMaster.GetFactoryInfoResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.attribute_ != java.util.Collections.EMPTY_LIST) {
          result.attribute_ =
            java.util.Collections.unmodifiableList(result.attribute_);
        }
        if (result.statsBucket_ != java.util.Collections.EMPTY_LIST) {
          result.statsBucket_ =
            java.util.Collections.unmodifiableList(result.statsBucket_);
        }
        bnet.protocol.game_master.GameMaster.GetFactoryInfoResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.game_master.GameMaster.GetFactoryInfoResponse) {
          return mergeFrom((bnet.protocol.game_master.GameMaster.GetFactoryInfoResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.game_master.GameMaster.GetFactoryInfoResponse other) {
        if (other == bnet.protocol.game_master.GameMaster.GetFactoryInfoResponse.getDefaultInstance()) return this;
        if (!other.attribute_.isEmpty()) {
          if (result.attribute_.isEmpty()) {
            result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.AttributeProto.Attribute>();
          }
          result.attribute_.addAll(other.attribute_);
        }
        if (!other.statsBucket_.isEmpty()) {
          if (result.statsBucket_.isEmpty()) {
            result.statsBucket_ = new java.util.ArrayList<bnet.protocol.game_master.GameMasterTypes.GameStatsBucket>();
          }
          result.statsBucket_.addAll(other.statsBucket_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.attribute.AttributeProto.Attribute.Builder subBuilder = bnet.protocol.attribute.AttributeProto.Attribute.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAttribute(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bnet.protocol.game_master.GameMasterTypes.GameStatsBucket.Builder subBuilder = bnet.protocol.game_master.GameMasterTypes.GameStatsBucket.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addStatsBucket(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .bnet.protocol.attribute.Attribute attribute = 1;
      public java.util.List<bnet.protocol.attribute.AttributeProto.Attribute> getAttributeList() {
        return java.util.Collections.unmodifiableList(result.attribute_);
      }
      public int getAttributeCount() {
        return result.getAttributeCount();
      }
      public bnet.protocol.attribute.AttributeProto.Attribute getAttribute(int index) {
        return result.getAttribute(index);
      }
      public Builder setAttribute(int index, bnet.protocol.attribute.AttributeProto.Attribute value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.attribute_.set(index, value);
        return this;
      }
      public Builder setAttribute(int index, bnet.protocol.attribute.AttributeProto.Attribute.Builder builderForValue) {
        result.attribute_.set(index, builderForValue.build());
        return this;
      }
      public Builder addAttribute(bnet.protocol.attribute.AttributeProto.Attribute value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.attribute_.isEmpty()) {
          result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.AttributeProto.Attribute>();
        }
        result.attribute_.add(value);
        return this;
      }
      public Builder addAttribute(bnet.protocol.attribute.AttributeProto.Attribute.Builder builderForValue) {
        if (result.attribute_.isEmpty()) {
          result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.AttributeProto.Attribute>();
        }
        result.attribute_.add(builderForValue.build());
        return this;
      }
      public Builder addAllAttribute(
          java.lang.Iterable<? extends bnet.protocol.attribute.AttributeProto.Attribute> values) {
        if (result.attribute_.isEmpty()) {
          result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.AttributeProto.Attribute>();
        }
        super.addAll(values, result.attribute_);
        return this;
      }
      public Builder clearAttribute() {
        result.attribute_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .bnet.protocol.game_master.GameStatsBucket stats_bucket = 2;
      public java.util.List<bnet.protocol.game_master.GameMasterTypes.GameStatsBucket> getStatsBucketList() {
        return java.util.Collections.unmodifiableList(result.statsBucket_);
      }
      public int getStatsBucketCount() {
        return result.getStatsBucketCount();
      }
      public bnet.protocol.game_master.GameMasterTypes.GameStatsBucket getStatsBucket(int index) {
        return result.getStatsBucket(index);
      }
      public Builder setStatsBucket(int index, bnet.protocol.game_master.GameMasterTypes.GameStatsBucket value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.statsBucket_.set(index, value);
        return this;
      }
      public Builder setStatsBucket(int index, bnet.protocol.game_master.GameMasterTypes.GameStatsBucket.Builder builderForValue) {
        result.statsBucket_.set(index, builderForValue.build());
        return this;
      }
      public Builder addStatsBucket(bnet.protocol.game_master.GameMasterTypes.GameStatsBucket value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.statsBucket_.isEmpty()) {
          result.statsBucket_ = new java.util.ArrayList<bnet.protocol.game_master.GameMasterTypes.GameStatsBucket>();
        }
        result.statsBucket_.add(value);
        return this;
      }
      public Builder addStatsBucket(bnet.protocol.game_master.GameMasterTypes.GameStatsBucket.Builder builderForValue) {
        if (result.statsBucket_.isEmpty()) {
          result.statsBucket_ = new java.util.ArrayList<bnet.protocol.game_master.GameMasterTypes.GameStatsBucket>();
        }
        result.statsBucket_.add(builderForValue.build());
        return this;
      }
      public Builder addAllStatsBucket(
          java.lang.Iterable<? extends bnet.protocol.game_master.GameMasterTypes.GameStatsBucket> values) {
        if (result.statsBucket_.isEmpty()) {
          result.statsBucket_ = new java.util.ArrayList<bnet.protocol.game_master.GameMasterTypes.GameStatsBucket>();
        }
        super.addAll(values, result.statsBucket_);
        return this;
      }
      public Builder clearStatsBucket() {
        result.statsBucket_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.game_master.GetFactoryInfoResponse)
    }
    
    static {
      defaultInstance = new GetFactoryInfoResponse(true);
      bnet.protocol.game_master.GameMaster.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.GetFactoryInfoResponse)
  }
  
  public static final class GetGameStatsRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use GetGameStatsRequest.newBuilder() to construct.
    private GetGameStatsRequest() {
      initFields();
    }
    private GetGameStatsRequest(boolean noInit) {}
    
    private static final GetGameStatsRequest defaultInstance;
    public static GetGameStatsRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public GetGameStatsRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_GetGameStatsRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_GetGameStatsRequest_fieldAccessorTable;
    }
    
    // required fixed64 factory_id = 1;
    public static final int FACTORY_ID_FIELD_NUMBER = 1;
    private boolean hasFactoryId;
    private long factoryId_ = 0L;
    public boolean hasFactoryId() { return hasFactoryId; }
    public long getFactoryId() { return factoryId_; }
    
    // required .bnet.protocol.attribute.AttributeFilter filter = 2;
    public static final int FILTER_FIELD_NUMBER = 2;
    private boolean hasFilter;
    private bnet.protocol.attribute.AttributeProto.AttributeFilter filter_;
    public boolean hasFilter() { return hasFilter; }
    public bnet.protocol.attribute.AttributeProto.AttributeFilter getFilter() { return filter_; }
    
    private void initFields() {
      filter_ = bnet.protocol.attribute.AttributeProto.AttributeFilter.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasFactoryId) return false;
      if (!hasFilter) return false;
      if (!getFilter().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasFactoryId()) {
        output.writeFixed64(1, getFactoryId());
      }
      if (hasFilter()) {
        output.writeMessage(2, getFilter());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasFactoryId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, getFactoryId());
      }
      if (hasFilter()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getFilter());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.game_master.GameMaster.GetGameStatsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.GetGameStatsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.GetGameStatsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.GetGameStatsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.GetGameStatsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.GetGameStatsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.GetGameStatsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.GetGameStatsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.GetGameStatsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.GetGameStatsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.game_master.GameMaster.GetGameStatsRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.game_master.GameMaster.GetGameStatsRequest result;
      
      // Construct using bnet.protocol.game_master.GameMaster.GetGameStatsRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.game_master.GameMaster.GetGameStatsRequest();
        return builder;
      }
      
      protected bnet.protocol.game_master.GameMaster.GetGameStatsRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.game_master.GameMaster.GetGameStatsRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.game_master.GameMaster.GetGameStatsRequest.getDescriptor();
      }
      
      public bnet.protocol.game_master.GameMaster.GetGameStatsRequest getDefaultInstanceForType() {
        return bnet.protocol.game_master.GameMaster.GetGameStatsRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.game_master.GameMaster.GetGameStatsRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.game_master.GameMaster.GetGameStatsRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.game_master.GameMaster.GetGameStatsRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.game_master.GameMaster.GetGameStatsRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.game_master.GameMaster.GetGameStatsRequest) {
          return mergeFrom((bnet.protocol.game_master.GameMaster.GetGameStatsRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.game_master.GameMaster.GetGameStatsRequest other) {
        if (other == bnet.protocol.game_master.GameMaster.GetGameStatsRequest.getDefaultInstance()) return this;
        if (other.hasFactoryId()) {
          setFactoryId(other.getFactoryId());
        }
        if (other.hasFilter()) {
          mergeFilter(other.getFilter());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              setFactoryId(input.readFixed64());
              break;
            }
            case 18: {
              bnet.protocol.attribute.AttributeProto.AttributeFilter.Builder subBuilder = bnet.protocol.attribute.AttributeProto.AttributeFilter.newBuilder();
              if (hasFilter()) {
                subBuilder.mergeFrom(getFilter());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFilter(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required fixed64 factory_id = 1;
      public boolean hasFactoryId() {
        return result.hasFactoryId();
      }
      public long getFactoryId() {
        return result.getFactoryId();
      }
      public Builder setFactoryId(long value) {
        result.hasFactoryId = true;
        result.factoryId_ = value;
        return this;
      }
      public Builder clearFactoryId() {
        result.hasFactoryId = false;
        result.factoryId_ = 0L;
        return this;
      }
      
      // required .bnet.protocol.attribute.AttributeFilter filter = 2;
      public boolean hasFilter() {
        return result.hasFilter();
      }
      public bnet.protocol.attribute.AttributeProto.AttributeFilter getFilter() {
        return result.getFilter();
      }
      public Builder setFilter(bnet.protocol.attribute.AttributeProto.AttributeFilter value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFilter = true;
        result.filter_ = value;
        return this;
      }
      public Builder setFilter(bnet.protocol.attribute.AttributeProto.AttributeFilter.Builder builderForValue) {
        result.hasFilter = true;
        result.filter_ = builderForValue.build();
        return this;
      }
      public Builder mergeFilter(bnet.protocol.attribute.AttributeProto.AttributeFilter value) {
        if (result.hasFilter() &&
            result.filter_ != bnet.protocol.attribute.AttributeProto.AttributeFilter.getDefaultInstance()) {
          result.filter_ =
            bnet.protocol.attribute.AttributeProto.AttributeFilter.newBuilder(result.filter_).mergeFrom(value).buildPartial();
        } else {
          result.filter_ = value;
        }
        result.hasFilter = true;
        return this;
      }
      public Builder clearFilter() {
        result.hasFilter = false;
        result.filter_ = bnet.protocol.attribute.AttributeProto.AttributeFilter.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.game_master.GetGameStatsRequest)
    }
    
    static {
      defaultInstance = new GetGameStatsRequest(true);
      bnet.protocol.game_master.GameMaster.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.GetGameStatsRequest)
  }
  
  public static final class GetGameStatsResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use GetGameStatsResponse.newBuilder() to construct.
    private GetGameStatsResponse() {
      initFields();
    }
    private GetGameStatsResponse(boolean noInit) {}
    
    private static final GetGameStatsResponse defaultInstance;
    public static GetGameStatsResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public GetGameStatsResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_GetGameStatsResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_GetGameStatsResponse_fieldAccessorTable;
    }
    
    // repeated .bnet.protocol.game_master.GameStatsBucket stats_bucket = 1;
    public static final int STATS_BUCKET_FIELD_NUMBER = 1;
    private java.util.List<bnet.protocol.game_master.GameMasterTypes.GameStatsBucket> statsBucket_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.game_master.GameMasterTypes.GameStatsBucket> getStatsBucketList() {
      return statsBucket_;
    }
    public int getStatsBucketCount() { return statsBucket_.size(); }
    public bnet.protocol.game_master.GameMasterTypes.GameStatsBucket getStatsBucket(int index) {
      return statsBucket_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (bnet.protocol.game_master.GameMasterTypes.GameStatsBucket element : getStatsBucketList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (bnet.protocol.game_master.GameMasterTypes.GameStatsBucket element : getStatsBucketList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.game_master.GameMaster.GetGameStatsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.GetGameStatsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.GetGameStatsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.GetGameStatsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.GetGameStatsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.GetGameStatsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.GetGameStatsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.GetGameStatsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.GetGameStatsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.GetGameStatsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.game_master.GameMaster.GetGameStatsResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.game_master.GameMaster.GetGameStatsResponse result;
      
      // Construct using bnet.protocol.game_master.GameMaster.GetGameStatsResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.game_master.GameMaster.GetGameStatsResponse();
        return builder;
      }
      
      protected bnet.protocol.game_master.GameMaster.GetGameStatsResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.game_master.GameMaster.GetGameStatsResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.game_master.GameMaster.GetGameStatsResponse.getDescriptor();
      }
      
      public bnet.protocol.game_master.GameMaster.GetGameStatsResponse getDefaultInstanceForType() {
        return bnet.protocol.game_master.GameMaster.GetGameStatsResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.game_master.GameMaster.GetGameStatsResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.game_master.GameMaster.GetGameStatsResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.game_master.GameMaster.GetGameStatsResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.statsBucket_ != java.util.Collections.EMPTY_LIST) {
          result.statsBucket_ =
            java.util.Collections.unmodifiableList(result.statsBucket_);
        }
        bnet.protocol.game_master.GameMaster.GetGameStatsResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.game_master.GameMaster.GetGameStatsResponse) {
          return mergeFrom((bnet.protocol.game_master.GameMaster.GetGameStatsResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.game_master.GameMaster.GetGameStatsResponse other) {
        if (other == bnet.protocol.game_master.GameMaster.GetGameStatsResponse.getDefaultInstance()) return this;
        if (!other.statsBucket_.isEmpty()) {
          if (result.statsBucket_.isEmpty()) {
            result.statsBucket_ = new java.util.ArrayList<bnet.protocol.game_master.GameMasterTypes.GameStatsBucket>();
          }
          result.statsBucket_.addAll(other.statsBucket_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.game_master.GameMasterTypes.GameStatsBucket.Builder subBuilder = bnet.protocol.game_master.GameMasterTypes.GameStatsBucket.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addStatsBucket(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .bnet.protocol.game_master.GameStatsBucket stats_bucket = 1;
      public java.util.List<bnet.protocol.game_master.GameMasterTypes.GameStatsBucket> getStatsBucketList() {
        return java.util.Collections.unmodifiableList(result.statsBucket_);
      }
      public int getStatsBucketCount() {
        return result.getStatsBucketCount();
      }
      public bnet.protocol.game_master.GameMasterTypes.GameStatsBucket getStatsBucket(int index) {
        return result.getStatsBucket(index);
      }
      public Builder setStatsBucket(int index, bnet.protocol.game_master.GameMasterTypes.GameStatsBucket value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.statsBucket_.set(index, value);
        return this;
      }
      public Builder setStatsBucket(int index, bnet.protocol.game_master.GameMasterTypes.GameStatsBucket.Builder builderForValue) {
        result.statsBucket_.set(index, builderForValue.build());
        return this;
      }
      public Builder addStatsBucket(bnet.protocol.game_master.GameMasterTypes.GameStatsBucket value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.statsBucket_.isEmpty()) {
          result.statsBucket_ = new java.util.ArrayList<bnet.protocol.game_master.GameMasterTypes.GameStatsBucket>();
        }
        result.statsBucket_.add(value);
        return this;
      }
      public Builder addStatsBucket(bnet.protocol.game_master.GameMasterTypes.GameStatsBucket.Builder builderForValue) {
        if (result.statsBucket_.isEmpty()) {
          result.statsBucket_ = new java.util.ArrayList<bnet.protocol.game_master.GameMasterTypes.GameStatsBucket>();
        }
        result.statsBucket_.add(builderForValue.build());
        return this;
      }
      public Builder addAllStatsBucket(
          java.lang.Iterable<? extends bnet.protocol.game_master.GameMasterTypes.GameStatsBucket> values) {
        if (result.statsBucket_.isEmpty()) {
          result.statsBucket_ = new java.util.ArrayList<bnet.protocol.game_master.GameMasterTypes.GameStatsBucket>();
        }
        super.addAll(values, result.statsBucket_);
        return this;
      }
      public Builder clearStatsBucket() {
        result.statsBucket_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.game_master.GetGameStatsResponse)
    }
    
    static {
      defaultInstance = new GetGameStatsResponse(true);
      bnet.protocol.game_master.GameMaster.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.GetGameStatsResponse)
  }
  
  public static final class FactoryUpdateNotification extends
      com.google.protobuf.GeneratedMessage {
    // Use FactoryUpdateNotification.newBuilder() to construct.
    private FactoryUpdateNotification() {
      initFields();
    }
    private FactoryUpdateNotification(boolean noInit) {}
    
    private static final FactoryUpdateNotification defaultInstance;
    public static FactoryUpdateNotification getDefaultInstance() {
      return defaultInstance;
    }
    
    public FactoryUpdateNotification getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_FactoryUpdateNotification_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_FactoryUpdateNotification_fieldAccessorTable;
    }
    
    public enum Operation
        implements com.google.protobuf.ProtocolMessageEnum {
      ADD(0, 1),
      REMOVE(1, 2),
      CHANGE(2, 3),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static Operation valueOf(int value) {
        switch (value) {
          case 1: return ADD;
          case 2: return REMOVE;
          case 3: return CHANGE;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<Operation>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Operation>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Operation>() {
              public Operation findValueByNumber(int number) {
                return Operation.valueOf(number)
      ;        }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return bnet.protocol.game_master.GameMaster.FactoryUpdateNotification.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final Operation[] VALUES = {
        ADD, REMOVE, CHANGE, 
      };
      public static Operation valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      private final int index;
      private final int value;
      private Operation(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      static {
        bnet.protocol.game_master.GameMaster.getDescriptor();
      }
      
      // @@protoc_insertion_point(enum_scope:bnet.protocol.game_master.FactoryUpdateNotification.Operation)
    }
    
    // required .bnet.protocol.game_master.FactoryUpdateNotification.Operation op = 1;
    public static final int OP_FIELD_NUMBER = 1;
    private boolean hasOp;
    private bnet.protocol.game_master.GameMaster.FactoryUpdateNotification.Operation op_;
    public boolean hasOp() { return hasOp; }
    public bnet.protocol.game_master.GameMaster.FactoryUpdateNotification.Operation getOp() { return op_; }
    
    // required .bnet.protocol.game_master.GameFactoryDescription description = 2;
    public static final int DESCRIPTION_FIELD_NUMBER = 2;
    private boolean hasDescription;
    private bnet.protocol.game_master.GameMasterTypes.GameFactoryDescription description_;
    public boolean hasDescription() { return hasDescription; }
    public bnet.protocol.game_master.GameMasterTypes.GameFactoryDescription getDescription() { return description_; }
    
    // optional fixed32 program_id = 3;
    public static final int PROGRAM_ID_FIELD_NUMBER = 3;
    private boolean hasProgramId;
    private int programId_ = 0;
    public boolean hasProgramId() { return hasProgramId; }
    public int getProgramId() { return programId_; }
    
    private void initFields() {
      op_ = bnet.protocol.game_master.GameMaster.FactoryUpdateNotification.Operation.ADD;
      description_ = bnet.protocol.game_master.GameMasterTypes.GameFactoryDescription.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasOp) return false;
      if (!hasDescription) return false;
      if (!getDescription().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasOp()) {
        output.writeEnum(1, getOp().getNumber());
      }
      if (hasDescription()) {
        output.writeMessage(2, getDescription());
      }
      if (hasProgramId()) {
        output.writeFixed32(3, getProgramId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasOp()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, getOp().getNumber());
      }
      if (hasDescription()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getDescription());
      }
      if (hasProgramId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(3, getProgramId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.game_master.GameMaster.FactoryUpdateNotification parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.FactoryUpdateNotification parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.FactoryUpdateNotification parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.FactoryUpdateNotification parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.FactoryUpdateNotification parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.FactoryUpdateNotification parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.FactoryUpdateNotification parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.FactoryUpdateNotification parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.FactoryUpdateNotification parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.FactoryUpdateNotification parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.game_master.GameMaster.FactoryUpdateNotification prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.game_master.GameMaster.FactoryUpdateNotification result;
      
      // Construct using bnet.protocol.game_master.GameMaster.FactoryUpdateNotification.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.game_master.GameMaster.FactoryUpdateNotification();
        return builder;
      }
      
      protected bnet.protocol.game_master.GameMaster.FactoryUpdateNotification internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.game_master.GameMaster.FactoryUpdateNotification();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.game_master.GameMaster.FactoryUpdateNotification.getDescriptor();
      }
      
      public bnet.protocol.game_master.GameMaster.FactoryUpdateNotification getDefaultInstanceForType() {
        return bnet.protocol.game_master.GameMaster.FactoryUpdateNotification.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.game_master.GameMaster.FactoryUpdateNotification build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.game_master.GameMaster.FactoryUpdateNotification buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.game_master.GameMaster.FactoryUpdateNotification buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.game_master.GameMaster.FactoryUpdateNotification returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.game_master.GameMaster.FactoryUpdateNotification) {
          return mergeFrom((bnet.protocol.game_master.GameMaster.FactoryUpdateNotification)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.game_master.GameMaster.FactoryUpdateNotification other) {
        if (other == bnet.protocol.game_master.GameMaster.FactoryUpdateNotification.getDefaultInstance()) return this;
        if (other.hasOp()) {
          setOp(other.getOp());
        }
        if (other.hasDescription()) {
          mergeDescription(other.getDescription());
        }
        if (other.hasProgramId()) {
          setProgramId(other.getProgramId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              bnet.protocol.game_master.GameMaster.FactoryUpdateNotification.Operation value = bnet.protocol.game_master.GameMaster.FactoryUpdateNotification.Operation.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                setOp(value);
              }
              break;
            }
            case 18: {
              bnet.protocol.game_master.GameMasterTypes.GameFactoryDescription.Builder subBuilder = bnet.protocol.game_master.GameMasterTypes.GameFactoryDescription.newBuilder();
              if (hasDescription()) {
                subBuilder.mergeFrom(getDescription());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setDescription(subBuilder.buildPartial());
              break;
            }
            case 29: {
              setProgramId(input.readFixed32());
              break;
            }
          }
        }
      }
      
      
      // required .bnet.protocol.game_master.FactoryUpdateNotification.Operation op = 1;
      public boolean hasOp() {
        return result.hasOp();
      }
      public bnet.protocol.game_master.GameMaster.FactoryUpdateNotification.Operation getOp() {
        return result.getOp();
      }
      public Builder setOp(bnet.protocol.game_master.GameMaster.FactoryUpdateNotification.Operation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasOp = true;
        result.op_ = value;
        return this;
      }
      public Builder clearOp() {
        result.hasOp = false;
        result.op_ = bnet.protocol.game_master.GameMaster.FactoryUpdateNotification.Operation.ADD;
        return this;
      }
      
      // required .bnet.protocol.game_master.GameFactoryDescription description = 2;
      public boolean hasDescription() {
        return result.hasDescription();
      }
      public bnet.protocol.game_master.GameMasterTypes.GameFactoryDescription getDescription() {
        return result.getDescription();
      }
      public Builder setDescription(bnet.protocol.game_master.GameMasterTypes.GameFactoryDescription value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasDescription = true;
        result.description_ = value;
        return this;
      }
      public Builder setDescription(bnet.protocol.game_master.GameMasterTypes.GameFactoryDescription.Builder builderForValue) {
        result.hasDescription = true;
        result.description_ = builderForValue.build();
        return this;
      }
      public Builder mergeDescription(bnet.protocol.game_master.GameMasterTypes.GameFactoryDescription value) {
        if (result.hasDescription() &&
            result.description_ != bnet.protocol.game_master.GameMasterTypes.GameFactoryDescription.getDefaultInstance()) {
          result.description_ =
            bnet.protocol.game_master.GameMasterTypes.GameFactoryDescription.newBuilder(result.description_).mergeFrom(value).buildPartial();
        } else {
          result.description_ = value;
        }
        result.hasDescription = true;
        return this;
      }
      public Builder clearDescription() {
        result.hasDescription = false;
        result.description_ = bnet.protocol.game_master.GameMasterTypes.GameFactoryDescription.getDefaultInstance();
        return this;
      }
      
      // optional fixed32 program_id = 3;
      public boolean hasProgramId() {
        return result.hasProgramId();
      }
      public int getProgramId() {
        return result.getProgramId();
      }
      public Builder setProgramId(int value) {
        result.hasProgramId = true;
        result.programId_ = value;
        return this;
      }
      public Builder clearProgramId() {
        result.hasProgramId = false;
        result.programId_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.game_master.FactoryUpdateNotification)
    }
    
    static {
      defaultInstance = new FactoryUpdateNotification(true);
      bnet.protocol.game_master.GameMaster.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.FactoryUpdateNotification)
  }
  
  public static final class GameFoundNotification extends
      com.google.protobuf.GeneratedMessage {
    // Use GameFoundNotification.newBuilder() to construct.
    private GameFoundNotification() {
      initFields();
    }
    private GameFoundNotification(boolean noInit) {}
    
    private static final GameFoundNotification defaultInstance;
    public static GameFoundNotification getDefaultInstance() {
      return defaultInstance;
    }
    
    public GameFoundNotification getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_GameFoundNotification_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.game_master.GameMaster.internal_static_bnet_protocol_game_master_GameFoundNotification_fieldAccessorTable;
    }
    
    // required uint64 request_id = 1;
    public static final int REQUEST_ID_FIELD_NUMBER = 1;
    private boolean hasRequestId;
    private long requestId_ = 0L;
    public boolean hasRequestId() { return hasRequestId; }
    public long getRequestId() { return requestId_; }
    
    // optional uint32 error_code = 2;
    public static final int ERROR_CODE_FIELD_NUMBER = 2;
    private boolean hasErrorCode;
    private int errorCode_ = 0;
    public boolean hasErrorCode() { return hasErrorCode; }
    public int getErrorCode() { return errorCode_; }
    
    // optional .bnet.protocol.game_master.GameHandle game_handle = 3;
    public static final int GAME_HANDLE_FIELD_NUMBER = 3;
    private boolean hasGameHandle;
    private bnet.protocol.game_master.GameMasterTypes.GameHandle gameHandle_;
    public boolean hasGameHandle() { return hasGameHandle; }
    public bnet.protocol.game_master.GameMasterTypes.GameHandle getGameHandle() { return gameHandle_; }
    
    // repeated .bnet.protocol.game_master.ConnectInfo connect_info = 4;
    public static final int CONNECT_INFO_FIELD_NUMBER = 4;
    private java.util.List<bnet.protocol.game_master.GameMasterTypes.ConnectInfo> connectInfo_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.game_master.GameMasterTypes.ConnectInfo> getConnectInfoList() {
      return connectInfo_;
    }
    public int getConnectInfoCount() { return connectInfo_.size(); }
    public bnet.protocol.game_master.GameMasterTypes.ConnectInfo getConnectInfo(int index) {
      return connectInfo_.get(index);
    }
    
    private void initFields() {
      gameHandle_ = bnet.protocol.game_master.GameMasterTypes.GameHandle.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasRequestId) return false;
      if (hasGameHandle()) {
        if (!getGameHandle().isInitialized()) return false;
      }
      for (bnet.protocol.game_master.GameMasterTypes.ConnectInfo element : getConnectInfoList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasRequestId()) {
        output.writeUInt64(1, getRequestId());
      }
      if (hasErrorCode()) {
        output.writeUInt32(2, getErrorCode());
      }
      if (hasGameHandle()) {
        output.writeMessage(3, getGameHandle());
      }
      for (bnet.protocol.game_master.GameMasterTypes.ConnectInfo element : getConnectInfoList()) {
        output.writeMessage(4, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasRequestId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, getRequestId());
      }
      if (hasErrorCode()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getErrorCode());
      }
      if (hasGameHandle()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getGameHandle());
      }
      for (bnet.protocol.game_master.GameMasterTypes.ConnectInfo element : getConnectInfoList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.game_master.GameMaster.GameFoundNotification parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.GameFoundNotification parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.GameFoundNotification parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.GameFoundNotification parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.GameFoundNotification parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.GameFoundNotification parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.GameFoundNotification parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.GameFoundNotification parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_master.GameMaster.GameFoundNotification parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_master.GameMaster.GameFoundNotification parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.game_master.GameMaster.GameFoundNotification prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.game_master.GameMaster.GameFoundNotification result;
      
      // Construct using bnet.protocol.game_master.GameMaster.GameFoundNotification.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.game_master.GameMaster.GameFoundNotification();
        return builder;
      }
      
      protected bnet.protocol.game_master.GameMaster.GameFoundNotification internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.game_master.GameMaster.GameFoundNotification();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.game_master.GameMaster.GameFoundNotification.getDescriptor();
      }
      
      public bnet.protocol.game_master.GameMaster.GameFoundNotification getDefaultInstanceForType() {
        return bnet.protocol.game_master.GameMaster.GameFoundNotification.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.game_master.GameMaster.GameFoundNotification build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.game_master.GameMaster.GameFoundNotification buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.game_master.GameMaster.GameFoundNotification buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.connectInfo_ != java.util.Collections.EMPTY_LIST) {
          result.connectInfo_ =
            java.util.Collections.unmodifiableList(result.connectInfo_);
        }
        bnet.protocol.game_master.GameMaster.GameFoundNotification returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.game_master.GameMaster.GameFoundNotification) {
          return mergeFrom((bnet.protocol.game_master.GameMaster.GameFoundNotification)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.game_master.GameMaster.GameFoundNotification other) {
        if (other == bnet.protocol.game_master.GameMaster.GameFoundNotification.getDefaultInstance()) return this;
        if (other.hasRequestId()) {
          setRequestId(other.getRequestId());
        }
        if (other.hasErrorCode()) {
          setErrorCode(other.getErrorCode());
        }
        if (other.hasGameHandle()) {
          mergeGameHandle(other.getGameHandle());
        }
        if (!other.connectInfo_.isEmpty()) {
          if (result.connectInfo_.isEmpty()) {
            result.connectInfo_ = new java.util.ArrayList<bnet.protocol.game_master.GameMasterTypes.ConnectInfo>();
          }
          result.connectInfo_.addAll(other.connectInfo_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setRequestId(input.readUInt64());
              break;
            }
            case 16: {
              setErrorCode(input.readUInt32());
              break;
            }
            case 26: {
              bnet.protocol.game_master.GameMasterTypes.GameHandle.Builder subBuilder = bnet.protocol.game_master.GameMasterTypes.GameHandle.newBuilder();
              if (hasGameHandle()) {
                subBuilder.mergeFrom(getGameHandle());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGameHandle(subBuilder.buildPartial());
              break;
            }
            case 34: {
              bnet.protocol.game_master.GameMasterTypes.ConnectInfo.Builder subBuilder = bnet.protocol.game_master.GameMasterTypes.ConnectInfo.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addConnectInfo(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required uint64 request_id = 1;
      public boolean hasRequestId() {
        return result.hasRequestId();
      }
      public long getRequestId() {
        return result.getRequestId();
      }
      public Builder setRequestId(long value) {
        result.hasRequestId = true;
        result.requestId_ = value;
        return this;
      }
      public Builder clearRequestId() {
        result.hasRequestId = false;
        result.requestId_ = 0L;
        return this;
      }
      
      // optional uint32 error_code = 2;
      public boolean hasErrorCode() {
        return result.hasErrorCode();
      }
      public int getErrorCode() {
        return result.getErrorCode();
      }
      public Builder setErrorCode(int value) {
        result.hasErrorCode = true;
        result.errorCode_ = value;
        return this;
      }
      public Builder clearErrorCode() {
        result.hasErrorCode = false;
        result.errorCode_ = 0;
        return this;
      }
      
      // optional .bnet.protocol.game_master.GameHandle game_handle = 3;
      public boolean hasGameHandle() {
        return result.hasGameHandle();
      }
      public bnet.protocol.game_master.GameMasterTypes.GameHandle getGameHandle() {
        return result.getGameHandle();
      }
      public Builder setGameHandle(bnet.protocol.game_master.GameMasterTypes.GameHandle value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasGameHandle = true;
        result.gameHandle_ = value;
        return this;
      }
      public Builder setGameHandle(bnet.protocol.game_master.GameMasterTypes.GameHandle.Builder builderForValue) {
        result.hasGameHandle = true;
        result.gameHandle_ = builderForValue.build();
        return this;
      }
      public Builder mergeGameHandle(bnet.protocol.game_master.GameMasterTypes.GameHandle value) {
        if (result.hasGameHandle() &&
            result.gameHandle_ != bnet.protocol.game_master.GameMasterTypes.GameHandle.getDefaultInstance()) {
          result.gameHandle_ =
            bnet.protocol.game_master.GameMasterTypes.GameHandle.newBuilder(result.gameHandle_).mergeFrom(value).buildPartial();
        } else {
          result.gameHandle_ = value;
        }
        result.hasGameHandle = true;
        return this;
      }
      public Builder clearGameHandle() {
        result.hasGameHandle = false;
        result.gameHandle_ = bnet.protocol.game_master.GameMasterTypes.GameHandle.getDefaultInstance();
        return this;
      }
      
      // repeated .bnet.protocol.game_master.ConnectInfo connect_info = 4;
      public java.util.List<bnet.protocol.game_master.GameMasterTypes.ConnectInfo> getConnectInfoList() {
        return java.util.Collections.unmodifiableList(result.connectInfo_);
      }
      public int getConnectInfoCount() {
        return result.getConnectInfoCount();
      }
      public bnet.protocol.game_master.GameMasterTypes.ConnectInfo getConnectInfo(int index) {
        return result.getConnectInfo(index);
      }
      public Builder setConnectInfo(int index, bnet.protocol.game_master.GameMasterTypes.ConnectInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.connectInfo_.set(index, value);
        return this;
      }
      public Builder setConnectInfo(int index, bnet.protocol.game_master.GameMasterTypes.ConnectInfo.Builder builderForValue) {
        result.connectInfo_.set(index, builderForValue.build());
        return this;
      }
      public Builder addConnectInfo(bnet.protocol.game_master.GameMasterTypes.ConnectInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.connectInfo_.isEmpty()) {
          result.connectInfo_ = new java.util.ArrayList<bnet.protocol.game_master.GameMasterTypes.ConnectInfo>();
        }
        result.connectInfo_.add(value);
        return this;
      }
      public Builder addConnectInfo(bnet.protocol.game_master.GameMasterTypes.ConnectInfo.Builder builderForValue) {
        if (result.connectInfo_.isEmpty()) {
          result.connectInfo_ = new java.util.ArrayList<bnet.protocol.game_master.GameMasterTypes.ConnectInfo>();
        }
        result.connectInfo_.add(builderForValue.build());
        return this;
      }
      public Builder addAllConnectInfo(
          java.lang.Iterable<? extends bnet.protocol.game_master.GameMasterTypes.ConnectInfo> values) {
        if (result.connectInfo_.isEmpty()) {
          result.connectInfo_ = new java.util.ArrayList<bnet.protocol.game_master.GameMasterTypes.ConnectInfo>();
        }
        super.addAll(values, result.connectInfo_);
        return this;
      }
      public Builder clearConnectInfo() {
        result.connectInfo_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.game_master.GameFoundNotification)
    }
    
    static {
      defaultInstance = new GameFoundNotification(true);
      bnet.protocol.game_master.GameMaster.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.GameFoundNotification)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_game_master_JoinGameRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_game_master_JoinGameRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_game_master_JoinGameResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_game_master_JoinGameResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_game_master_ListFactoriesRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_game_master_ListFactoriesRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_game_master_ListFactoriesResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_game_master_ListFactoriesResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_game_master_FindGameRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_game_master_FindGameRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_game_master_FindGameResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_game_master_FindGameResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_game_master_CancelFindGameRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_game_master_CancelFindGameRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_game_master_GameEndedNotification_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_game_master_GameEndedNotification_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_game_master_PlayerLeftNotification_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_game_master_PlayerLeftNotification_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_game_master_RegisterServerRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_game_master_RegisterServerRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_game_master_UnregisterServerRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_game_master_UnregisterServerRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_game_master_RegisterUtilitiesRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_game_master_RegisterUtilitiesRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_game_master_UnregisterUtilitiesRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_game_master_UnregisterUtilitiesRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_game_master_SubscribeRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_game_master_SubscribeRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_game_master_SubscribeResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_game_master_SubscribeResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_game_master_UnsubscribeRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_game_master_UnsubscribeRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_game_master_ChangeGameRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_game_master_ChangeGameRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_game_master_GetFactoryInfoRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_game_master_GetFactoryInfoRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_game_master_GetFactoryInfoResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_game_master_GetFactoryInfoResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_game_master_GetGameStatsRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_game_master_GetGameStatsRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_game_master_GetGameStatsResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_game_master_GetGameStatsResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_game_master_FactoryUpdateNotification_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_game_master_FactoryUpdateNotification_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_game_master_GameFoundNotification_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_game_master_GameFoundNotification_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n%service/game_master/game_master.proto\022" +
      "\031bnet.protocol.game_master\032&service/game" +
      "_master/game_factory.proto\032%service/serv" +
      "er_pool/server_pool.proto\032#service/chann" +
      "el/channel_types.proto\032\034lib/protocol/att" +
      "ribute.proto\032\031lib/protocol/entity.proto\032" +
      "\021lib/rpc/rpc.proto\032+service/game_master/" +
      "game_master_types.proto\"\304\001\n\017JoinGameRequ" +
      "est\022:\n\013game_handle\030\001 \002(\0132%.bnet.protocol" +
      ".game_master.GameHandle\0221\n\006player\030\002 \003(\0132",
      "!.bnet.protocol.game_master.Player\022B\n\017ch" +
      "annel_request\030\003 \001(\0132).bnet.protocol.chan" +
      "nel.JoinChannelRequest\"P\n\020JoinGameRespon" +
      "se\022<\n\014connect_info\030\001 \003(\0132&.bnet.protocol" +
      ".game_master.ConnectInfo\"z\n\024ListFactorie" +
      "sRequest\0228\n\006filter\030\001 \002(\0132(.bnet.protocol" +
      ".attribute.AttributeFilter\022\023\n\013start_inde" +
      "x\030\002 \001(\r\022\023\n\013max_results\030\003 \001(\r\"v\n\025ListFact" +
      "oriesResponse\022F\n\013description\030\001 \003(\01321.bne" +
      "t.protocol.game_master.GameFactoryDescri",
      "ption\022\025\n\rtotal_results\030\002 \001(\r\"\360\001\n\017FindGam" +
      "eRequest\0221\n\006player\030\001 \003(\0132!.bnet.protocol" +
      ".game_master.Player\022\022\n\nfactory_id\030\002 \001(\006\022" +
      "=\n\nproperties\030\003 \001(\0132).bnet.protocol.game" +
      "_master.GameProperties\022\021\n\tobject_id\030\004 \002(" +
      "\004\022D\n\017channel_request\030\005 \001(\0132+.bnet.protoc" +
      "ol.channel.CreateChannelRequest\":\n\020FindG" +
      "ameResponse\022\022\n\nrequest_id\030\001 \001(\004\022\022\n\nfacto" +
      "ry_id\030\002 \001(\006\"?\n\025CancelFindGameRequest\022\022\n\n" +
      "factory_id\030\001 \002(\006\022\022\n\nrequest_id\030\002 \002(\004\"S\n\025",
      "GameEndedNotification\022:\n\013game_handle\030\001 \002" +
      "(\0132%.bnet.protocol.game_master.GameHandl" +
      "e\"\216\001\n\026PlayerLeftNotification\022:\n\013game_han" +
      "dle\030\001 \002(\0132%.bnet.protocol.game_master.Ga" +
      "meHandle\022(\n\007toon_id\030\002 \002(\0132\027.bnet.protoco" +
      "l.EntityId\022\016\n\006reason\030\003 \001(\r\"\231\001\n\025RegisterS" +
      "erverRequest\0225\n\tattribute\030\001 \003(\0132\".bnet.p" +
      "rotocol.attribute.Attribute\0225\n\005state\030\002 \001" +
      "(\0132&.bnet.protocol.server_pool.ServerSta" +
      "te\022\022\n\nprogram_id\030\003 \002(\007\"\031\n\027UnregisterServ",
      "erRequest\"\234\001\n\030RegisterUtilitiesRequest\0225" +
      "\n\tattribute\030\001 \003(\0132\".bnet.protocol.attrib" +
      "ute.Attribute\0225\n\005state\030\002 \001(\0132&.bnet.prot" +
      "ocol.server_pool.ServerState\022\022\n\nprogram_" +
      "id\030\003 \002(\007\"\034\n\032UnregisterUtilitiesRequest\"%" +
      "\n\020SubscribeRequest\022\021\n\tobject_id\030\001 \002(\004\",\n" +
      "\021SubscribeResponse\022\027\n\017subscription_id\030\001 " +
      "\001(\004\"-\n\022UnsubscribeRequest\022\027\n\017subscriptio" +
      "n_id\030\001 \002(\004\"\245\001\n\021ChangeGameRequest\022:\n\013game" +
      "_handle\030\001 \002(\0132%.bnet.protocol.game_maste",
      "r.GameHandle\022\014\n\004open\030\002 \001(\010\0225\n\tattribute\030" +
      "\003 \003(\0132\".bnet.protocol.attribute.Attribut" +
      "e\022\017\n\007replace\030\004 \001(\010\"+\n\025GetFactoryInfoRequ" +
      "est\022\022\n\nfactory_id\030\001 \002(\006\"\221\001\n\026GetFactoryIn" +
      "foResponse\0225\n\tattribute\030\001 \003(\0132\".bnet.pro" +
      "tocol.attribute.Attribute\022@\n\014stats_bucke" +
      "t\030\002 \003(\0132*.bnet.protocol.game_master.Game" +
      "StatsBucket\"c\n\023GetGameStatsRequest\022\022\n\nfa" +
      "ctory_id\030\001 \002(\006\0228\n\006filter\030\002 \002(\0132(.bnet.pr" +
      "otocol.attribute.AttributeFilter\"X\n\024GetG",
      "ameStatsResponse\022@\n\014stats_bucket\030\001 \003(\0132*" +
      ".bnet.protocol.game_master.GameStatsBuck" +
      "et\"\361\001\n\031FactoryUpdateNotification\022J\n\002op\030\001" +
      " \002(\0162>.bnet.protocol.game_master.Factory" +
      "UpdateNotification.Operation\022F\n\013descript" +
      "ion\030\002 \002(\01321.bnet.protocol.game_master.Ga" +
      "meFactoryDescription\022\022\n\nprogram_id\030\003 \001(\007" +
      "\",\n\tOperation\022\007\n\003ADD\020\001\022\n\n\006REMOVE\020\002\022\n\n\006CH" +
      "ANGE\020\003\"\271\001\n\025GameFoundNotification\022\022\n\nrequ" +
      "est_id\030\001 \002(\004\022\022\n\nerror_code\030\002 \001(\r\022:\n\013game",
      "_handle\030\003 \001(\0132%.bnet.protocol.game_maste" +
      "r.GameHandle\022<\n\014connect_info\030\004 \003(\0132&.bne" +
      "t.protocol.game_master.ConnectInfo"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_bnet_protocol_game_master_JoinGameRequest_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_bnet_protocol_game_master_JoinGameRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_game_master_JoinGameRequest_descriptor,
              new java.lang.String[] { "GameHandle", "Player", "ChannelRequest", },
              bnet.protocol.game_master.GameMaster.JoinGameRequest.class,
              bnet.protocol.game_master.GameMaster.JoinGameRequest.Builder.class);
          internal_static_bnet_protocol_game_master_JoinGameResponse_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_bnet_protocol_game_master_JoinGameResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_game_master_JoinGameResponse_descriptor,
              new java.lang.String[] { "ConnectInfo", },
              bnet.protocol.game_master.GameMaster.JoinGameResponse.class,
              bnet.protocol.game_master.GameMaster.JoinGameResponse.Builder.class);
          internal_static_bnet_protocol_game_master_ListFactoriesRequest_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_bnet_protocol_game_master_ListFactoriesRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_game_master_ListFactoriesRequest_descriptor,
              new java.lang.String[] { "Filter", "StartIndex", "MaxResults", },
              bnet.protocol.game_master.GameMaster.ListFactoriesRequest.class,
              bnet.protocol.game_master.GameMaster.ListFactoriesRequest.Builder.class);
          internal_static_bnet_protocol_game_master_ListFactoriesResponse_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_bnet_protocol_game_master_ListFactoriesResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_game_master_ListFactoriesResponse_descriptor,
              new java.lang.String[] { "Description", "TotalResults", },
              bnet.protocol.game_master.GameMaster.ListFactoriesResponse.class,
              bnet.protocol.game_master.GameMaster.ListFactoriesResponse.Builder.class);
          internal_static_bnet_protocol_game_master_FindGameRequest_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_bnet_protocol_game_master_FindGameRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_game_master_FindGameRequest_descriptor,
              new java.lang.String[] { "Player", "FactoryId", "Properties", "ObjectId", "ChannelRequest", },
              bnet.protocol.game_master.GameMaster.FindGameRequest.class,
              bnet.protocol.game_master.GameMaster.FindGameRequest.Builder.class);
          internal_static_bnet_protocol_game_master_FindGameResponse_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_bnet_protocol_game_master_FindGameResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_game_master_FindGameResponse_descriptor,
              new java.lang.String[] { "RequestId", "FactoryId", },
              bnet.protocol.game_master.GameMaster.FindGameResponse.class,
              bnet.protocol.game_master.GameMaster.FindGameResponse.Builder.class);
          internal_static_bnet_protocol_game_master_CancelFindGameRequest_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_bnet_protocol_game_master_CancelFindGameRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_game_master_CancelFindGameRequest_descriptor,
              new java.lang.String[] { "FactoryId", "RequestId", },
              bnet.protocol.game_master.GameMaster.CancelFindGameRequest.class,
              bnet.protocol.game_master.GameMaster.CancelFindGameRequest.Builder.class);
          internal_static_bnet_protocol_game_master_GameEndedNotification_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_bnet_protocol_game_master_GameEndedNotification_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_game_master_GameEndedNotification_descriptor,
              new java.lang.String[] { "GameHandle", },
              bnet.protocol.game_master.GameMaster.GameEndedNotification.class,
              bnet.protocol.game_master.GameMaster.GameEndedNotification.Builder.class);
          internal_static_bnet_protocol_game_master_PlayerLeftNotification_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_bnet_protocol_game_master_PlayerLeftNotification_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_game_master_PlayerLeftNotification_descriptor,
              new java.lang.String[] { "GameHandle", "ToonId", "Reason", },
              bnet.protocol.game_master.GameMaster.PlayerLeftNotification.class,
              bnet.protocol.game_master.GameMaster.PlayerLeftNotification.Builder.class);
          internal_static_bnet_protocol_game_master_RegisterServerRequest_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_bnet_protocol_game_master_RegisterServerRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_game_master_RegisterServerRequest_descriptor,
              new java.lang.String[] { "Attribute", "State", "ProgramId", },
              bnet.protocol.game_master.GameMaster.RegisterServerRequest.class,
              bnet.protocol.game_master.GameMaster.RegisterServerRequest.Builder.class);
          internal_static_bnet_protocol_game_master_UnregisterServerRequest_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_bnet_protocol_game_master_UnregisterServerRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_game_master_UnregisterServerRequest_descriptor,
              new java.lang.String[] { },
              bnet.protocol.game_master.GameMaster.UnregisterServerRequest.class,
              bnet.protocol.game_master.GameMaster.UnregisterServerRequest.Builder.class);
          internal_static_bnet_protocol_game_master_RegisterUtilitiesRequest_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_bnet_protocol_game_master_RegisterUtilitiesRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_game_master_RegisterUtilitiesRequest_descriptor,
              new java.lang.String[] { "Attribute", "State", "ProgramId", },
              bnet.protocol.game_master.GameMaster.RegisterUtilitiesRequest.class,
              bnet.protocol.game_master.GameMaster.RegisterUtilitiesRequest.Builder.class);
          internal_static_bnet_protocol_game_master_UnregisterUtilitiesRequest_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_bnet_protocol_game_master_UnregisterUtilitiesRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_game_master_UnregisterUtilitiesRequest_descriptor,
              new java.lang.String[] { },
              bnet.protocol.game_master.GameMaster.UnregisterUtilitiesRequest.class,
              bnet.protocol.game_master.GameMaster.UnregisterUtilitiesRequest.Builder.class);
          internal_static_bnet_protocol_game_master_SubscribeRequest_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_bnet_protocol_game_master_SubscribeRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_game_master_SubscribeRequest_descriptor,
              new java.lang.String[] { "ObjectId", },
              bnet.protocol.game_master.GameMaster.SubscribeRequest.class,
              bnet.protocol.game_master.GameMaster.SubscribeRequest.Builder.class);
          internal_static_bnet_protocol_game_master_SubscribeResponse_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_bnet_protocol_game_master_SubscribeResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_game_master_SubscribeResponse_descriptor,
              new java.lang.String[] { "SubscriptionId", },
              bnet.protocol.game_master.GameMaster.SubscribeResponse.class,
              bnet.protocol.game_master.GameMaster.SubscribeResponse.Builder.class);
          internal_static_bnet_protocol_game_master_UnsubscribeRequest_descriptor =
            getDescriptor().getMessageTypes().get(15);
          internal_static_bnet_protocol_game_master_UnsubscribeRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_game_master_UnsubscribeRequest_descriptor,
              new java.lang.String[] { "SubscriptionId", },
              bnet.protocol.game_master.GameMaster.UnsubscribeRequest.class,
              bnet.protocol.game_master.GameMaster.UnsubscribeRequest.Builder.class);
          internal_static_bnet_protocol_game_master_ChangeGameRequest_descriptor =
            getDescriptor().getMessageTypes().get(16);
          internal_static_bnet_protocol_game_master_ChangeGameRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_game_master_ChangeGameRequest_descriptor,
              new java.lang.String[] { "GameHandle", "Open", "Attribute", "Replace", },
              bnet.protocol.game_master.GameMaster.ChangeGameRequest.class,
              bnet.protocol.game_master.GameMaster.ChangeGameRequest.Builder.class);
          internal_static_bnet_protocol_game_master_GetFactoryInfoRequest_descriptor =
            getDescriptor().getMessageTypes().get(17);
          internal_static_bnet_protocol_game_master_GetFactoryInfoRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_game_master_GetFactoryInfoRequest_descriptor,
              new java.lang.String[] { "FactoryId", },
              bnet.protocol.game_master.GameMaster.GetFactoryInfoRequest.class,
              bnet.protocol.game_master.GameMaster.GetFactoryInfoRequest.Builder.class);
          internal_static_bnet_protocol_game_master_GetFactoryInfoResponse_descriptor =
            getDescriptor().getMessageTypes().get(18);
          internal_static_bnet_protocol_game_master_GetFactoryInfoResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_game_master_GetFactoryInfoResponse_descriptor,
              new java.lang.String[] { "Attribute", "StatsBucket", },
              bnet.protocol.game_master.GameMaster.GetFactoryInfoResponse.class,
              bnet.protocol.game_master.GameMaster.GetFactoryInfoResponse.Builder.class);
          internal_static_bnet_protocol_game_master_GetGameStatsRequest_descriptor =
            getDescriptor().getMessageTypes().get(19);
          internal_static_bnet_protocol_game_master_GetGameStatsRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_game_master_GetGameStatsRequest_descriptor,
              new java.lang.String[] { "FactoryId", "Filter", },
              bnet.protocol.game_master.GameMaster.GetGameStatsRequest.class,
              bnet.protocol.game_master.GameMaster.GetGameStatsRequest.Builder.class);
          internal_static_bnet_protocol_game_master_GetGameStatsResponse_descriptor =
            getDescriptor().getMessageTypes().get(20);
          internal_static_bnet_protocol_game_master_GetGameStatsResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_game_master_GetGameStatsResponse_descriptor,
              new java.lang.String[] { "StatsBucket", },
              bnet.protocol.game_master.GameMaster.GetGameStatsResponse.class,
              bnet.protocol.game_master.GameMaster.GetGameStatsResponse.Builder.class);
          internal_static_bnet_protocol_game_master_FactoryUpdateNotification_descriptor =
            getDescriptor().getMessageTypes().get(21);
          internal_static_bnet_protocol_game_master_FactoryUpdateNotification_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_game_master_FactoryUpdateNotification_descriptor,
              new java.lang.String[] { "Op", "Description", "ProgramId", },
              bnet.protocol.game_master.GameMaster.FactoryUpdateNotification.class,
              bnet.protocol.game_master.GameMaster.FactoryUpdateNotification.Builder.class);
          internal_static_bnet_protocol_game_master_GameFoundNotification_descriptor =
            getDescriptor().getMessageTypes().get(22);
          internal_static_bnet_protocol_game_master_GameFoundNotification_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_game_master_GameFoundNotification_descriptor,
              new java.lang.String[] { "RequestId", "ErrorCode", "GameHandle", "ConnectInfo", },
              bnet.protocol.game_master.GameMaster.GameFoundNotification.class,
              bnet.protocol.game_master.GameMaster.GameFoundNotification.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          bnet.protocol.game_master.GameFactory.getDescriptor(),
          bnet.protocol.server_pool.ServerPool.getDescriptor(),
          bnet.protocol.channel.ChannelTypes.getDescriptor(),
          bnet.protocol.attribute.AttributeProto.getDescriptor(),
          bnet.protocol.Entity.getDescriptor(),
          bnet.protocol.Rpc.getDescriptor(),
          bnet.protocol.game_master.GameMasterTypes.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
