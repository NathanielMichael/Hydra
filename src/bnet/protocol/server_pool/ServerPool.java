// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service/server_pool/server_pool.proto

package bnet.protocol.server_pool;

public final class ServerPool {
  private ServerPool() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class GetLoadRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use GetLoadRequest.newBuilder() to construct.
    private GetLoadRequest() {
      initFields();
    }
    private GetLoadRequest(boolean noInit) {}
    
    private static final GetLoadRequest defaultInstance;
    public static GetLoadRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public GetLoadRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.server_pool.ServerPool.internal_static_bnet_protocol_server_pool_GetLoadRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.server_pool.ServerPool.internal_static_bnet_protocol_server_pool_GetLoadRequest_fieldAccessorTable;
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.server_pool.ServerPool.GetLoadRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.server_pool.ServerPool.GetLoadRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.server_pool.ServerPool.GetLoadRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.server_pool.ServerPool.GetLoadRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.server_pool.ServerPool.GetLoadRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.server_pool.ServerPool.GetLoadRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.server_pool.ServerPool.GetLoadRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.server_pool.ServerPool.GetLoadRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.server_pool.ServerPool.GetLoadRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.server_pool.ServerPool.GetLoadRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.server_pool.ServerPool.GetLoadRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.server_pool.ServerPool.GetLoadRequest result;
      
      // Construct using bnet.protocol.server_pool.ServerPool.GetLoadRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.server_pool.ServerPool.GetLoadRequest();
        return builder;
      }
      
      protected bnet.protocol.server_pool.ServerPool.GetLoadRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.server_pool.ServerPool.GetLoadRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.server_pool.ServerPool.GetLoadRequest.getDescriptor();
      }
      
      public bnet.protocol.server_pool.ServerPool.GetLoadRequest getDefaultInstanceForType() {
        return bnet.protocol.server_pool.ServerPool.GetLoadRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.server_pool.ServerPool.GetLoadRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.server_pool.ServerPool.GetLoadRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.server_pool.ServerPool.GetLoadRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.server_pool.ServerPool.GetLoadRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.server_pool.ServerPool.GetLoadRequest) {
          return mergeFrom((bnet.protocol.server_pool.ServerPool.GetLoadRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.server_pool.ServerPool.GetLoadRequest other) {
        if (other == bnet.protocol.server_pool.ServerPool.GetLoadRequest.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
          }
        }
      }
      
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.server_pool.GetLoadRequest)
    }
    
    static {
      defaultInstance = new GetLoadRequest(true);
      bnet.protocol.server_pool.ServerPool.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.server_pool.GetLoadRequest)
  }
  
  public static final class ServerState extends
      com.google.protobuf.GeneratedMessage {
    // Use ServerState.newBuilder() to construct.
    private ServerState() {
      initFields();
    }
    private ServerState(boolean noInit) {}
    
    private static final ServerState defaultInstance;
    public static ServerState getDefaultInstance() {
      return defaultInstance;
    }
    
    public ServerState getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.server_pool.ServerPool.internal_static_bnet_protocol_server_pool_ServerState_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.server_pool.ServerPool.internal_static_bnet_protocol_server_pool_ServerState_fieldAccessorTable;
    }
    
    // optional float current_load = 1;
    public static final int CURRENT_LOAD_FIELD_NUMBER = 1;
    private boolean hasCurrentLoad;
    private float currentLoad_ = 0F;
    public boolean hasCurrentLoad() { return hasCurrentLoad; }
    public float getCurrentLoad() { return currentLoad_; }
    
    // optional int32 game_count = 2;
    public static final int GAME_COUNT_FIELD_NUMBER = 2;
    private boolean hasGameCount;
    private int gameCount_ = 0;
    public boolean hasGameCount() { return hasGameCount; }
    public int getGameCount() { return gameCount_; }
    
    // optional int32 player_count = 3;
    public static final int PLAYER_COUNT_FIELD_NUMBER = 3;
    private boolean hasPlayerCount;
    private int playerCount_ = 0;
    public boolean hasPlayerCount() { return hasPlayerCount; }
    public int getPlayerCount() { return playerCount_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasCurrentLoad()) {
        output.writeFloat(1, getCurrentLoad());
      }
      if (hasGameCount()) {
        output.writeInt32(2, getGameCount());
      }
      if (hasPlayerCount()) {
        output.writeInt32(3, getPlayerCount());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasCurrentLoad()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, getCurrentLoad());
      }
      if (hasGameCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getGameCount());
      }
      if (hasPlayerCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getPlayerCount());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.server_pool.ServerPool.ServerState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.server_pool.ServerPool.ServerState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.server_pool.ServerPool.ServerState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.server_pool.ServerPool.ServerState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.server_pool.ServerPool.ServerState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.server_pool.ServerPool.ServerState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.server_pool.ServerPool.ServerState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.server_pool.ServerPool.ServerState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.server_pool.ServerPool.ServerState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.server_pool.ServerPool.ServerState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.server_pool.ServerPool.ServerState prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.server_pool.ServerPool.ServerState result;
      
      // Construct using bnet.protocol.server_pool.ServerPool.ServerState.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.server_pool.ServerPool.ServerState();
        return builder;
      }
      
      protected bnet.protocol.server_pool.ServerPool.ServerState internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.server_pool.ServerPool.ServerState();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.server_pool.ServerPool.ServerState.getDescriptor();
      }
      
      public bnet.protocol.server_pool.ServerPool.ServerState getDefaultInstanceForType() {
        return bnet.protocol.server_pool.ServerPool.ServerState.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.server_pool.ServerPool.ServerState build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.server_pool.ServerPool.ServerState buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.server_pool.ServerPool.ServerState buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.server_pool.ServerPool.ServerState returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.server_pool.ServerPool.ServerState) {
          return mergeFrom((bnet.protocol.server_pool.ServerPool.ServerState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.server_pool.ServerPool.ServerState other) {
        if (other == bnet.protocol.server_pool.ServerPool.ServerState.getDefaultInstance()) return this;
        if (other.hasCurrentLoad()) {
          setCurrentLoad(other.getCurrentLoad());
        }
        if (other.hasGameCount()) {
          setGameCount(other.getGameCount());
        }
        if (other.hasPlayerCount()) {
          setPlayerCount(other.getPlayerCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 13: {
              setCurrentLoad(input.readFloat());
              break;
            }
            case 16: {
              setGameCount(input.readInt32());
              break;
            }
            case 24: {
              setPlayerCount(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional float current_load = 1;
      public boolean hasCurrentLoad() {
        return result.hasCurrentLoad();
      }
      public float getCurrentLoad() {
        return result.getCurrentLoad();
      }
      public Builder setCurrentLoad(float value) {
        result.hasCurrentLoad = true;
        result.currentLoad_ = value;
        return this;
      }
      public Builder clearCurrentLoad() {
        result.hasCurrentLoad = false;
        result.currentLoad_ = 0F;
        return this;
      }
      
      // optional int32 game_count = 2;
      public boolean hasGameCount() {
        return result.hasGameCount();
      }
      public int getGameCount() {
        return result.getGameCount();
      }
      public Builder setGameCount(int value) {
        result.hasGameCount = true;
        result.gameCount_ = value;
        return this;
      }
      public Builder clearGameCount() {
        result.hasGameCount = false;
        result.gameCount_ = 0;
        return this;
      }
      
      // optional int32 player_count = 3;
      public boolean hasPlayerCount() {
        return result.hasPlayerCount();
      }
      public int getPlayerCount() {
        return result.getPlayerCount();
      }
      public Builder setPlayerCount(int value) {
        result.hasPlayerCount = true;
        result.playerCount_ = value;
        return this;
      }
      public Builder clearPlayerCount() {
        result.hasPlayerCount = false;
        result.playerCount_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.server_pool.ServerState)
    }
    
    static {
      defaultInstance = new ServerState(true);
      bnet.protocol.server_pool.ServerPool.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.server_pool.ServerState)
  }
  
  public static final class ServerInfo extends
      com.google.protobuf.GeneratedMessage {
    // Use ServerInfo.newBuilder() to construct.
    private ServerInfo() {
      initFields();
    }
    private ServerInfo(boolean noInit) {}
    
    private static final ServerInfo defaultInstance;
    public static ServerInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public ServerInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.server_pool.ServerPool.internal_static_bnet_protocol_server_pool_ServerInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.server_pool.ServerPool.internal_static_bnet_protocol_server_pool_ServerInfo_fieldAccessorTable;
    }
    
    // required .bnet.protocol.ProcessId host = 1;
    public static final int HOST_FIELD_NUMBER = 1;
    private boolean hasHost;
    private bnet.protocol.Rpc.ProcessId host_;
    public boolean hasHost() { return hasHost; }
    public bnet.protocol.Rpc.ProcessId getHost() { return host_; }
    
    // optional bool replace = 2;
    public static final int REPLACE_FIELD_NUMBER = 2;
    private boolean hasReplace;
    private boolean replace_ = false;
    public boolean hasReplace() { return hasReplace; }
    public boolean getReplace() { return replace_; }
    
    // optional .bnet.protocol.server_pool.ServerState state = 3;
    public static final int STATE_FIELD_NUMBER = 3;
    private boolean hasState;
    private bnet.protocol.server_pool.ServerPool.ServerState state_;
    public boolean hasState() { return hasState; }
    public bnet.protocol.server_pool.ServerPool.ServerState getState() { return state_; }
    
    // repeated .bnet.protocol.attribute.Attribute attribute = 4;
    public static final int ATTRIBUTE_FIELD_NUMBER = 4;
    private java.util.List<bnet.protocol.attribute.AttributeProto.Attribute> attribute_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.attribute.AttributeProto.Attribute> getAttributeList() {
      return attribute_;
    }
    public int getAttributeCount() { return attribute_.size(); }
    public bnet.protocol.attribute.AttributeProto.Attribute getAttribute(int index) {
      return attribute_.get(index);
    }
    
    // optional fixed32 program_id = 5;
    public static final int PROGRAM_ID_FIELD_NUMBER = 5;
    private boolean hasProgramId;
    private int programId_ = 0;
    public boolean hasProgramId() { return hasProgramId; }
    public int getProgramId() { return programId_; }
    
    private void initFields() {
      host_ = bnet.protocol.Rpc.ProcessId.getDefaultInstance();
      state_ = bnet.protocol.server_pool.ServerPool.ServerState.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasHost) return false;
      if (!getHost().isInitialized()) return false;
      for (bnet.protocol.attribute.AttributeProto.Attribute element : getAttributeList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasHost()) {
        output.writeMessage(1, getHost());
      }
      if (hasReplace()) {
        output.writeBool(2, getReplace());
      }
      if (hasState()) {
        output.writeMessage(3, getState());
      }
      for (bnet.protocol.attribute.AttributeProto.Attribute element : getAttributeList()) {
        output.writeMessage(4, element);
      }
      if (hasProgramId()) {
        output.writeFixed32(5, getProgramId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasHost()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHost());
      }
      if (hasReplace()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, getReplace());
      }
      if (hasState()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getState());
      }
      for (bnet.protocol.attribute.AttributeProto.Attribute element : getAttributeList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, element);
      }
      if (hasProgramId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(5, getProgramId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.server_pool.ServerPool.ServerInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.server_pool.ServerPool.ServerInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.server_pool.ServerPool.ServerInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.server_pool.ServerPool.ServerInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.server_pool.ServerPool.ServerInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.server_pool.ServerPool.ServerInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.server_pool.ServerPool.ServerInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.server_pool.ServerPool.ServerInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.server_pool.ServerPool.ServerInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.server_pool.ServerPool.ServerInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.server_pool.ServerPool.ServerInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.server_pool.ServerPool.ServerInfo result;
      
      // Construct using bnet.protocol.server_pool.ServerPool.ServerInfo.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.server_pool.ServerPool.ServerInfo();
        return builder;
      }
      
      protected bnet.protocol.server_pool.ServerPool.ServerInfo internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.server_pool.ServerPool.ServerInfo();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.server_pool.ServerPool.ServerInfo.getDescriptor();
      }
      
      public bnet.protocol.server_pool.ServerPool.ServerInfo getDefaultInstanceForType() {
        return bnet.protocol.server_pool.ServerPool.ServerInfo.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.server_pool.ServerPool.ServerInfo build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.server_pool.ServerPool.ServerInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.server_pool.ServerPool.ServerInfo buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.attribute_ != java.util.Collections.EMPTY_LIST) {
          result.attribute_ =
            java.util.Collections.unmodifiableList(result.attribute_);
        }
        bnet.protocol.server_pool.ServerPool.ServerInfo returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.server_pool.ServerPool.ServerInfo) {
          return mergeFrom((bnet.protocol.server_pool.ServerPool.ServerInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.server_pool.ServerPool.ServerInfo other) {
        if (other == bnet.protocol.server_pool.ServerPool.ServerInfo.getDefaultInstance()) return this;
        if (other.hasHost()) {
          mergeHost(other.getHost());
        }
        if (other.hasReplace()) {
          setReplace(other.getReplace());
        }
        if (other.hasState()) {
          mergeState(other.getState());
        }
        if (!other.attribute_.isEmpty()) {
          if (result.attribute_.isEmpty()) {
            result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.AttributeProto.Attribute>();
          }
          result.attribute_.addAll(other.attribute_);
        }
        if (other.hasProgramId()) {
          setProgramId(other.getProgramId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Rpc.ProcessId.Builder subBuilder = bnet.protocol.Rpc.ProcessId.newBuilder();
              if (hasHost()) {
                subBuilder.mergeFrom(getHost());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setHost(subBuilder.buildPartial());
              break;
            }
            case 16: {
              setReplace(input.readBool());
              break;
            }
            case 26: {
              bnet.protocol.server_pool.ServerPool.ServerState.Builder subBuilder = bnet.protocol.server_pool.ServerPool.ServerState.newBuilder();
              if (hasState()) {
                subBuilder.mergeFrom(getState());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setState(subBuilder.buildPartial());
              break;
            }
            case 34: {
              bnet.protocol.attribute.AttributeProto.Attribute.Builder subBuilder = bnet.protocol.attribute.AttributeProto.Attribute.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAttribute(subBuilder.buildPartial());
              break;
            }
            case 45: {
              setProgramId(input.readFixed32());
              break;
            }
          }
        }
      }
      
      
      // required .bnet.protocol.ProcessId host = 1;
      public boolean hasHost() {
        return result.hasHost();
      }
      public bnet.protocol.Rpc.ProcessId getHost() {
        return result.getHost();
      }
      public Builder setHost(bnet.protocol.Rpc.ProcessId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasHost = true;
        result.host_ = value;
        return this;
      }
      public Builder setHost(bnet.protocol.Rpc.ProcessId.Builder builderForValue) {
        result.hasHost = true;
        result.host_ = builderForValue.build();
        return this;
      }
      public Builder mergeHost(bnet.protocol.Rpc.ProcessId value) {
        if (result.hasHost() &&
            result.host_ != bnet.protocol.Rpc.ProcessId.getDefaultInstance()) {
          result.host_ =
            bnet.protocol.Rpc.ProcessId.newBuilder(result.host_).mergeFrom(value).buildPartial();
        } else {
          result.host_ = value;
        }
        result.hasHost = true;
        return this;
      }
      public Builder clearHost() {
        result.hasHost = false;
        result.host_ = bnet.protocol.Rpc.ProcessId.getDefaultInstance();
        return this;
      }
      
      // optional bool replace = 2;
      public boolean hasReplace() {
        return result.hasReplace();
      }
      public boolean getReplace() {
        return result.getReplace();
      }
      public Builder setReplace(boolean value) {
        result.hasReplace = true;
        result.replace_ = value;
        return this;
      }
      public Builder clearReplace() {
        result.hasReplace = false;
        result.replace_ = false;
        return this;
      }
      
      // optional .bnet.protocol.server_pool.ServerState state = 3;
      public boolean hasState() {
        return result.hasState();
      }
      public bnet.protocol.server_pool.ServerPool.ServerState getState() {
        return result.getState();
      }
      public Builder setState(bnet.protocol.server_pool.ServerPool.ServerState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasState = true;
        result.state_ = value;
        return this;
      }
      public Builder setState(bnet.protocol.server_pool.ServerPool.ServerState.Builder builderForValue) {
        result.hasState = true;
        result.state_ = builderForValue.build();
        return this;
      }
      public Builder mergeState(bnet.protocol.server_pool.ServerPool.ServerState value) {
        if (result.hasState() &&
            result.state_ != bnet.protocol.server_pool.ServerPool.ServerState.getDefaultInstance()) {
          result.state_ =
            bnet.protocol.server_pool.ServerPool.ServerState.newBuilder(result.state_).mergeFrom(value).buildPartial();
        } else {
          result.state_ = value;
        }
        result.hasState = true;
        return this;
      }
      public Builder clearState() {
        result.hasState = false;
        result.state_ = bnet.protocol.server_pool.ServerPool.ServerState.getDefaultInstance();
        return this;
      }
      
      // repeated .bnet.protocol.attribute.Attribute attribute = 4;
      public java.util.List<bnet.protocol.attribute.AttributeProto.Attribute> getAttributeList() {
        return java.util.Collections.unmodifiableList(result.attribute_);
      }
      public int getAttributeCount() {
        return result.getAttributeCount();
      }
      public bnet.protocol.attribute.AttributeProto.Attribute getAttribute(int index) {
        return result.getAttribute(index);
      }
      public Builder setAttribute(int index, bnet.protocol.attribute.AttributeProto.Attribute value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.attribute_.set(index, value);
        return this;
      }
      public Builder setAttribute(int index, bnet.protocol.attribute.AttributeProto.Attribute.Builder builderForValue) {
        result.attribute_.set(index, builderForValue.build());
        return this;
      }
      public Builder addAttribute(bnet.protocol.attribute.AttributeProto.Attribute value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.attribute_.isEmpty()) {
          result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.AttributeProto.Attribute>();
        }
        result.attribute_.add(value);
        return this;
      }
      public Builder addAttribute(bnet.protocol.attribute.AttributeProto.Attribute.Builder builderForValue) {
        if (result.attribute_.isEmpty()) {
          result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.AttributeProto.Attribute>();
        }
        result.attribute_.add(builderForValue.build());
        return this;
      }
      public Builder addAllAttribute(
          java.lang.Iterable<? extends bnet.protocol.attribute.AttributeProto.Attribute> values) {
        if (result.attribute_.isEmpty()) {
          result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.AttributeProto.Attribute>();
        }
        super.addAll(values, result.attribute_);
        return this;
      }
      public Builder clearAttribute() {
        result.attribute_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional fixed32 program_id = 5;
      public boolean hasProgramId() {
        return result.hasProgramId();
      }
      public int getProgramId() {
        return result.getProgramId();
      }
      public Builder setProgramId(int value) {
        result.hasProgramId = true;
        result.programId_ = value;
        return this;
      }
      public Builder clearProgramId() {
        result.hasProgramId = false;
        result.programId_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.server_pool.ServerInfo)
    }
    
    static {
      defaultInstance = new ServerInfo(true);
      bnet.protocol.server_pool.ServerPool.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.server_pool.ServerInfo)
  }
  
  public static final class PoolStateRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use PoolStateRequest.newBuilder() to construct.
    private PoolStateRequest() {
      initFields();
    }
    private PoolStateRequest(boolean noInit) {}
    
    private static final PoolStateRequest defaultInstance;
    public static PoolStateRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public PoolStateRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.server_pool.ServerPool.internal_static_bnet_protocol_server_pool_PoolStateRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.server_pool.ServerPool.internal_static_bnet_protocol_server_pool_PoolStateRequest_fieldAccessorTable;
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.server_pool.ServerPool.PoolStateRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.server_pool.ServerPool.PoolStateRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.server_pool.ServerPool.PoolStateRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.server_pool.ServerPool.PoolStateRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.server_pool.ServerPool.PoolStateRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.server_pool.ServerPool.PoolStateRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.server_pool.ServerPool.PoolStateRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.server_pool.ServerPool.PoolStateRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.server_pool.ServerPool.PoolStateRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.server_pool.ServerPool.PoolStateRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.server_pool.ServerPool.PoolStateRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.server_pool.ServerPool.PoolStateRequest result;
      
      // Construct using bnet.protocol.server_pool.ServerPool.PoolStateRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.server_pool.ServerPool.PoolStateRequest();
        return builder;
      }
      
      protected bnet.protocol.server_pool.ServerPool.PoolStateRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.server_pool.ServerPool.PoolStateRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.server_pool.ServerPool.PoolStateRequest.getDescriptor();
      }
      
      public bnet.protocol.server_pool.ServerPool.PoolStateRequest getDefaultInstanceForType() {
        return bnet.protocol.server_pool.ServerPool.PoolStateRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.server_pool.ServerPool.PoolStateRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.server_pool.ServerPool.PoolStateRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.server_pool.ServerPool.PoolStateRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.server_pool.ServerPool.PoolStateRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.server_pool.ServerPool.PoolStateRequest) {
          return mergeFrom((bnet.protocol.server_pool.ServerPool.PoolStateRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.server_pool.ServerPool.PoolStateRequest other) {
        if (other == bnet.protocol.server_pool.ServerPool.PoolStateRequest.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
          }
        }
      }
      
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.server_pool.PoolStateRequest)
    }
    
    static {
      defaultInstance = new PoolStateRequest(true);
      bnet.protocol.server_pool.ServerPool.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.server_pool.PoolStateRequest)
  }
  
  public static final class PoolStateResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use PoolStateResponse.newBuilder() to construct.
    private PoolStateResponse() {
      initFields();
    }
    private PoolStateResponse(boolean noInit) {}
    
    private static final PoolStateResponse defaultInstance;
    public static PoolStateResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public PoolStateResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.server_pool.ServerPool.internal_static_bnet_protocol_server_pool_PoolStateResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.server_pool.ServerPool.internal_static_bnet_protocol_server_pool_PoolStateResponse_fieldAccessorTable;
    }
    
    // repeated .bnet.protocol.server_pool.ServerInfo info = 1;
    public static final int INFO_FIELD_NUMBER = 1;
    private java.util.List<bnet.protocol.server_pool.ServerPool.ServerInfo> info_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.server_pool.ServerPool.ServerInfo> getInfoList() {
      return info_;
    }
    public int getInfoCount() { return info_.size(); }
    public bnet.protocol.server_pool.ServerPool.ServerInfo getInfo(int index) {
      return info_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (bnet.protocol.server_pool.ServerPool.ServerInfo element : getInfoList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (bnet.protocol.server_pool.ServerPool.ServerInfo element : getInfoList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (bnet.protocol.server_pool.ServerPool.ServerInfo element : getInfoList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.server_pool.ServerPool.PoolStateResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.server_pool.ServerPool.PoolStateResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.server_pool.ServerPool.PoolStateResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.server_pool.ServerPool.PoolStateResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.server_pool.ServerPool.PoolStateResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.server_pool.ServerPool.PoolStateResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.server_pool.ServerPool.PoolStateResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.server_pool.ServerPool.PoolStateResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.server_pool.ServerPool.PoolStateResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.server_pool.ServerPool.PoolStateResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.server_pool.ServerPool.PoolStateResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.server_pool.ServerPool.PoolStateResponse result;
      
      // Construct using bnet.protocol.server_pool.ServerPool.PoolStateResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.server_pool.ServerPool.PoolStateResponse();
        return builder;
      }
      
      protected bnet.protocol.server_pool.ServerPool.PoolStateResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.server_pool.ServerPool.PoolStateResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.server_pool.ServerPool.PoolStateResponse.getDescriptor();
      }
      
      public bnet.protocol.server_pool.ServerPool.PoolStateResponse getDefaultInstanceForType() {
        return bnet.protocol.server_pool.ServerPool.PoolStateResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.server_pool.ServerPool.PoolStateResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.server_pool.ServerPool.PoolStateResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.server_pool.ServerPool.PoolStateResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.info_ != java.util.Collections.EMPTY_LIST) {
          result.info_ =
            java.util.Collections.unmodifiableList(result.info_);
        }
        bnet.protocol.server_pool.ServerPool.PoolStateResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.server_pool.ServerPool.PoolStateResponse) {
          return mergeFrom((bnet.protocol.server_pool.ServerPool.PoolStateResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.server_pool.ServerPool.PoolStateResponse other) {
        if (other == bnet.protocol.server_pool.ServerPool.PoolStateResponse.getDefaultInstance()) return this;
        if (!other.info_.isEmpty()) {
          if (result.info_.isEmpty()) {
            result.info_ = new java.util.ArrayList<bnet.protocol.server_pool.ServerPool.ServerInfo>();
          }
          result.info_.addAll(other.info_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.server_pool.ServerPool.ServerInfo.Builder subBuilder = bnet.protocol.server_pool.ServerPool.ServerInfo.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addInfo(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .bnet.protocol.server_pool.ServerInfo info = 1;
      public java.util.List<bnet.protocol.server_pool.ServerPool.ServerInfo> getInfoList() {
        return java.util.Collections.unmodifiableList(result.info_);
      }
      public int getInfoCount() {
        return result.getInfoCount();
      }
      public bnet.protocol.server_pool.ServerPool.ServerInfo getInfo(int index) {
        return result.getInfo(index);
      }
      public Builder setInfo(int index, bnet.protocol.server_pool.ServerPool.ServerInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.info_.set(index, value);
        return this;
      }
      public Builder setInfo(int index, bnet.protocol.server_pool.ServerPool.ServerInfo.Builder builderForValue) {
        result.info_.set(index, builderForValue.build());
        return this;
      }
      public Builder addInfo(bnet.protocol.server_pool.ServerPool.ServerInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.info_.isEmpty()) {
          result.info_ = new java.util.ArrayList<bnet.protocol.server_pool.ServerPool.ServerInfo>();
        }
        result.info_.add(value);
        return this;
      }
      public Builder addInfo(bnet.protocol.server_pool.ServerPool.ServerInfo.Builder builderForValue) {
        if (result.info_.isEmpty()) {
          result.info_ = new java.util.ArrayList<bnet.protocol.server_pool.ServerPool.ServerInfo>();
        }
        result.info_.add(builderForValue.build());
        return this;
      }
      public Builder addAllInfo(
          java.lang.Iterable<? extends bnet.protocol.server_pool.ServerPool.ServerInfo> values) {
        if (result.info_.isEmpty()) {
          result.info_ = new java.util.ArrayList<bnet.protocol.server_pool.ServerPool.ServerInfo>();
        }
        super.addAll(values, result.info_);
        return this;
      }
      public Builder clearInfo() {
        result.info_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.server_pool.PoolStateResponse)
    }
    
    static {
      defaultInstance = new PoolStateResponse(true);
      bnet.protocol.server_pool.ServerPool.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.server_pool.PoolStateResponse)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_server_pool_GetLoadRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_server_pool_GetLoadRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_server_pool_ServerState_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_server_pool_ServerState_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_server_pool_ServerInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_server_pool_ServerInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_server_pool_PoolStateRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_server_pool_PoolStateRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_server_pool_PoolStateResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_server_pool_PoolStateResponse_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n%service/server_pool/server_pool.proto\022" +
      "\031bnet.protocol.server_pool\032\034lib/protocol" +
      "/attribute.proto\032\021lib/rpc/rpc.proto\"\020\n\016G" +
      "etLoadRequest\"M\n\013ServerState\022\024\n\014current_" +
      "load\030\001 \001(\002\022\022\n\ngame_count\030\002 \001(\005\022\024\n\014player" +
      "_count\030\003 \001(\005\"\307\001\n\nServerInfo\022&\n\004host\030\001 \002(" +
      "\0132\030.bnet.protocol.ProcessId\022\017\n\007replace\030\002" +
      " \001(\010\0225\n\005state\030\003 \001(\0132&.bnet.protocol.serv" +
      "er_pool.ServerState\0225\n\tattribute\030\004 \003(\0132\"" +
      ".bnet.protocol.attribute.Attribute\022\022\n\npr",
      "ogram_id\030\005 \001(\007\"\022\n\020PoolStateRequest\"H\n\021Po" +
      "olStateResponse\0223\n\004info\030\001 \003(\0132%.bnet.pro" +
      "tocol.server_pool.ServerInfo"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_bnet_protocol_server_pool_GetLoadRequest_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_bnet_protocol_server_pool_GetLoadRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_server_pool_GetLoadRequest_descriptor,
              new java.lang.String[] { },
              bnet.protocol.server_pool.ServerPool.GetLoadRequest.class,
              bnet.protocol.server_pool.ServerPool.GetLoadRequest.Builder.class);
          internal_static_bnet_protocol_server_pool_ServerState_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_bnet_protocol_server_pool_ServerState_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_server_pool_ServerState_descriptor,
              new java.lang.String[] { "CurrentLoad", "GameCount", "PlayerCount", },
              bnet.protocol.server_pool.ServerPool.ServerState.class,
              bnet.protocol.server_pool.ServerPool.ServerState.Builder.class);
          internal_static_bnet_protocol_server_pool_ServerInfo_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_bnet_protocol_server_pool_ServerInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_server_pool_ServerInfo_descriptor,
              new java.lang.String[] { "Host", "Replace", "State", "Attribute", "ProgramId", },
              bnet.protocol.server_pool.ServerPool.ServerInfo.class,
              bnet.protocol.server_pool.ServerPool.ServerInfo.Builder.class);
          internal_static_bnet_protocol_server_pool_PoolStateRequest_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_bnet_protocol_server_pool_PoolStateRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_server_pool_PoolStateRequest_descriptor,
              new java.lang.String[] { },
              bnet.protocol.server_pool.ServerPool.PoolStateRequest.class,
              bnet.protocol.server_pool.ServerPool.PoolStateRequest.Builder.class);
          internal_static_bnet_protocol_server_pool_PoolStateResponse_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_bnet_protocol_server_pool_PoolStateResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_server_pool_PoolStateResponse_descriptor,
              new java.lang.String[] { "Info", },
              bnet.protocol.server_pool.ServerPool.PoolStateResponse.class,
              bnet.protocol.server_pool.ServerPool.PoolStateResponse.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          bnet.protocol.attribute.AttributeProto.getDescriptor(),
          bnet.protocol.Rpc.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
