// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lib/protocol/entity.proto

package bnet.protocol;

public final class Entity {
  private Entity() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class EntityId extends
      com.google.protobuf.GeneratedMessage {
    // Use EntityId.newBuilder() to construct.
    private EntityId() {
      initFields();
    }
    private EntityId(boolean noInit) {}
    
    private static final EntityId defaultInstance;
    public static EntityId getDefaultInstance() {
      return defaultInstance;
    }
    
    public EntityId getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.Entity.internal_static_bnet_protocol_EntityId_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.Entity.internal_static_bnet_protocol_EntityId_fieldAccessorTable;
    }
    
    // required fixed64 high = 1;
    public static final int HIGH_FIELD_NUMBER = 1;
    private boolean hasHigh;
    private long high_ = 0L;
    public boolean hasHigh() { return hasHigh; }
    public long getHigh() { return high_; }
    
    // required fixed64 low = 2;
    public static final int LOW_FIELD_NUMBER = 2;
    private boolean hasLow;
    private long low_ = 0L;
    public boolean hasLow() { return hasLow; }
    public long getLow() { return low_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasHigh) return false;
      if (!hasLow) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasHigh()) {
        output.writeFixed64(1, getHigh());
      }
      if (hasLow()) {
        output.writeFixed64(2, getLow());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasHigh()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, getHigh());
      }
      if (hasLow()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, getLow());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.Entity.EntityId parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.Entity.EntityId parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.Entity.EntityId parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.Entity.EntityId parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.Entity.EntityId parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.Entity.EntityId parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.Entity.EntityId parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.Entity.EntityId parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.Entity.EntityId parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.Entity.EntityId parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.Entity.EntityId prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.Entity.EntityId result;
      
      // Construct using bnet.protocol.Entity.EntityId.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.Entity.EntityId();
        return builder;
      }
      
      protected bnet.protocol.Entity.EntityId internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.Entity.EntityId();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.Entity.EntityId.getDescriptor();
      }
      
      public bnet.protocol.Entity.EntityId getDefaultInstanceForType() {
        return bnet.protocol.Entity.EntityId.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.Entity.EntityId build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.Entity.EntityId buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.Entity.EntityId buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.Entity.EntityId returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.Entity.EntityId) {
          return mergeFrom((bnet.protocol.Entity.EntityId)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.Entity.EntityId other) {
        if (other == bnet.protocol.Entity.EntityId.getDefaultInstance()) return this;
        if (other.hasHigh()) {
          setHigh(other.getHigh());
        }
        if (other.hasLow()) {
          setLow(other.getLow());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              setHigh(input.readFixed64());
              break;
            }
            case 17: {
              setLow(input.readFixed64());
              break;
            }
          }
        }
      }
      
      
      // required fixed64 high = 1;
      public boolean hasHigh() {
        return result.hasHigh();
      }
      public long getHigh() {
        return result.getHigh();
      }
      public Builder setHigh(long value) {
        result.hasHigh = true;
        result.high_ = value;
        return this;
      }
      public Builder clearHigh() {
        result.hasHigh = false;
        result.high_ = 0L;
        return this;
      }
      
      // required fixed64 low = 2;
      public boolean hasLow() {
        return result.hasLow();
      }
      public long getLow() {
        return result.getLow();
      }
      public Builder setLow(long value) {
        result.hasLow = true;
        result.low_ = value;
        return this;
      }
      public Builder clearLow() {
        result.hasLow = false;
        result.low_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.EntityId)
    }
    
    static {
      defaultInstance = new EntityId(true);
      bnet.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.EntityId)
  }
  
  public static final class Identity extends
      com.google.protobuf.GeneratedMessage {
    // Use Identity.newBuilder() to construct.
    private Identity() {
      initFields();
    }
    private Identity(boolean noInit) {}
    
    private static final Identity defaultInstance;
    public static Identity getDefaultInstance() {
      return defaultInstance;
    }
    
    public Identity getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.Entity.internal_static_bnet_protocol_Identity_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.Entity.internal_static_bnet_protocol_Identity_fieldAccessorTable;
    }
    
    // optional .bnet.protocol.EntityId account_id = 1;
    public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
    private boolean hasAccountId;
    private bnet.protocol.Entity.EntityId accountId_;
    public boolean hasAccountId() { return hasAccountId; }
    public bnet.protocol.Entity.EntityId getAccountId() { return accountId_; }
    
    // optional .bnet.protocol.EntityId game_account_id = 2;
    public static final int GAME_ACCOUNT_ID_FIELD_NUMBER = 2;
    private boolean hasGameAccountId;
    private bnet.protocol.Entity.EntityId gameAccountId_;
    public boolean hasGameAccountId() { return hasGameAccountId; }
    public bnet.protocol.Entity.EntityId getGameAccountId() { return gameAccountId_; }
    
    // optional .bnet.protocol.EntityId toon_id = 3;
    public static final int TOON_ID_FIELD_NUMBER = 3;
    private boolean hasToonId;
    private bnet.protocol.Entity.EntityId toonId_;
    public boolean hasToonId() { return hasToonId; }
    public bnet.protocol.Entity.EntityId getToonId() { return toonId_; }
    
    private void initFields() {
      accountId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
      gameAccountId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
      toonId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (hasAccountId()) {
        if (!getAccountId().isInitialized()) return false;
      }
      if (hasGameAccountId()) {
        if (!getGameAccountId().isInitialized()) return false;
      }
      if (hasToonId()) {
        if (!getToonId().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAccountId()) {
        output.writeMessage(1, getAccountId());
      }
      if (hasGameAccountId()) {
        output.writeMessage(2, getGameAccountId());
      }
      if (hasToonId()) {
        output.writeMessage(3, getToonId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAccountId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAccountId());
      }
      if (hasGameAccountId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getGameAccountId());
      }
      if (hasToonId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getToonId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.Entity.Identity parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.Entity.Identity parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.Entity.Identity parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.Entity.Identity parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.Entity.Identity parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.Entity.Identity parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.Entity.Identity parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.Entity.Identity parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.Entity.Identity parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.Entity.Identity parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.Entity.Identity prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.Entity.Identity result;
      
      // Construct using bnet.protocol.Entity.Identity.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.Entity.Identity();
        return builder;
      }
      
      protected bnet.protocol.Entity.Identity internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.Entity.Identity();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.Entity.Identity.getDescriptor();
      }
      
      public bnet.protocol.Entity.Identity getDefaultInstanceForType() {
        return bnet.protocol.Entity.Identity.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.Entity.Identity build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.Entity.Identity buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.Entity.Identity buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.Entity.Identity returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.Entity.Identity) {
          return mergeFrom((bnet.protocol.Entity.Identity)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.Entity.Identity other) {
        if (other == bnet.protocol.Entity.Identity.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          mergeAccountId(other.getAccountId());
        }
        if (other.hasGameAccountId()) {
          mergeGameAccountId(other.getGameAccountId());
        }
        if (other.hasToonId()) {
          mergeToonId(other.getToonId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasAccountId()) {
                subBuilder.mergeFrom(getAccountId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAccountId(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasGameAccountId()) {
                subBuilder.mergeFrom(getGameAccountId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGameAccountId(subBuilder.buildPartial());
              break;
            }
            case 26: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasToonId()) {
                subBuilder.mergeFrom(getToonId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setToonId(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional .bnet.protocol.EntityId account_id = 1;
      public boolean hasAccountId() {
        return result.hasAccountId();
      }
      public bnet.protocol.Entity.EntityId getAccountId() {
        return result.getAccountId();
      }
      public Builder setAccountId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder setAccountId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasAccountId = true;
        result.accountId_ = builderForValue.build();
        return this;
      }
      public Builder mergeAccountId(bnet.protocol.Entity.EntityId value) {
        if (result.hasAccountId() &&
            result.accountId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.accountId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.accountId_).mergeFrom(value).buildPartial();
        } else {
          result.accountId_ = value;
        }
        result.hasAccountId = true;
        return this;
      }
      public Builder clearAccountId() {
        result.hasAccountId = false;
        result.accountId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // optional .bnet.protocol.EntityId game_account_id = 2;
      public boolean hasGameAccountId() {
        return result.hasGameAccountId();
      }
      public bnet.protocol.Entity.EntityId getGameAccountId() {
        return result.getGameAccountId();
      }
      public Builder setGameAccountId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasGameAccountId = true;
        result.gameAccountId_ = value;
        return this;
      }
      public Builder setGameAccountId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasGameAccountId = true;
        result.gameAccountId_ = builderForValue.build();
        return this;
      }
      public Builder mergeGameAccountId(bnet.protocol.Entity.EntityId value) {
        if (result.hasGameAccountId() &&
            result.gameAccountId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.gameAccountId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.gameAccountId_).mergeFrom(value).buildPartial();
        } else {
          result.gameAccountId_ = value;
        }
        result.hasGameAccountId = true;
        return this;
      }
      public Builder clearGameAccountId() {
        result.hasGameAccountId = false;
        result.gameAccountId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // optional .bnet.protocol.EntityId toon_id = 3;
      public boolean hasToonId() {
        return result.hasToonId();
      }
      public bnet.protocol.Entity.EntityId getToonId() {
        return result.getToonId();
      }
      public Builder setToonId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasToonId = true;
        result.toonId_ = value;
        return this;
      }
      public Builder setToonId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasToonId = true;
        result.toonId_ = builderForValue.build();
        return this;
      }
      public Builder mergeToonId(bnet.protocol.Entity.EntityId value) {
        if (result.hasToonId() &&
            result.toonId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.toonId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.toonId_).mergeFrom(value).buildPartial();
        } else {
          result.toonId_ = value;
        }
        result.hasToonId = true;
        return this;
      }
      public Builder clearToonId() {
        result.hasToonId = false;
        result.toonId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.Identity)
    }
    
    static {
      defaultInstance = new Identity(true);
      bnet.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.Identity)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_EntityId_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_EntityId_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_Identity_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_Identity_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\031lib/protocol/entity.proto\022\rbnet.protoc" +
      "ol\"%\n\010EntityId\022\014\n\004high\030\001 \002(\006\022\013\n\003low\030\002 \002(" +
      "\006\"\223\001\n\010Identity\022+\n\naccount_id\030\001 \001(\0132\027.bne" +
      "t.protocol.EntityId\0220\n\017game_account_id\030\002" +
      " \001(\0132\027.bnet.protocol.EntityId\022(\n\007toon_id" +
      "\030\003 \001(\0132\027.bnet.protocol.EntityId"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_bnet_protocol_EntityId_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_bnet_protocol_EntityId_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_EntityId_descriptor,
              new java.lang.String[] { "High", "Low", },
              bnet.protocol.Entity.EntityId.class,
              bnet.protocol.Entity.EntityId.Builder.class);
          internal_static_bnet_protocol_Identity_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_bnet_protocol_Identity_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_Identity_descriptor,
              new java.lang.String[] { "AccountId", "GameAccountId", "ToonId", },
              bnet.protocol.Entity.Identity.class,
              bnet.protocol.Entity.Identity.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
