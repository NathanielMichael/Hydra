// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OnlineService.proto

package D3.OnlineService;

public final class OnlineService {
  private OnlineService() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class EntityId extends
      com.google.protobuf.GeneratedMessage {
    // Use EntityId.newBuilder() to construct.
    private EntityId() {
      initFields();
    }
    private EntityId(boolean noInit) {}
    
    private static final EntityId defaultInstance;
    public static EntityId getDefaultInstance() {
      return defaultInstance;
    }
    
    public EntityId getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return D3.OnlineService.OnlineService.internal_static_D3_OnlineService_EntityId_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return D3.OnlineService.OnlineService.internal_static_D3_OnlineService_EntityId_fieldAccessorTable;
    }
    
    // required uint64 id_high = 1;
    public static final int ID_HIGH_FIELD_NUMBER = 1;
    private boolean hasIdHigh;
    private long idHigh_ = 0L;
    public boolean hasIdHigh() { return hasIdHigh; }
    public long getIdHigh() { return idHigh_; }
    
    // required uint64 id_low = 2;
    public static final int ID_LOW_FIELD_NUMBER = 2;
    private boolean hasIdLow;
    private long idLow_ = 0L;
    public boolean hasIdLow() { return hasIdLow; }
    public long getIdLow() { return idLow_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasIdHigh) return false;
      if (!hasIdLow) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasIdHigh()) {
        output.writeUInt64(1, getIdHigh());
      }
      if (hasIdLow()) {
        output.writeUInt64(2, getIdLow());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasIdHigh()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, getIdHigh());
      }
      if (hasIdLow()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, getIdLow());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static D3.OnlineService.OnlineService.EntityId parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static D3.OnlineService.OnlineService.EntityId parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static D3.OnlineService.OnlineService.EntityId parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static D3.OnlineService.OnlineService.EntityId parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static D3.OnlineService.OnlineService.EntityId parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static D3.OnlineService.OnlineService.EntityId parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static D3.OnlineService.OnlineService.EntityId parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static D3.OnlineService.OnlineService.EntityId parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static D3.OnlineService.OnlineService.EntityId parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static D3.OnlineService.OnlineService.EntityId parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(D3.OnlineService.OnlineService.EntityId prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private D3.OnlineService.OnlineService.EntityId result;
      
      // Construct using D3.OnlineService.OnlineService.EntityId.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new D3.OnlineService.OnlineService.EntityId();
        return builder;
      }
      
      protected D3.OnlineService.OnlineService.EntityId internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new D3.OnlineService.OnlineService.EntityId();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return D3.OnlineService.OnlineService.EntityId.getDescriptor();
      }
      
      public D3.OnlineService.OnlineService.EntityId getDefaultInstanceForType() {
        return D3.OnlineService.OnlineService.EntityId.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public D3.OnlineService.OnlineService.EntityId build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private D3.OnlineService.OnlineService.EntityId buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public D3.OnlineService.OnlineService.EntityId buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        D3.OnlineService.OnlineService.EntityId returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof D3.OnlineService.OnlineService.EntityId) {
          return mergeFrom((D3.OnlineService.OnlineService.EntityId)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(D3.OnlineService.OnlineService.EntityId other) {
        if (other == D3.OnlineService.OnlineService.EntityId.getDefaultInstance()) return this;
        if (other.hasIdHigh()) {
          setIdHigh(other.getIdHigh());
        }
        if (other.hasIdLow()) {
          setIdLow(other.getIdLow());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setIdHigh(input.readUInt64());
              break;
            }
            case 16: {
              setIdLow(input.readUInt64());
              break;
            }
          }
        }
      }
      
      
      // required uint64 id_high = 1;
      public boolean hasIdHigh() {
        return result.hasIdHigh();
      }
      public long getIdHigh() {
        return result.getIdHigh();
      }
      public Builder setIdHigh(long value) {
        result.hasIdHigh = true;
        result.idHigh_ = value;
        return this;
      }
      public Builder clearIdHigh() {
        result.hasIdHigh = false;
        result.idHigh_ = 0L;
        return this;
      }
      
      // required uint64 id_low = 2;
      public boolean hasIdLow() {
        return result.hasIdLow();
      }
      public long getIdLow() {
        return result.getIdLow();
      }
      public Builder setIdLow(long value) {
        result.hasIdLow = true;
        result.idLow_ = value;
        return this;
      }
      public Builder clearIdLow() {
        result.hasIdLow = false;
        result.idLow_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:D3.OnlineService.EntityId)
    }
    
    static {
      defaultInstance = new EntityId(true);
      D3.OnlineService.OnlineService.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:D3.OnlineService.EntityId)
  }
  
  public static final class GameId extends
      com.google.protobuf.GeneratedMessage {
    // Use GameId.newBuilder() to construct.
    private GameId() {
      initFields();
    }
    private GameId(boolean noInit) {}
    
    private static final GameId defaultInstance;
    public static GameId getDefaultInstance() {
      return defaultInstance;
    }
    
    public GameId getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return D3.OnlineService.OnlineService.internal_static_D3_OnlineService_GameId_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return D3.OnlineService.OnlineService.internal_static_D3_OnlineService_GameId_fieldAccessorTable;
    }
    
    // required uint64 factory = 1;
    public static final int FACTORY_FIELD_NUMBER = 1;
    private boolean hasFactory;
    private long factory_ = 0L;
    public boolean hasFactory() { return hasFactory; }
    public long getFactory() { return factory_; }
    
    // required uint64 id_high = 2;
    public static final int ID_HIGH_FIELD_NUMBER = 2;
    private boolean hasIdHigh;
    private long idHigh_ = 0L;
    public boolean hasIdHigh() { return hasIdHigh; }
    public long getIdHigh() { return idHigh_; }
    
    // required uint64 id_low = 3;
    public static final int ID_LOW_FIELD_NUMBER = 3;
    private boolean hasIdLow;
    private long idLow_ = 0L;
    public boolean hasIdLow() { return hasIdLow; }
    public long getIdLow() { return idLow_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasFactory) return false;
      if (!hasIdHigh) return false;
      if (!hasIdLow) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasFactory()) {
        output.writeUInt64(1, getFactory());
      }
      if (hasIdHigh()) {
        output.writeUInt64(2, getIdHigh());
      }
      if (hasIdLow()) {
        output.writeUInt64(3, getIdLow());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasFactory()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, getFactory());
      }
      if (hasIdHigh()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, getIdHigh());
      }
      if (hasIdLow()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, getIdLow());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static D3.OnlineService.OnlineService.GameId parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static D3.OnlineService.OnlineService.GameId parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static D3.OnlineService.OnlineService.GameId parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static D3.OnlineService.OnlineService.GameId parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static D3.OnlineService.OnlineService.GameId parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static D3.OnlineService.OnlineService.GameId parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static D3.OnlineService.OnlineService.GameId parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static D3.OnlineService.OnlineService.GameId parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static D3.OnlineService.OnlineService.GameId parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static D3.OnlineService.OnlineService.GameId parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(D3.OnlineService.OnlineService.GameId prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private D3.OnlineService.OnlineService.GameId result;
      
      // Construct using D3.OnlineService.OnlineService.GameId.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new D3.OnlineService.OnlineService.GameId();
        return builder;
      }
      
      protected D3.OnlineService.OnlineService.GameId internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new D3.OnlineService.OnlineService.GameId();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return D3.OnlineService.OnlineService.GameId.getDescriptor();
      }
      
      public D3.OnlineService.OnlineService.GameId getDefaultInstanceForType() {
        return D3.OnlineService.OnlineService.GameId.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public D3.OnlineService.OnlineService.GameId build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private D3.OnlineService.OnlineService.GameId buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public D3.OnlineService.OnlineService.GameId buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        D3.OnlineService.OnlineService.GameId returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof D3.OnlineService.OnlineService.GameId) {
          return mergeFrom((D3.OnlineService.OnlineService.GameId)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(D3.OnlineService.OnlineService.GameId other) {
        if (other == D3.OnlineService.OnlineService.GameId.getDefaultInstance()) return this;
        if (other.hasFactory()) {
          setFactory(other.getFactory());
        }
        if (other.hasIdHigh()) {
          setIdHigh(other.getIdHigh());
        }
        if (other.hasIdLow()) {
          setIdLow(other.getIdLow());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setFactory(input.readUInt64());
              break;
            }
            case 16: {
              setIdHigh(input.readUInt64());
              break;
            }
            case 24: {
              setIdLow(input.readUInt64());
              break;
            }
          }
        }
      }
      
      
      // required uint64 factory = 1;
      public boolean hasFactory() {
        return result.hasFactory();
      }
      public long getFactory() {
        return result.getFactory();
      }
      public Builder setFactory(long value) {
        result.hasFactory = true;
        result.factory_ = value;
        return this;
      }
      public Builder clearFactory() {
        result.hasFactory = false;
        result.factory_ = 0L;
        return this;
      }
      
      // required uint64 id_high = 2;
      public boolean hasIdHigh() {
        return result.hasIdHigh();
      }
      public long getIdHigh() {
        return result.getIdHigh();
      }
      public Builder setIdHigh(long value) {
        result.hasIdHigh = true;
        result.idHigh_ = value;
        return this;
      }
      public Builder clearIdHigh() {
        result.hasIdHigh = false;
        result.idHigh_ = 0L;
        return this;
      }
      
      // required uint64 id_low = 3;
      public boolean hasIdLow() {
        return result.hasIdLow();
      }
      public long getIdLow() {
        return result.getIdLow();
      }
      public Builder setIdLow(long value) {
        result.hasIdLow = true;
        result.idLow_ = value;
        return this;
      }
      public Builder clearIdLow() {
        result.hasIdLow = false;
        result.idLow_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:D3.OnlineService.GameId)
    }
    
    static {
      defaultInstance = new GameId(true);
      D3.OnlineService.OnlineService.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:D3.OnlineService.GameId)
  }
  
  public static final class ItemId extends
      com.google.protobuf.GeneratedMessage {
    // Use ItemId.newBuilder() to construct.
    private ItemId() {
      initFields();
    }
    private ItemId(boolean noInit) {}
    
    private static final ItemId defaultInstance;
    public static ItemId getDefaultInstance() {
      return defaultInstance;
    }
    
    public ItemId getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return D3.OnlineService.OnlineService.internal_static_D3_OnlineService_ItemId_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return D3.OnlineService.OnlineService.internal_static_D3_OnlineService_ItemId_fieldAccessorTable;
    }
    
    // required uint64 id_high = 1;
    public static final int ID_HIGH_FIELD_NUMBER = 1;
    private boolean hasIdHigh;
    private long idHigh_ = 0L;
    public boolean hasIdHigh() { return hasIdHigh; }
    public long getIdHigh() { return idHigh_; }
    
    // required uint64 id_low = 2;
    public static final int ID_LOW_FIELD_NUMBER = 2;
    private boolean hasIdLow;
    private long idLow_ = 0L;
    public boolean hasIdLow() { return hasIdLow; }
    public long getIdLow() { return idLow_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasIdHigh) return false;
      if (!hasIdLow) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasIdHigh()) {
        output.writeUInt64(1, getIdHigh());
      }
      if (hasIdLow()) {
        output.writeUInt64(2, getIdLow());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasIdHigh()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, getIdHigh());
      }
      if (hasIdLow()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, getIdLow());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static D3.OnlineService.OnlineService.ItemId parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static D3.OnlineService.OnlineService.ItemId parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static D3.OnlineService.OnlineService.ItemId parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static D3.OnlineService.OnlineService.ItemId parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static D3.OnlineService.OnlineService.ItemId parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static D3.OnlineService.OnlineService.ItemId parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static D3.OnlineService.OnlineService.ItemId parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static D3.OnlineService.OnlineService.ItemId parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static D3.OnlineService.OnlineService.ItemId parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static D3.OnlineService.OnlineService.ItemId parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(D3.OnlineService.OnlineService.ItemId prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private D3.OnlineService.OnlineService.ItemId result;
      
      // Construct using D3.OnlineService.OnlineService.ItemId.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new D3.OnlineService.OnlineService.ItemId();
        return builder;
      }
      
      protected D3.OnlineService.OnlineService.ItemId internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new D3.OnlineService.OnlineService.ItemId();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return D3.OnlineService.OnlineService.ItemId.getDescriptor();
      }
      
      public D3.OnlineService.OnlineService.ItemId getDefaultInstanceForType() {
        return D3.OnlineService.OnlineService.ItemId.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public D3.OnlineService.OnlineService.ItemId build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private D3.OnlineService.OnlineService.ItemId buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public D3.OnlineService.OnlineService.ItemId buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        D3.OnlineService.OnlineService.ItemId returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof D3.OnlineService.OnlineService.ItemId) {
          return mergeFrom((D3.OnlineService.OnlineService.ItemId)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(D3.OnlineService.OnlineService.ItemId other) {
        if (other == D3.OnlineService.OnlineService.ItemId.getDefaultInstance()) return this;
        if (other.hasIdHigh()) {
          setIdHigh(other.getIdHigh());
        }
        if (other.hasIdLow()) {
          setIdLow(other.getIdLow());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setIdHigh(input.readUInt64());
              break;
            }
            case 16: {
              setIdLow(input.readUInt64());
              break;
            }
          }
        }
      }
      
      
      // required uint64 id_high = 1;
      public boolean hasIdHigh() {
        return result.hasIdHigh();
      }
      public long getIdHigh() {
        return result.getIdHigh();
      }
      public Builder setIdHigh(long value) {
        result.hasIdHigh = true;
        result.idHigh_ = value;
        return this;
      }
      public Builder clearIdHigh() {
        result.hasIdHigh = false;
        result.idHigh_ = 0L;
        return this;
      }
      
      // required uint64 id_low = 2;
      public boolean hasIdLow() {
        return result.hasIdLow();
      }
      public long getIdLow() {
        return result.getIdLow();
      }
      public Builder setIdLow(long value) {
        result.hasIdLow = true;
        result.idLow_ = value;
        return this;
      }
      public Builder clearIdLow() {
        result.hasIdLow = false;
        result.idLow_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:D3.OnlineService.ItemId)
    }
    
    static {
      defaultInstance = new ItemId(true);
      D3.OnlineService.OnlineService.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:D3.OnlineService.ItemId)
  }
  
  public static final class CoopCreateParams extends
      com.google.protobuf.GeneratedMessage {
    // Use CoopCreateParams.newBuilder() to construct.
    private CoopCreateParams() {
      initFields();
    }
    private CoopCreateParams(boolean noInit) {}
    
    private static final CoopCreateParams defaultInstance;
    public static CoopCreateParams getDefaultInstance() {
      return defaultInstance;
    }
    
    public CoopCreateParams getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return D3.OnlineService.OnlineService.internal_static_D3_OnlineService_CoopCreateParams_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return D3.OnlineService.OnlineService.internal_static_D3_OnlineService_CoopCreateParams_fieldAccessorTable;
    }
    
    // required int32 difficulty_level = 1;
    public static final int DIFFICULTY_LEVEL_FIELD_NUMBER = 1;
    private boolean hasDifficultyLevel;
    private int difficultyLevel_ = 0;
    public boolean hasDifficultyLevel() { return hasDifficultyLevel; }
    public int getDifficultyLevel() { return difficultyLevel_; }
    
    // required sint32 act = 2;
    public static final int ACT_FIELD_NUMBER = 2;
    private boolean hasAct;
    private int act_ = 0;
    public boolean hasAct() { return hasAct; }
    public int getAct() { return act_; }
    
    // required sfixed32 sno_quest = 3;
    public static final int SNO_QUEST_FIELD_NUMBER = 3;
    private boolean hasSnoQuest;
    private int snoQuest_ = 0;
    public boolean hasSnoQuest() { return hasSnoQuest; }
    public int getSnoQuest() { return snoQuest_; }
    
    // required int32 quest_step_id = 4;
    public static final int QUEST_STEP_ID_FIELD_NUMBER = 4;
    private boolean hasQuestStepId;
    private int questStepId_ = 0;
    public boolean hasQuestStepId() { return hasQuestStepId; }
    public int getQuestStepId() { return questStepId_; }
    
    // optional .D3.OnlineService.EntityId resume_from_save_hero_id = 5;
    public static final int RESUME_FROM_SAVE_HERO_ID_FIELD_NUMBER = 5;
    private boolean hasResumeFromSaveHeroId;
    private D3.OnlineService.OnlineService.EntityId resumeFromSaveHeroId_;
    public boolean hasResumeFromSaveHeroId() { return hasResumeFromSaveHeroId; }
    public D3.OnlineService.OnlineService.EntityId getResumeFromSaveHeroId() { return resumeFromSaveHeroId_; }
    
    // required bool open_to_friends = 6;
    public static final int OPEN_TO_FRIENDS_FIELD_NUMBER = 6;
    private boolean hasOpenToFriends;
    private boolean openToFriends_ = false;
    public boolean hasOpenToFriends() { return hasOpenToFriends; }
    public boolean getOpenToFriends() { return openToFriends_; }
    
    // optional string open_to_friends_message = 7;
    public static final int OPEN_TO_FRIENDS_MESSAGE_FIELD_NUMBER = 7;
    private boolean hasOpenToFriendsMessage;
    private java.lang.String openToFriendsMessage_ = "";
    public boolean hasOpenToFriendsMessage() { return hasOpenToFriendsMessage; }
    public java.lang.String getOpenToFriendsMessage() { return openToFriendsMessage_; }
    
    private void initFields() {
      resumeFromSaveHeroId_ = D3.OnlineService.OnlineService.EntityId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasDifficultyLevel) return false;
      if (!hasAct) return false;
      if (!hasSnoQuest) return false;
      if (!hasQuestStepId) return false;
      if (!hasOpenToFriends) return false;
      if (hasResumeFromSaveHeroId()) {
        if (!getResumeFromSaveHeroId().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasDifficultyLevel()) {
        output.writeInt32(1, getDifficultyLevel());
      }
      if (hasAct()) {
        output.writeSInt32(2, getAct());
      }
      if (hasSnoQuest()) {
        output.writeSFixed32(3, getSnoQuest());
      }
      if (hasQuestStepId()) {
        output.writeInt32(4, getQuestStepId());
      }
      if (hasResumeFromSaveHeroId()) {
        output.writeMessage(5, getResumeFromSaveHeroId());
      }
      if (hasOpenToFriends()) {
        output.writeBool(6, getOpenToFriends());
      }
      if (hasOpenToFriendsMessage()) {
        output.writeString(7, getOpenToFriendsMessage());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasDifficultyLevel()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getDifficultyLevel());
      }
      if (hasAct()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, getAct());
      }
      if (hasSnoQuest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(3, getSnoQuest());
      }
      if (hasQuestStepId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, getQuestStepId());
      }
      if (hasResumeFromSaveHeroId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getResumeFromSaveHeroId());
      }
      if (hasOpenToFriends()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, getOpenToFriends());
      }
      if (hasOpenToFriendsMessage()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(7, getOpenToFriendsMessage());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static D3.OnlineService.OnlineService.CoopCreateParams parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static D3.OnlineService.OnlineService.CoopCreateParams parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static D3.OnlineService.OnlineService.CoopCreateParams parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static D3.OnlineService.OnlineService.CoopCreateParams parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static D3.OnlineService.OnlineService.CoopCreateParams parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static D3.OnlineService.OnlineService.CoopCreateParams parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static D3.OnlineService.OnlineService.CoopCreateParams parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static D3.OnlineService.OnlineService.CoopCreateParams parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static D3.OnlineService.OnlineService.CoopCreateParams parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static D3.OnlineService.OnlineService.CoopCreateParams parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(D3.OnlineService.OnlineService.CoopCreateParams prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private D3.OnlineService.OnlineService.CoopCreateParams result;
      
      // Construct using D3.OnlineService.OnlineService.CoopCreateParams.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new D3.OnlineService.OnlineService.CoopCreateParams();
        return builder;
      }
      
      protected D3.OnlineService.OnlineService.CoopCreateParams internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new D3.OnlineService.OnlineService.CoopCreateParams();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return D3.OnlineService.OnlineService.CoopCreateParams.getDescriptor();
      }
      
      public D3.OnlineService.OnlineService.CoopCreateParams getDefaultInstanceForType() {
        return D3.OnlineService.OnlineService.CoopCreateParams.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public D3.OnlineService.OnlineService.CoopCreateParams build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private D3.OnlineService.OnlineService.CoopCreateParams buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public D3.OnlineService.OnlineService.CoopCreateParams buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        D3.OnlineService.OnlineService.CoopCreateParams returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof D3.OnlineService.OnlineService.CoopCreateParams) {
          return mergeFrom((D3.OnlineService.OnlineService.CoopCreateParams)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(D3.OnlineService.OnlineService.CoopCreateParams other) {
        if (other == D3.OnlineService.OnlineService.CoopCreateParams.getDefaultInstance()) return this;
        if (other.hasDifficultyLevel()) {
          setDifficultyLevel(other.getDifficultyLevel());
        }
        if (other.hasAct()) {
          setAct(other.getAct());
        }
        if (other.hasSnoQuest()) {
          setSnoQuest(other.getSnoQuest());
        }
        if (other.hasQuestStepId()) {
          setQuestStepId(other.getQuestStepId());
        }
        if (other.hasResumeFromSaveHeroId()) {
          mergeResumeFromSaveHeroId(other.getResumeFromSaveHeroId());
        }
        if (other.hasOpenToFriends()) {
          setOpenToFriends(other.getOpenToFriends());
        }
        if (other.hasOpenToFriendsMessage()) {
          setOpenToFriendsMessage(other.getOpenToFriendsMessage());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setDifficultyLevel(input.readInt32());
              break;
            }
            case 16: {
              setAct(input.readSInt32());
              break;
            }
            case 29: {
              setSnoQuest(input.readSFixed32());
              break;
            }
            case 32: {
              setQuestStepId(input.readInt32());
              break;
            }
            case 42: {
              D3.OnlineService.OnlineService.EntityId.Builder subBuilder = D3.OnlineService.OnlineService.EntityId.newBuilder();
              if (hasResumeFromSaveHeroId()) {
                subBuilder.mergeFrom(getResumeFromSaveHeroId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setResumeFromSaveHeroId(subBuilder.buildPartial());
              break;
            }
            case 48: {
              setOpenToFriends(input.readBool());
              break;
            }
            case 58: {
              setOpenToFriendsMessage(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required int32 difficulty_level = 1;
      public boolean hasDifficultyLevel() {
        return result.hasDifficultyLevel();
      }
      public int getDifficultyLevel() {
        return result.getDifficultyLevel();
      }
      public Builder setDifficultyLevel(int value) {
        result.hasDifficultyLevel = true;
        result.difficultyLevel_ = value;
        return this;
      }
      public Builder clearDifficultyLevel() {
        result.hasDifficultyLevel = false;
        result.difficultyLevel_ = 0;
        return this;
      }
      
      // required sint32 act = 2;
      public boolean hasAct() {
        return result.hasAct();
      }
      public int getAct() {
        return result.getAct();
      }
      public Builder setAct(int value) {
        result.hasAct = true;
        result.act_ = value;
        return this;
      }
      public Builder clearAct() {
        result.hasAct = false;
        result.act_ = 0;
        return this;
      }
      
      // required sfixed32 sno_quest = 3;
      public boolean hasSnoQuest() {
        return result.hasSnoQuest();
      }
      public int getSnoQuest() {
        return result.getSnoQuest();
      }
      public Builder setSnoQuest(int value) {
        result.hasSnoQuest = true;
        result.snoQuest_ = value;
        return this;
      }
      public Builder clearSnoQuest() {
        result.hasSnoQuest = false;
        result.snoQuest_ = 0;
        return this;
      }
      
      // required int32 quest_step_id = 4;
      public boolean hasQuestStepId() {
        return result.hasQuestStepId();
      }
      public int getQuestStepId() {
        return result.getQuestStepId();
      }
      public Builder setQuestStepId(int value) {
        result.hasQuestStepId = true;
        result.questStepId_ = value;
        return this;
      }
      public Builder clearQuestStepId() {
        result.hasQuestStepId = false;
        result.questStepId_ = 0;
        return this;
      }
      
      // optional .D3.OnlineService.EntityId resume_from_save_hero_id = 5;
      public boolean hasResumeFromSaveHeroId() {
        return result.hasResumeFromSaveHeroId();
      }
      public D3.OnlineService.OnlineService.EntityId getResumeFromSaveHeroId() {
        return result.getResumeFromSaveHeroId();
      }
      public Builder setResumeFromSaveHeroId(D3.OnlineService.OnlineService.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasResumeFromSaveHeroId = true;
        result.resumeFromSaveHeroId_ = value;
        return this;
      }
      public Builder setResumeFromSaveHeroId(D3.OnlineService.OnlineService.EntityId.Builder builderForValue) {
        result.hasResumeFromSaveHeroId = true;
        result.resumeFromSaveHeroId_ = builderForValue.build();
        return this;
      }
      public Builder mergeResumeFromSaveHeroId(D3.OnlineService.OnlineService.EntityId value) {
        if (result.hasResumeFromSaveHeroId() &&
            result.resumeFromSaveHeroId_ != D3.OnlineService.OnlineService.EntityId.getDefaultInstance()) {
          result.resumeFromSaveHeroId_ =
            D3.OnlineService.OnlineService.EntityId.newBuilder(result.resumeFromSaveHeroId_).mergeFrom(value).buildPartial();
        } else {
          result.resumeFromSaveHeroId_ = value;
        }
        result.hasResumeFromSaveHeroId = true;
        return this;
      }
      public Builder clearResumeFromSaveHeroId() {
        result.hasResumeFromSaveHeroId = false;
        result.resumeFromSaveHeroId_ = D3.OnlineService.OnlineService.EntityId.getDefaultInstance();
        return this;
      }
      
      // required bool open_to_friends = 6;
      public boolean hasOpenToFriends() {
        return result.hasOpenToFriends();
      }
      public boolean getOpenToFriends() {
        return result.getOpenToFriends();
      }
      public Builder setOpenToFriends(boolean value) {
        result.hasOpenToFriends = true;
        result.openToFriends_ = value;
        return this;
      }
      public Builder clearOpenToFriends() {
        result.hasOpenToFriends = false;
        result.openToFriends_ = false;
        return this;
      }
      
      // optional string open_to_friends_message = 7;
      public boolean hasOpenToFriendsMessage() {
        return result.hasOpenToFriendsMessage();
      }
      public java.lang.String getOpenToFriendsMessage() {
        return result.getOpenToFriendsMessage();
      }
      public Builder setOpenToFriendsMessage(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasOpenToFriendsMessage = true;
        result.openToFriendsMessage_ = value;
        return this;
      }
      public Builder clearOpenToFriendsMessage() {
        result.hasOpenToFriendsMessage = false;
        result.openToFriendsMessage_ = getDefaultInstance().getOpenToFriendsMessage();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:D3.OnlineService.CoopCreateParams)
    }
    
    static {
      defaultInstance = new CoopCreateParams(true);
      D3.OnlineService.OnlineService.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:D3.OnlineService.CoopCreateParams)
  }
  
  public static final class PvPCreateParams extends
      com.google.protobuf.GeneratedMessage {
    // Use PvPCreateParams.newBuilder() to construct.
    private PvPCreateParams() {
      initFields();
    }
    private PvPCreateParams(boolean noInit) {}
    
    private static final PvPCreateParams defaultInstance;
    public static PvPCreateParams getDefaultInstance() {
      return defaultInstance;
    }
    
    public PvPCreateParams getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return D3.OnlineService.OnlineService.internal_static_D3_OnlineService_PvPCreateParams_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return D3.OnlineService.OnlineService.internal_static_D3_OnlineService_PvPCreateParams_fieldAccessorTable;
    }
    
    // required sfixed32 sno_world = 1;
    public static final int SNO_WORLD_FIELD_NUMBER = 1;
    private boolean hasSnoWorld;
    private int snoWorld_ = 0;
    public boolean hasSnoWorld() { return hasSnoWorld; }
    public int getSnoWorld() { return snoWorld_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasSnoWorld) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSnoWorld()) {
        output.writeSFixed32(1, getSnoWorld());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSnoWorld()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(1, getSnoWorld());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static D3.OnlineService.OnlineService.PvPCreateParams parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static D3.OnlineService.OnlineService.PvPCreateParams parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static D3.OnlineService.OnlineService.PvPCreateParams parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static D3.OnlineService.OnlineService.PvPCreateParams parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static D3.OnlineService.OnlineService.PvPCreateParams parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static D3.OnlineService.OnlineService.PvPCreateParams parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static D3.OnlineService.OnlineService.PvPCreateParams parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static D3.OnlineService.OnlineService.PvPCreateParams parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static D3.OnlineService.OnlineService.PvPCreateParams parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static D3.OnlineService.OnlineService.PvPCreateParams parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(D3.OnlineService.OnlineService.PvPCreateParams prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private D3.OnlineService.OnlineService.PvPCreateParams result;
      
      // Construct using D3.OnlineService.OnlineService.PvPCreateParams.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new D3.OnlineService.OnlineService.PvPCreateParams();
        return builder;
      }
      
      protected D3.OnlineService.OnlineService.PvPCreateParams internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new D3.OnlineService.OnlineService.PvPCreateParams();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return D3.OnlineService.OnlineService.PvPCreateParams.getDescriptor();
      }
      
      public D3.OnlineService.OnlineService.PvPCreateParams getDefaultInstanceForType() {
        return D3.OnlineService.OnlineService.PvPCreateParams.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public D3.OnlineService.OnlineService.PvPCreateParams build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private D3.OnlineService.OnlineService.PvPCreateParams buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public D3.OnlineService.OnlineService.PvPCreateParams buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        D3.OnlineService.OnlineService.PvPCreateParams returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof D3.OnlineService.OnlineService.PvPCreateParams) {
          return mergeFrom((D3.OnlineService.OnlineService.PvPCreateParams)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(D3.OnlineService.OnlineService.PvPCreateParams other) {
        if (other == D3.OnlineService.OnlineService.PvPCreateParams.getDefaultInstance()) return this;
        if (other.hasSnoWorld()) {
          setSnoWorld(other.getSnoWorld());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 13: {
              setSnoWorld(input.readSFixed32());
              break;
            }
          }
        }
      }
      
      
      // required sfixed32 sno_world = 1;
      public boolean hasSnoWorld() {
        return result.hasSnoWorld();
      }
      public int getSnoWorld() {
        return result.getSnoWorld();
      }
      public Builder setSnoWorld(int value) {
        result.hasSnoWorld = true;
        result.snoWorld_ = value;
        return this;
      }
      public Builder clearSnoWorld() {
        result.hasSnoWorld = false;
        result.snoWorld_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:D3.OnlineService.PvPCreateParams)
    }
    
    static {
      defaultInstance = new PvPCreateParams(true);
      D3.OnlineService.OnlineService.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:D3.OnlineService.PvPCreateParams)
  }
  
  public static final class GameCreateParams extends
      com.google.protobuf.GeneratedMessage {
    // Use GameCreateParams.newBuilder() to construct.
    private GameCreateParams() {
      initFields();
    }
    private GameCreateParams(boolean noInit) {}
    
    private static final GameCreateParams defaultInstance;
    public static GameCreateParams getDefaultInstance() {
      return defaultInstance;
    }
    
    public GameCreateParams getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return D3.OnlineService.OnlineService.internal_static_D3_OnlineService_GameCreateParams_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return D3.OnlineService.OnlineService.internal_static_D3_OnlineService_GameCreateParams_fieldAccessorTable;
    }
    
    // required sint32 game_type = 1;
    public static final int GAME_TYPE_FIELD_NUMBER = 1;
    private boolean hasGameType;
    private int gameType_ = 0;
    public boolean hasGameType() { return hasGameType; }
    public int getGameType() { return gameType_; }
    
    // required uint32 creation_flags = 2;
    public static final int CREATION_FLAGS_FIELD_NUMBER = 2;
    private boolean hasCreationFlags;
    private int creationFlags_ = 0;
    public boolean hasCreationFlags() { return hasCreationFlags; }
    public int getCreationFlags() { return creationFlags_; }
    
    // optional .D3.OnlineService.CoopCreateParams coop = 3;
    public static final int COOP_FIELD_NUMBER = 3;
    private boolean hasCoop;
    private D3.OnlineService.OnlineService.CoopCreateParams coop_;
    public boolean hasCoop() { return hasCoop; }
    public D3.OnlineService.OnlineService.CoopCreateParams getCoop() { return coop_; }
    
    // optional .D3.OnlineService.PvPCreateParams pvp = 4;
    public static final int PVP_FIELD_NUMBER = 4;
    private boolean hasPvp;
    private D3.OnlineService.OnlineService.PvPCreateParams pvp_;
    public boolean hasPvp() { return hasPvp; }
    public D3.OnlineService.OnlineService.PvPCreateParams getPvp() { return pvp_; }
    
    // optional string name = 5;
    public static final int NAME_FIELD_NUMBER = 5;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // required bool is_private = 6;
    public static final int IS_PRIVATE_FIELD_NUMBER = 6;
    private boolean hasIsPrivate;
    private boolean isPrivate_ = false;
    public boolean hasIsPrivate() { return hasIsPrivate; }
    public boolean getIsPrivate() { return isPrivate_; }
    
    private void initFields() {
      coop_ = D3.OnlineService.OnlineService.CoopCreateParams.getDefaultInstance();
      pvp_ = D3.OnlineService.OnlineService.PvPCreateParams.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasGameType) return false;
      if (!hasCreationFlags) return false;
      if (!hasIsPrivate) return false;
      if (hasCoop()) {
        if (!getCoop().isInitialized()) return false;
      }
      if (hasPvp()) {
        if (!getPvp().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasGameType()) {
        output.writeSInt32(1, getGameType());
      }
      if (hasCreationFlags()) {
        output.writeUInt32(2, getCreationFlags());
      }
      if (hasCoop()) {
        output.writeMessage(3, getCoop());
      }
      if (hasPvp()) {
        output.writeMessage(4, getPvp());
      }
      if (hasName()) {
        output.writeString(5, getName());
      }
      if (hasIsPrivate()) {
        output.writeBool(6, getIsPrivate());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasGameType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, getGameType());
      }
      if (hasCreationFlags()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getCreationFlags());
      }
      if (hasCoop()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getCoop());
      }
      if (hasPvp()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getPvp());
      }
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getName());
      }
      if (hasIsPrivate()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, getIsPrivate());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static D3.OnlineService.OnlineService.GameCreateParams parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static D3.OnlineService.OnlineService.GameCreateParams parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static D3.OnlineService.OnlineService.GameCreateParams parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static D3.OnlineService.OnlineService.GameCreateParams parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static D3.OnlineService.OnlineService.GameCreateParams parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static D3.OnlineService.OnlineService.GameCreateParams parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static D3.OnlineService.OnlineService.GameCreateParams parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static D3.OnlineService.OnlineService.GameCreateParams parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static D3.OnlineService.OnlineService.GameCreateParams parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static D3.OnlineService.OnlineService.GameCreateParams parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(D3.OnlineService.OnlineService.GameCreateParams prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private D3.OnlineService.OnlineService.GameCreateParams result;
      
      // Construct using D3.OnlineService.OnlineService.GameCreateParams.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new D3.OnlineService.OnlineService.GameCreateParams();
        return builder;
      }
      
      protected D3.OnlineService.OnlineService.GameCreateParams internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new D3.OnlineService.OnlineService.GameCreateParams();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return D3.OnlineService.OnlineService.GameCreateParams.getDescriptor();
      }
      
      public D3.OnlineService.OnlineService.GameCreateParams getDefaultInstanceForType() {
        return D3.OnlineService.OnlineService.GameCreateParams.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public D3.OnlineService.OnlineService.GameCreateParams build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private D3.OnlineService.OnlineService.GameCreateParams buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public D3.OnlineService.OnlineService.GameCreateParams buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        D3.OnlineService.OnlineService.GameCreateParams returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof D3.OnlineService.OnlineService.GameCreateParams) {
          return mergeFrom((D3.OnlineService.OnlineService.GameCreateParams)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(D3.OnlineService.OnlineService.GameCreateParams other) {
        if (other == D3.OnlineService.OnlineService.GameCreateParams.getDefaultInstance()) return this;
        if (other.hasGameType()) {
          setGameType(other.getGameType());
        }
        if (other.hasCreationFlags()) {
          setCreationFlags(other.getCreationFlags());
        }
        if (other.hasCoop()) {
          mergeCoop(other.getCoop());
        }
        if (other.hasPvp()) {
          mergePvp(other.getPvp());
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasIsPrivate()) {
          setIsPrivate(other.getIsPrivate());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setGameType(input.readSInt32());
              break;
            }
            case 16: {
              setCreationFlags(input.readUInt32());
              break;
            }
            case 26: {
              D3.OnlineService.OnlineService.CoopCreateParams.Builder subBuilder = D3.OnlineService.OnlineService.CoopCreateParams.newBuilder();
              if (hasCoop()) {
                subBuilder.mergeFrom(getCoop());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCoop(subBuilder.buildPartial());
              break;
            }
            case 34: {
              D3.OnlineService.OnlineService.PvPCreateParams.Builder subBuilder = D3.OnlineService.OnlineService.PvPCreateParams.newBuilder();
              if (hasPvp()) {
                subBuilder.mergeFrom(getPvp());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setPvp(subBuilder.buildPartial());
              break;
            }
            case 42: {
              setName(input.readString());
              break;
            }
            case 48: {
              setIsPrivate(input.readBool());
              break;
            }
          }
        }
      }
      
      
      // required sint32 game_type = 1;
      public boolean hasGameType() {
        return result.hasGameType();
      }
      public int getGameType() {
        return result.getGameType();
      }
      public Builder setGameType(int value) {
        result.hasGameType = true;
        result.gameType_ = value;
        return this;
      }
      public Builder clearGameType() {
        result.hasGameType = false;
        result.gameType_ = 0;
        return this;
      }
      
      // required uint32 creation_flags = 2;
      public boolean hasCreationFlags() {
        return result.hasCreationFlags();
      }
      public int getCreationFlags() {
        return result.getCreationFlags();
      }
      public Builder setCreationFlags(int value) {
        result.hasCreationFlags = true;
        result.creationFlags_ = value;
        return this;
      }
      public Builder clearCreationFlags() {
        result.hasCreationFlags = false;
        result.creationFlags_ = 0;
        return this;
      }
      
      // optional .D3.OnlineService.CoopCreateParams coop = 3;
      public boolean hasCoop() {
        return result.hasCoop();
      }
      public D3.OnlineService.OnlineService.CoopCreateParams getCoop() {
        return result.getCoop();
      }
      public Builder setCoop(D3.OnlineService.OnlineService.CoopCreateParams value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasCoop = true;
        result.coop_ = value;
        return this;
      }
      public Builder setCoop(D3.OnlineService.OnlineService.CoopCreateParams.Builder builderForValue) {
        result.hasCoop = true;
        result.coop_ = builderForValue.build();
        return this;
      }
      public Builder mergeCoop(D3.OnlineService.OnlineService.CoopCreateParams value) {
        if (result.hasCoop() &&
            result.coop_ != D3.OnlineService.OnlineService.CoopCreateParams.getDefaultInstance()) {
          result.coop_ =
            D3.OnlineService.OnlineService.CoopCreateParams.newBuilder(result.coop_).mergeFrom(value).buildPartial();
        } else {
          result.coop_ = value;
        }
        result.hasCoop = true;
        return this;
      }
      public Builder clearCoop() {
        result.hasCoop = false;
        result.coop_ = D3.OnlineService.OnlineService.CoopCreateParams.getDefaultInstance();
        return this;
      }
      
      // optional .D3.OnlineService.PvPCreateParams pvp = 4;
      public boolean hasPvp() {
        return result.hasPvp();
      }
      public D3.OnlineService.OnlineService.PvPCreateParams getPvp() {
        return result.getPvp();
      }
      public Builder setPvp(D3.OnlineService.OnlineService.PvPCreateParams value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasPvp = true;
        result.pvp_ = value;
        return this;
      }
      public Builder setPvp(D3.OnlineService.OnlineService.PvPCreateParams.Builder builderForValue) {
        result.hasPvp = true;
        result.pvp_ = builderForValue.build();
        return this;
      }
      public Builder mergePvp(D3.OnlineService.OnlineService.PvPCreateParams value) {
        if (result.hasPvp() &&
            result.pvp_ != D3.OnlineService.OnlineService.PvPCreateParams.getDefaultInstance()) {
          result.pvp_ =
            D3.OnlineService.OnlineService.PvPCreateParams.newBuilder(result.pvp_).mergeFrom(value).buildPartial();
        } else {
          result.pvp_ = value;
        }
        result.hasPvp = true;
        return this;
      }
      public Builder clearPvp() {
        result.hasPvp = false;
        result.pvp_ = D3.OnlineService.OnlineService.PvPCreateParams.getDefaultInstance();
        return this;
      }
      
      // optional string name = 5;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // required bool is_private = 6;
      public boolean hasIsPrivate() {
        return result.hasIsPrivate();
      }
      public boolean getIsPrivate() {
        return result.getIsPrivate();
      }
      public Builder setIsPrivate(boolean value) {
        result.hasIsPrivate = true;
        result.isPrivate_ = value;
        return this;
      }
      public Builder clearIsPrivate() {
        result.hasIsPrivate = false;
        result.isPrivate_ = false;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:D3.OnlineService.GameCreateParams)
    }
    
    static {
      defaultInstance = new GameCreateParams(true);
      D3.OnlineService.OnlineService.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:D3.OnlineService.GameCreateParams)
  }
  
  public static final class HeroCreateParams extends
      com.google.protobuf.GeneratedMessage {
    // Use HeroCreateParams.newBuilder() to construct.
    private HeroCreateParams() {
      initFields();
    }
    private HeroCreateParams(boolean noInit) {}
    
    private static final HeroCreateParams defaultInstance;
    public static HeroCreateParams getDefaultInstance() {
      return defaultInstance;
    }
    
    public HeroCreateParams getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return D3.OnlineService.OnlineService.internal_static_D3_OnlineService_HeroCreateParams_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return D3.OnlineService.OnlineService.internal_static_D3_OnlineService_HeroCreateParams_fieldAccessorTable;
    }
    
    // required sfixed32 gbid_class = 1;
    public static final int GBID_CLASS_FIELD_NUMBER = 1;
    private boolean hasGbidClass;
    private int gbidClass_ = 0;
    public boolean hasGbidClass() { return hasGbidClass; }
    public int getGbidClass() { return gbidClass_; }
    
    // required bool is_hardcore = 2;
    public static final int IS_HARDCORE_FIELD_NUMBER = 2;
    private boolean hasIsHardcore;
    private boolean isHardcore_ = false;
    public boolean hasIsHardcore() { return hasIsHardcore; }
    public boolean getIsHardcore() { return isHardcore_; }
    
    // required bool is_female = 3;
    public static final int IS_FEMALE_FIELD_NUMBER = 3;
    private boolean hasIsFemale;
    private boolean isFemale_ = false;
    public boolean hasIsFemale() { return hasIsFemale; }
    public boolean getIsFemale() { return isFemale_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasGbidClass) return false;
      if (!hasIsHardcore) return false;
      if (!hasIsFemale) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasGbidClass()) {
        output.writeSFixed32(1, getGbidClass());
      }
      if (hasIsHardcore()) {
        output.writeBool(2, getIsHardcore());
      }
      if (hasIsFemale()) {
        output.writeBool(3, getIsFemale());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasGbidClass()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(1, getGbidClass());
      }
      if (hasIsHardcore()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, getIsHardcore());
      }
      if (hasIsFemale()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, getIsFemale());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static D3.OnlineService.OnlineService.HeroCreateParams parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static D3.OnlineService.OnlineService.HeroCreateParams parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static D3.OnlineService.OnlineService.HeroCreateParams parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static D3.OnlineService.OnlineService.HeroCreateParams parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static D3.OnlineService.OnlineService.HeroCreateParams parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static D3.OnlineService.OnlineService.HeroCreateParams parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static D3.OnlineService.OnlineService.HeroCreateParams parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static D3.OnlineService.OnlineService.HeroCreateParams parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static D3.OnlineService.OnlineService.HeroCreateParams parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static D3.OnlineService.OnlineService.HeroCreateParams parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(D3.OnlineService.OnlineService.HeroCreateParams prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private D3.OnlineService.OnlineService.HeroCreateParams result;
      
      // Construct using D3.OnlineService.OnlineService.HeroCreateParams.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new D3.OnlineService.OnlineService.HeroCreateParams();
        return builder;
      }
      
      protected D3.OnlineService.OnlineService.HeroCreateParams internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new D3.OnlineService.OnlineService.HeroCreateParams();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return D3.OnlineService.OnlineService.HeroCreateParams.getDescriptor();
      }
      
      public D3.OnlineService.OnlineService.HeroCreateParams getDefaultInstanceForType() {
        return D3.OnlineService.OnlineService.HeroCreateParams.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public D3.OnlineService.OnlineService.HeroCreateParams build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private D3.OnlineService.OnlineService.HeroCreateParams buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public D3.OnlineService.OnlineService.HeroCreateParams buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        D3.OnlineService.OnlineService.HeroCreateParams returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof D3.OnlineService.OnlineService.HeroCreateParams) {
          return mergeFrom((D3.OnlineService.OnlineService.HeroCreateParams)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(D3.OnlineService.OnlineService.HeroCreateParams other) {
        if (other == D3.OnlineService.OnlineService.HeroCreateParams.getDefaultInstance()) return this;
        if (other.hasGbidClass()) {
          setGbidClass(other.getGbidClass());
        }
        if (other.hasIsHardcore()) {
          setIsHardcore(other.getIsHardcore());
        }
        if (other.hasIsFemale()) {
          setIsFemale(other.getIsFemale());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 13: {
              setGbidClass(input.readSFixed32());
              break;
            }
            case 16: {
              setIsHardcore(input.readBool());
              break;
            }
            case 24: {
              setIsFemale(input.readBool());
              break;
            }
          }
        }
      }
      
      
      // required sfixed32 gbid_class = 1;
      public boolean hasGbidClass() {
        return result.hasGbidClass();
      }
      public int getGbidClass() {
        return result.getGbidClass();
      }
      public Builder setGbidClass(int value) {
        result.hasGbidClass = true;
        result.gbidClass_ = value;
        return this;
      }
      public Builder clearGbidClass() {
        result.hasGbidClass = false;
        result.gbidClass_ = 0;
        return this;
      }
      
      // required bool is_hardcore = 2;
      public boolean hasIsHardcore() {
        return result.hasIsHardcore();
      }
      public boolean getIsHardcore() {
        return result.getIsHardcore();
      }
      public Builder setIsHardcore(boolean value) {
        result.hasIsHardcore = true;
        result.isHardcore_ = value;
        return this;
      }
      public Builder clearIsHardcore() {
        result.hasIsHardcore = false;
        result.isHardcore_ = false;
        return this;
      }
      
      // required bool is_female = 3;
      public boolean hasIsFemale() {
        return result.hasIsFemale();
      }
      public boolean getIsFemale() {
        return result.getIsFemale();
      }
      public Builder setIsFemale(boolean value) {
        result.hasIsFemale = true;
        result.isFemale_ = value;
        return this;
      }
      public Builder clearIsFemale() {
        result.hasIsFemale = false;
        result.isFemale_ = false;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:D3.OnlineService.HeroCreateParams)
    }
    
    static {
      defaultInstance = new HeroCreateParams(true);
      D3.OnlineService.OnlineService.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:D3.OnlineService.HeroCreateParams)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_D3_OnlineService_EntityId_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_D3_OnlineService_EntityId_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_D3_OnlineService_GameId_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_D3_OnlineService_GameId_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_D3_OnlineService_ItemId_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_D3_OnlineService_ItemId_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_D3_OnlineService_CoopCreateParams_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_D3_OnlineService_CoopCreateParams_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_D3_OnlineService_PvPCreateParams_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_D3_OnlineService_PvPCreateParams_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_D3_OnlineService_GameCreateParams_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_D3_OnlineService_GameCreateParams_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_D3_OnlineService_HeroCreateParams_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_D3_OnlineService_HeroCreateParams_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023OnlineService.proto\022\020D3.OnlineService\"" +
      "+\n\010EntityId\022\017\n\007id_high\030\001 \002(\004\022\016\n\006id_low\030\002" +
      " \002(\004\":\n\006GameId\022\017\n\007factory\030\001 \002(\004\022\017\n\007id_hi" +
      "gh\030\002 \002(\004\022\016\n\006id_low\030\003 \002(\004\")\n\006ItemId\022\017\n\007id" +
      "_high\030\001 \002(\004\022\016\n\006id_low\030\002 \002(\004\"\333\001\n\020CoopCrea" +
      "teParams\022\030\n\020difficulty_level\030\001 \002(\005\022\013\n\003ac" +
      "t\030\002 \002(\021\022\021\n\tsno_quest\030\003 \002(\017\022\025\n\rquest_step" +
      "_id\030\004 \002(\005\022<\n\030resume_from_save_hero_id\030\005 " +
      "\001(\0132\032.D3.OnlineService.EntityId\022\027\n\017open_" +
      "to_friends\030\006 \002(\010\022\037\n\027open_to_friends_mess",
      "age\030\007 \001(\t\"$\n\017PvPCreateParams\022\021\n\tsno_worl" +
      "d\030\001 \002(\017\"\301\001\n\020GameCreateParams\022\021\n\tgame_typ" +
      "e\030\001 \002(\021\022\026\n\016creation_flags\030\002 \002(\r\0220\n\004coop\030" +
      "\003 \001(\0132\".D3.OnlineService.CoopCreateParam" +
      "s\022.\n\003pvp\030\004 \001(\0132!.D3.OnlineService.PvPCre" +
      "ateParams\022\014\n\004name\030\005 \001(\t\022\022\n\nis_private\030\006 " +
      "\002(\010\"N\n\020HeroCreateParams\022\022\n\ngbid_class\030\001 " +
      "\002(\017\022\023\n\013is_hardcore\030\002 \002(\010\022\021\n\tis_female\030\003 " +
      "\002(\010"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_D3_OnlineService_EntityId_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_D3_OnlineService_EntityId_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_D3_OnlineService_EntityId_descriptor,
              new java.lang.String[] { "IdHigh", "IdLow", },
              D3.OnlineService.OnlineService.EntityId.class,
              D3.OnlineService.OnlineService.EntityId.Builder.class);
          internal_static_D3_OnlineService_GameId_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_D3_OnlineService_GameId_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_D3_OnlineService_GameId_descriptor,
              new java.lang.String[] { "Factory", "IdHigh", "IdLow", },
              D3.OnlineService.OnlineService.GameId.class,
              D3.OnlineService.OnlineService.GameId.Builder.class);
          internal_static_D3_OnlineService_ItemId_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_D3_OnlineService_ItemId_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_D3_OnlineService_ItemId_descriptor,
              new java.lang.String[] { "IdHigh", "IdLow", },
              D3.OnlineService.OnlineService.ItemId.class,
              D3.OnlineService.OnlineService.ItemId.Builder.class);
          internal_static_D3_OnlineService_CoopCreateParams_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_D3_OnlineService_CoopCreateParams_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_D3_OnlineService_CoopCreateParams_descriptor,
              new java.lang.String[] { "DifficultyLevel", "Act", "SnoQuest", "QuestStepId", "ResumeFromSaveHeroId", "OpenToFriends", "OpenToFriendsMessage", },
              D3.OnlineService.OnlineService.CoopCreateParams.class,
              D3.OnlineService.OnlineService.CoopCreateParams.Builder.class);
          internal_static_D3_OnlineService_PvPCreateParams_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_D3_OnlineService_PvPCreateParams_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_D3_OnlineService_PvPCreateParams_descriptor,
              new java.lang.String[] { "SnoWorld", },
              D3.OnlineService.OnlineService.PvPCreateParams.class,
              D3.OnlineService.OnlineService.PvPCreateParams.Builder.class);
          internal_static_D3_OnlineService_GameCreateParams_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_D3_OnlineService_GameCreateParams_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_D3_OnlineService_GameCreateParams_descriptor,
              new java.lang.String[] { "GameType", "CreationFlags", "Coop", "Pvp", "Name", "IsPrivate", },
              D3.OnlineService.OnlineService.GameCreateParams.class,
              D3.OnlineService.OnlineService.GameCreateParams.Builder.class);
          internal_static_D3_OnlineService_HeroCreateParams_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_D3_OnlineService_HeroCreateParams_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_D3_OnlineService_HeroCreateParams_descriptor,
              new java.lang.String[] { "GbidClass", "IsHardcore", "IsFemale", },
              D3.OnlineService.OnlineService.HeroCreateParams.class,
              D3.OnlineService.OnlineService.HeroCreateParams.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
