// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PartyMessage.proto

package D3.PartyMessage;

public final class PartyMessage {
  private PartyMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class ScreenStatus extends
      com.google.protobuf.GeneratedMessage {
    // Use ScreenStatus.newBuilder() to construct.
    private ScreenStatus() {
      initFields();
    }
    private ScreenStatus(boolean noInit) {}
    
    private static final ScreenStatus defaultInstance;
    public static ScreenStatus getDefaultInstance() {
      return defaultInstance;
    }
    
    public ScreenStatus getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return D3.PartyMessage.PartyMessage.internal_static_D3_PartyMessage_ScreenStatus_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return D3.PartyMessage.PartyMessage.internal_static_D3_PartyMessage_ScreenStatus_fieldAccessorTable;
    }
    
    // required int32 screen = 1;
    public static final int SCREEN_FIELD_NUMBER = 1;
    private boolean hasScreen;
    private int screen_ = 0;
    public boolean hasScreen() { return hasScreen; }
    public int getScreen() { return screen_; }
    
    // required int32 status = 2;
    public static final int STATUS_FIELD_NUMBER = 2;
    private boolean hasStatus;
    private int status_ = 0;
    public boolean hasStatus() { return hasStatus; }
    public int getStatus() { return status_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasScreen) return false;
      if (!hasStatus) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasScreen()) {
        output.writeInt32(1, getScreen());
      }
      if (hasStatus()) {
        output.writeInt32(2, getStatus());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasScreen()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getScreen());
      }
      if (hasStatus()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getStatus());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static D3.PartyMessage.PartyMessage.ScreenStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static D3.PartyMessage.PartyMessage.ScreenStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static D3.PartyMessage.PartyMessage.ScreenStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static D3.PartyMessage.PartyMessage.ScreenStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static D3.PartyMessage.PartyMessage.ScreenStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static D3.PartyMessage.PartyMessage.ScreenStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static D3.PartyMessage.PartyMessage.ScreenStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static D3.PartyMessage.PartyMessage.ScreenStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static D3.PartyMessage.PartyMessage.ScreenStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static D3.PartyMessage.PartyMessage.ScreenStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(D3.PartyMessage.PartyMessage.ScreenStatus prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private D3.PartyMessage.PartyMessage.ScreenStatus result;
      
      // Construct using D3.PartyMessage.PartyMessage.ScreenStatus.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new D3.PartyMessage.PartyMessage.ScreenStatus();
        return builder;
      }
      
      protected D3.PartyMessage.PartyMessage.ScreenStatus internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new D3.PartyMessage.PartyMessage.ScreenStatus();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return D3.PartyMessage.PartyMessage.ScreenStatus.getDescriptor();
      }
      
      public D3.PartyMessage.PartyMessage.ScreenStatus getDefaultInstanceForType() {
        return D3.PartyMessage.PartyMessage.ScreenStatus.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public D3.PartyMessage.PartyMessage.ScreenStatus build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private D3.PartyMessage.PartyMessage.ScreenStatus buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public D3.PartyMessage.PartyMessage.ScreenStatus buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        D3.PartyMessage.PartyMessage.ScreenStatus returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof D3.PartyMessage.PartyMessage.ScreenStatus) {
          return mergeFrom((D3.PartyMessage.PartyMessage.ScreenStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(D3.PartyMessage.PartyMessage.ScreenStatus other) {
        if (other == D3.PartyMessage.PartyMessage.ScreenStatus.getDefaultInstance()) return this;
        if (other.hasScreen()) {
          setScreen(other.getScreen());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setScreen(input.readInt32());
              break;
            }
            case 16: {
              setStatus(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // required int32 screen = 1;
      public boolean hasScreen() {
        return result.hasScreen();
      }
      public int getScreen() {
        return result.getScreen();
      }
      public Builder setScreen(int value) {
        result.hasScreen = true;
        result.screen_ = value;
        return this;
      }
      public Builder clearScreen() {
        result.hasScreen = false;
        result.screen_ = 0;
        return this;
      }
      
      // required int32 status = 2;
      public boolean hasStatus() {
        return result.hasStatus();
      }
      public int getStatus() {
        return result.getStatus();
      }
      public Builder setStatus(int value) {
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder clearStatus() {
        result.hasStatus = false;
        result.status_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:D3.PartyMessage.ScreenStatus)
    }
    
    static {
      defaultInstance = new ScreenStatus(true);
      D3.PartyMessage.PartyMessage.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:D3.PartyMessage.ScreenStatus)
  }
  
  public static final class SearchForPublicGameParams extends
      com.google.protobuf.GeneratedMessage {
    // Use SearchForPublicGameParams.newBuilder() to construct.
    private SearchForPublicGameParams() {
      initFields();
    }
    private SearchForPublicGameParams(boolean noInit) {}
    
    private static final SearchForPublicGameParams defaultInstance;
    public static SearchForPublicGameParams getDefaultInstance() {
      return defaultInstance;
    }
    
    public SearchForPublicGameParams getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return D3.PartyMessage.PartyMessage.internal_static_D3_PartyMessage_SearchForPublicGameParams_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return D3.PartyMessage.PartyMessage.internal_static_D3_PartyMessage_SearchForPublicGameParams_fieldAccessorTable;
    }
    
    // optional sint64 start_time = 1;
    public static final int START_TIME_FIELD_NUMBER = 1;
    private boolean hasStartTime;
    private long startTime_ = 0L;
    public boolean hasStartTime() { return hasStartTime; }
    public long getStartTime() { return startTime_; }
    
    // optional uint32 seconds_to_search = 2;
    public static final int SECONDS_TO_SEARCH_FIELD_NUMBER = 2;
    private boolean hasSecondsToSearch;
    private int secondsToSearch_ = 0;
    public boolean hasSecondsToSearch() { return hasSecondsToSearch; }
    public int getSecondsToSearch() { return secondsToSearch_; }
    
    // optional .D3.OnlineService.GameCreateParams game_params = 3;
    public static final int GAME_PARAMS_FIELD_NUMBER = 3;
    private boolean hasGameParams;
    private D3.OnlineService.OnlineService.GameCreateParams gameParams_;
    public boolean hasGameParams() { return hasGameParams; }
    public D3.OnlineService.OnlineService.GameCreateParams getGameParams() { return gameParams_; }
    
    // optional int32 remove_reason = 4;
    public static final int REMOVE_REASON_FIELD_NUMBER = 4;
    private boolean hasRemoveReason;
    private int removeReason_ = 0;
    public boolean hasRemoveReason() { return hasRemoveReason; }
    public int getRemoveReason() { return removeReason_; }
    
    private void initFields() {
      gameParams_ = D3.OnlineService.OnlineService.GameCreateParams.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (hasGameParams()) {
        if (!getGameParams().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasStartTime()) {
        output.writeSInt64(1, getStartTime());
      }
      if (hasSecondsToSearch()) {
        output.writeUInt32(2, getSecondsToSearch());
      }
      if (hasGameParams()) {
        output.writeMessage(3, getGameParams());
      }
      if (hasRemoveReason()) {
        output.writeInt32(4, getRemoveReason());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasStartTime()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(1, getStartTime());
      }
      if (hasSecondsToSearch()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getSecondsToSearch());
      }
      if (hasGameParams()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getGameParams());
      }
      if (hasRemoveReason()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, getRemoveReason());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static D3.PartyMessage.PartyMessage.SearchForPublicGameParams parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static D3.PartyMessage.PartyMessage.SearchForPublicGameParams parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static D3.PartyMessage.PartyMessage.SearchForPublicGameParams parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static D3.PartyMessage.PartyMessage.SearchForPublicGameParams parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static D3.PartyMessage.PartyMessage.SearchForPublicGameParams parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static D3.PartyMessage.PartyMessage.SearchForPublicGameParams parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static D3.PartyMessage.PartyMessage.SearchForPublicGameParams parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static D3.PartyMessage.PartyMessage.SearchForPublicGameParams parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static D3.PartyMessage.PartyMessage.SearchForPublicGameParams parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static D3.PartyMessage.PartyMessage.SearchForPublicGameParams parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(D3.PartyMessage.PartyMessage.SearchForPublicGameParams prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private D3.PartyMessage.PartyMessage.SearchForPublicGameParams result;
      
      // Construct using D3.PartyMessage.PartyMessage.SearchForPublicGameParams.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new D3.PartyMessage.PartyMessage.SearchForPublicGameParams();
        return builder;
      }
      
      protected D3.PartyMessage.PartyMessage.SearchForPublicGameParams internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new D3.PartyMessage.PartyMessage.SearchForPublicGameParams();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return D3.PartyMessage.PartyMessage.SearchForPublicGameParams.getDescriptor();
      }
      
      public D3.PartyMessage.PartyMessage.SearchForPublicGameParams getDefaultInstanceForType() {
        return D3.PartyMessage.PartyMessage.SearchForPublicGameParams.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public D3.PartyMessage.PartyMessage.SearchForPublicGameParams build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private D3.PartyMessage.PartyMessage.SearchForPublicGameParams buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public D3.PartyMessage.PartyMessage.SearchForPublicGameParams buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        D3.PartyMessage.PartyMessage.SearchForPublicGameParams returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof D3.PartyMessage.PartyMessage.SearchForPublicGameParams) {
          return mergeFrom((D3.PartyMessage.PartyMessage.SearchForPublicGameParams)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(D3.PartyMessage.PartyMessage.SearchForPublicGameParams other) {
        if (other == D3.PartyMessage.PartyMessage.SearchForPublicGameParams.getDefaultInstance()) return this;
        if (other.hasStartTime()) {
          setStartTime(other.getStartTime());
        }
        if (other.hasSecondsToSearch()) {
          setSecondsToSearch(other.getSecondsToSearch());
        }
        if (other.hasGameParams()) {
          mergeGameParams(other.getGameParams());
        }
        if (other.hasRemoveReason()) {
          setRemoveReason(other.getRemoveReason());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setStartTime(input.readSInt64());
              break;
            }
            case 16: {
              setSecondsToSearch(input.readUInt32());
              break;
            }
            case 26: {
              D3.OnlineService.OnlineService.GameCreateParams.Builder subBuilder = D3.OnlineService.OnlineService.GameCreateParams.newBuilder();
              if (hasGameParams()) {
                subBuilder.mergeFrom(getGameParams());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGameParams(subBuilder.buildPartial());
              break;
            }
            case 32: {
              setRemoveReason(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional sint64 start_time = 1;
      public boolean hasStartTime() {
        return result.hasStartTime();
      }
      public long getStartTime() {
        return result.getStartTime();
      }
      public Builder setStartTime(long value) {
        result.hasStartTime = true;
        result.startTime_ = value;
        return this;
      }
      public Builder clearStartTime() {
        result.hasStartTime = false;
        result.startTime_ = 0L;
        return this;
      }
      
      // optional uint32 seconds_to_search = 2;
      public boolean hasSecondsToSearch() {
        return result.hasSecondsToSearch();
      }
      public int getSecondsToSearch() {
        return result.getSecondsToSearch();
      }
      public Builder setSecondsToSearch(int value) {
        result.hasSecondsToSearch = true;
        result.secondsToSearch_ = value;
        return this;
      }
      public Builder clearSecondsToSearch() {
        result.hasSecondsToSearch = false;
        result.secondsToSearch_ = 0;
        return this;
      }
      
      // optional .D3.OnlineService.GameCreateParams game_params = 3;
      public boolean hasGameParams() {
        return result.hasGameParams();
      }
      public D3.OnlineService.OnlineService.GameCreateParams getGameParams() {
        return result.getGameParams();
      }
      public Builder setGameParams(D3.OnlineService.OnlineService.GameCreateParams value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasGameParams = true;
        result.gameParams_ = value;
        return this;
      }
      public Builder setGameParams(D3.OnlineService.OnlineService.GameCreateParams.Builder builderForValue) {
        result.hasGameParams = true;
        result.gameParams_ = builderForValue.build();
        return this;
      }
      public Builder mergeGameParams(D3.OnlineService.OnlineService.GameCreateParams value) {
        if (result.hasGameParams() &&
            result.gameParams_ != D3.OnlineService.OnlineService.GameCreateParams.getDefaultInstance()) {
          result.gameParams_ =
            D3.OnlineService.OnlineService.GameCreateParams.newBuilder(result.gameParams_).mergeFrom(value).buildPartial();
        } else {
          result.gameParams_ = value;
        }
        result.hasGameParams = true;
        return this;
      }
      public Builder clearGameParams() {
        result.hasGameParams = false;
        result.gameParams_ = D3.OnlineService.OnlineService.GameCreateParams.getDefaultInstance();
        return this;
      }
      
      // optional int32 remove_reason = 4;
      public boolean hasRemoveReason() {
        return result.hasRemoveReason();
      }
      public int getRemoveReason() {
        return result.getRemoveReason();
      }
      public Builder setRemoveReason(int value) {
        result.hasRemoveReason = true;
        result.removeReason_ = value;
        return this;
      }
      public Builder clearRemoveReason() {
        result.hasRemoveReason = false;
        result.removeReason_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:D3.PartyMessage.SearchForPublicGameParams)
    }
    
    static {
      defaultInstance = new SearchForPublicGameParams(true);
      D3.PartyMessage.PartyMessage.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:D3.PartyMessage.SearchForPublicGameParams)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_D3_PartyMessage_ScreenStatus_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_D3_PartyMessage_ScreenStatus_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_D3_PartyMessage_SearchForPublicGameParams_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_D3_PartyMessage_SearchForPublicGameParams_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022PartyMessage.proto\022\017D3.PartyMessage\032\023O" +
      "nlineService.proto\".\n\014ScreenStatus\022\016\n\006sc" +
      "reen\030\001 \002(\005\022\016\n\006status\030\002 \002(\005\"\232\001\n\031SearchFor" +
      "PublicGameParams\022\022\n\nstart_time\030\001 \001(\022\022\031\n\021" +
      "seconds_to_search\030\002 \001(\r\0227\n\013game_params\030\003" +
      " \001(\0132\".D3.OnlineService.GameCreateParams" +
      "\022\025\n\rremove_reason\030\004 \001(\005"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_D3_PartyMessage_ScreenStatus_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_D3_PartyMessage_ScreenStatus_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_D3_PartyMessage_ScreenStatus_descriptor,
              new java.lang.String[] { "Screen", "Status", },
              D3.PartyMessage.PartyMessage.ScreenStatus.class,
              D3.PartyMessage.PartyMessage.ScreenStatus.Builder.class);
          internal_static_D3_PartyMessage_SearchForPublicGameParams_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_D3_PartyMessage_SearchForPublicGameParams_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_D3_PartyMessage_SearchForPublicGameParams_descriptor,
              new java.lang.String[] { "StartTime", "SecondsToSearch", "GameParams", "RemoveReason", },
              D3.PartyMessage.PartyMessage.SearchForPublicGameParams.class,
              D3.PartyMessage.PartyMessage.SearchForPublicGameParams.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          D3.OnlineService.OnlineService.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
